var Calla=function(e){"use strict";function t(e){return t=e,i=Function,typeof t==="function"||t instanceof i;var t,i}const i=t(HTMLAudioElement.prototype.setSinkId);class s extends class{constructor(){this.listeners=new Map,this.listenerOptions=new Map}addEventListener(e,i,s){if(t(i)){let t=this.listeners.get(e);t||(t=new Array,this.listeners.set(e,t)),t.find((e=>e===i))||(t.push(i),s&&this.listenerOptions.set(i,s))}}removeEventListener(e,i){if(t(i)){const t=this.listeners.get(e);t&&this.removeListener(t,i)}}removeListener(e,t){const i=e.findIndex((e=>e===t));i>=0&&(!function(e,t){e.splice(t,1)[0]}(e,i),this.listenerOptions.has(t)&&this.listenerOptions.delete(t))}dispatchEvent(e){const t=this.listeners.get(e.type);if(t)for(const i of t){const s=this.listenerOptions.get(i);s&&s.once&&this.removeListener(t,i),i.call(this,e)}return!e.defaultPrevented}}{constructor(){super(...arguments),this.mappedCallbacks=new Map}addEventListener(e,t,i){let s=this.mappedCallbacks.get(t);null==s&&(s=e=>t(e),this.mappedCallbacks.set(t,s)),super.addEventListener(e,s,i)}removeEventListener(e,t){const i=this.mappedCallbacks.get(t);i&&super.removeEventListener(e,i)}}class n extends Event{constructor(e){super(e),this.eventType=e}}class a extends n{constructor(e,t){super(e),this.id=t}}var r,d,o;!function(e){e.Audio="audio",e.Video="video"}(r||(r={})),function(e){e.Added="added",e.Removed="removed",e.Changed="changed"}(d||(d={})),function(e){e.Disconnected="Disconnected",e.Connecting="Connecting",e.Connected="Connected",e.Disconnecting="Disconnecting"}(o||(o={}));function c(e,...t){for(const i of t)for(const t of e)if(i(t))return t;return null}const u="calla:preferredAudioOutputID",h="calla:preferredAudioInputID",l="calla:preferredVideoInputID",p="local-user";let v="localhost"===window.location.hostname||/\bdebug\b/.test(window.location.search);class f extends Event{constructor(){super("audioActivity"),this.id=null,this.isActive=!1,Object.seal(this)}set(e,t){this.id=e,this.isActive=t}}var g;!function(e){e.InConference="in-conference",e.JoiningConference="joining-conference",e.Connected="connected",e.Connecting="connecting",e.Prepaired="prepaired",e.Prepairing="prepairing",e.Unprepared="unprepaired"}(g||(g={}));const I=new f;var m="1.0.0";return console.info("Calla v1.0.0."),e.BaseMetadataClient=class extends s{constructor(e){super(),this.sleepTime=e,this.tasks=new Map}async getNext(e,t){return new Promise((i=>{const s=n=>{n instanceof a&&n.id===t&&(this.removeEventListener(e,s),i(n))};this.addEventListener(e,s)}))}get isConnected(){return this.metadataState===o.Connected}async callThrottled(e,t,...i){if(!this.tasks.has(e)){const n=performance.now(),a=this.callInternal(t,...i);this.tasks.set(e,a),await a;const r=performance.now()-n;this.sleepTime-r>0&&await(s=this.sleepTime,new Promise((e=>{setTimeout(e,s)}))),this.tasks.delete(e)}var s}async callImmediate(e,...t){await this.callInternal(e,...t)}setLocalPose(e,t,i,s,n,a,r,d,o){this.callThrottled("userPosed","userPosed",e,t,i,s,n,a,r,d,o)}setLocalPoseImmediate(e,t,i,s,n,a,r,d,o){this.callImmediate("userPosed",e,t,i,s,n,a,r,d,o)}setLocalPointer(e,t,i,s,n,a,r,d,o,c){this.callThrottled("userPointer"+e,"userPointer",e,t,i,s,n,a,r,d,o,c)}setAvatarEmoji(e){this.callImmediate("setAvatarEmoji",e)}setAvatarURL(e){this.callImmediate("avatarChanged",e)}emote(e){this.callImmediate("emote",e)}chat(e){this.callImmediate("chat",e)}},e.BaseTeleconferenceClient=class extends s{constructor(e,t,i=!0,s=!1){super(),this.needsAudioDevice=i,this.needsVideoDevice=s,this.localUserID=null,this.localUserName=null,this.roomName=null,this._connectionState=o.Disconnected,this._conferenceState=o.Disconnected,this.hasAudioPermission=!1,this.hasVideoPermission=!1,this.fetcher=e,this.audio=t,this.addEventListener("serverConnected",this.setConnectionState.bind(this,o.Connected)),this.addEventListener("serverFailed",this.setConnectionState.bind(this,o.Disconnected)),this.addEventListener("serverDisconnected",this.setConnectionState.bind(this,o.Disconnected)),this.addEventListener("conferenceJoined",this.setConferenceState.bind(this,o.Connected)),this.addEventListener("conferenceFailed",this.setConferenceState.bind(this,o.Disconnected)),this.addEventListener("conferenceRestored",this.setConferenceState.bind(this,o.Connected)),this.addEventListener("conferenceLeft",this.setConferenceState.bind(this,o.Disconnected))}toggleLogging(){v=!v}get connectionState(){return this._connectionState}setConnectionState(e){this._connectionState=e}get conferenceState(){return this._conferenceState}setConferenceState(e){this._conferenceState=e}dispatchEvent(e){return e instanceof a&&(null==e.id||"local"===e.id)&&(this.localUserID===p?e.id=null:e.id=this.localUserID),super.dispatchEvent(e)}async getNext(e,t){return new Promise((i=>{const s=n=>{n instanceof a&&n.id===t&&(this.removeEventListener(e,s),i(n))};this.addEventListener(e,s)}))}get preferredAudioInputID(){return localStorage.getItem(h)}set preferredAudioInputID(e){localStorage.setItem(h,e)}get preferredVideoInputID(){return localStorage.getItem(l)}set preferredVideoInputID(e){localStorage.setItem(l,e)}async setPreferredDevices(){await this.setPreferredAudioInput(!0),await this.setPreferredVideoInput(!1),await this.setPreferredAudioOutput(!0)}async getPreferredAudioInput(e){return c(await this.getAudioInputDevices(),(e=>e.deviceId===this.preferredAudioInputID),(e=>"communications"===e.deviceId),(e=>"default"===e.deviceId),(t=>e&&t.deviceId.length>0))}async setPreferredAudioInput(e){const t=await this.getPreferredAudioInput(e);t&&await this.setAudioInputDevice(t)}async getPreferredVideoInput(e){return c(await this.getVideoInputDevices(),(e=>e.deviceId===this.preferredVideoInputID),(t=>e&&t&&/front/i.test(t.label)),(t=>e&&t.deviceId.length>0))}async setPreferredVideoInput(e){const t=await this.getPreferredVideoInput(e);t&&await this.setVideoInputDevice(t)}async getDevices(){let e=null;for(let t=0;t<3;++t){e=await navigator.mediaDevices.enumerateDevices();for(const t of e)t.deviceId.length>0&&(this.hasAudioPermission=this.hasAudioPermission||"audioinput"===t.kind&&t.label.length>0,this.hasVideoPermission=this.hasVideoPermission||"videoinput"===t.kind&&t.label.length>0);if(this.hasAudioPermission)break;try{await navigator.mediaDevices.getUserMedia({audio:this.needsAudioDevice&&!this.hasAudioPermission,video:this.needsVideoDevice&&!this.hasVideoPermission})}catch(e){console.warn(e)}}return e||[]}async getMediaPermissions(){return await this.getDevices(),{audio:this.hasAudioPermission,video:this.hasVideoPermission}}async getAvailableDevices(e=!1){let t=await this.getDevices();return e&&(t=function(e){const t=[];for(let i=0;i<e.length;++i){const s=e[i];let n=!1;for(let e=0;e<t.length&&!n;++e){const i=t[e];n=s.kind===i.kind&&i.label.indexOf(s.label)>0}n||t.push(s)}return t}(t)),{audioOutput:i?t.filter((e=>"audiooutput"===e.kind)):[],audioInput:t.filter((e=>"audioinput"===e.kind)),videoInput:t.filter((e=>"videoinput"===e.kind))}}async getAudioInputDevices(e=!1){const t=await this.getAvailableDevices(e);return t&&t.audioInput||[]}async getVideoInputDevices(e=!1){const t=await this.getAvailableDevices(e);return t&&t.videoInput||[]}async setAudioOutputDevice(e){i&&(this.preferredAudioOutputID=e&&e.deviceId||null)}async getAudioOutputDevices(e=!1){if(!i)return[];const t=await this.getAvailableDevices(e);return t&&t.audioOutput||[]}async getCurrentAudioOutputDevice(){if(!i)return null;const e=this.audio.getAudioOutputDeviceID(),t=(await this.getAudioOutputDevices()).filter((t=>null!=e&&t.deviceId===e||null==e&&t.deviceId===this.preferredAudioOutputID));return 0===t.length?null:t[0]}get preferredAudioOutputID(){return localStorage.getItem(u)}set preferredAudioOutputID(e){localStorage.setItem(u,e)}async getPreferredAudioOutput(e){return c(await this.getAudioOutputDevices(),(e=>e.deviceId===this.preferredAudioOutputID),(e=>"communications"===e.deviceId),(e=>"default"===e.deviceId),(t=>e&&t.deviceId.length>0))}async setPreferredAudioOutput(e){const t=await this.getPreferredAudioOutput(e);t&&await this.setAudioOutputDevice(t)}async setAudioInputDevice(e){this.preferredAudioInputID=e&&e.deviceId||null}async setVideoInputDevice(e){this.preferredVideoInputID=e&&e.deviceId||null}async connect(){this.setConnectionState(o.Connecting)}async join(e,t){this.setConferenceState(o.Connecting)}async leave(){this.setConferenceState(o.Disconnecting)}async disconnect(){this.setConnectionState(o.Disconnecting)}},e.Client=class extends s{constructor(e,t,i){super(),this._fetcher=e,this._tele=t,this._meta=i,this.isAudioMuted=null,this.isVideoMuted=null;const s=this.dispatchEvent.bind(this);this._tele.addEventListener("serverConnected",s),this._tele.addEventListener("serverDisconnected",s),this._tele.addEventListener("serverFailed",s),this._tele.addEventListener("conferenceFailed",s),this._tele.addEventListener("conferenceRestored",s),this._tele.addEventListener("audioMuteStatusChanged",s),this._tele.addEventListener("videoMuteStatusChanged",s),this._tele.addEventListener("conferenceJoined",(async e=>{const t=this.audio.setLocalUserID(e.id);e.pose=t.pose,this.dispatchEvent(e),await this.setPreferredDevices()})),this._tele.addEventListener("conferenceLeft",(e=>{this.audio.setLocalUserID(e.id),this.dispatchEvent(e)})),this._tele.addEventListener("participantJoined",(async e=>{e.source=this.audio.createUser(e.id),this.dispatchEvent(e)})),this._tele.addEventListener("participantLeft",(e=>{this.dispatchEvent(e),this.audio.removeUser(e.id)})),this._tele.addEventListener("userNameChanged",s),this._tele.addEventListener("videoAdded",s),this._tele.addEventListener("videoRemoved",s),this._tele.addEventListener("audioAdded",(e=>{const t=this.audio.getUser(e.id);if(t){let i=t.streams.get(e.kind);i&&t.streams.delete(e.kind),i=e.stream,t.streams.set(e.kind,i),e.id!==this._tele.localUserID&&this.audio.setUserStream(e.id,i),this.dispatchEvent(e)}})),this._tele.addEventListener("audioRemoved",(e=>{const t=this.audio.getUser(e.id);t&&t.streams.has(e.kind)&&t.streams.delete(e.kind),e.id!==this._tele.localUserID&&this.audio.setUserStream(e.id,null),this.dispatchEvent(e)})),this._meta.addEventListener("avatarChanged",s),this._meta.addEventListener("chat",s),this._meta.addEventListener("emote",s),this._meta.addEventListener("setAvatarEmoji",s);const n=e=>{const t=this.audio.getUserOffset(e.id);t&&(e.px+=t[0],e.py+=t[1],e.pz+=t[2]),this.dispatchEvent(e)};this._meta.addEventListener("userPointer",n),this._meta.addEventListener("userPosed",(e=>{this.audio.setUserPose(e.id,e.px,e.py,e.pz,e.fx,e.fy,e.fz,e.ux,e.uy,e.uz),n(e)})),this.audio.addEventListener("audioActivity",(e=>{I.id=e.id,I.isActive=e.isActive,this.dispatchEvent(I)}));const a=this.dispose.bind(this);window.addEventListener("beforeunload",a),window.addEventListener("unload",a),window.addEventListener("pagehide",a),Object.seal(this)}get connectionState(){return this._tele.connectionState}get conferenceState(){return this._tele.conferenceState}get fetcher(){return this._fetcher}get tele(){return this._tele}get meta(){return this._meta}get audio(){return this._tele.audio}get preferredAudioOutputID(){return this._tele.preferredAudioOutputID}set preferredAudioOutputID(e){this._tele.preferredAudioOutputID=e}get preferredAudioInputID(){return this._tele.preferredAudioInputID}set preferredAudioInputID(e){this._tele.preferredAudioInputID=e}get preferredVideoInputID(){return this._tele.preferredVideoInputID}set preferredVideoInputID(e){this._tele.preferredVideoInputID=e}async getCurrentAudioOutputDevice(){return await this._tele.getCurrentAudioOutputDevice()}async getMediaPermissions(){return await this._tele.getMediaPermissions()}async getAudioOutputDevices(e){return await this._tele.getAudioOutputDevices(e)}async getAudioInputDevices(e){return await this._tele.getAudioInputDevices(e)}async getVideoInputDevices(e){return await this._tele.getVideoInputDevices(e)}dispose(){this.leave(),this.disconnect()}get offsetRadius(){return this.audio.offsetRadius}set offsetRadius(e){this.audio.offsetRadius=e}setLocalPose(e,t,i,s,n,a,r,d,o){this.audio.setUserPose(this.localUserID,e,t,i,s,n,a,r,d,o,0),this._meta.setLocalPose(e,t,i,s,n,a,r,d,o)}setLocalPoseImmediate(e,t,i,s,n,a,r,d,o){this.audio.setUserPose(this.localUserID,e,t,i,s,n,a,r,d,o,0),this._meta.setLocalPoseImmediate(e,t,i,s,n,a,r,d,o)}setLocalPointer(e,t,i,s,n,a,r,d,o,c){this._meta.setLocalPointer(e,t,i,s,n,a,r,d,o,c)}setAvatarEmoji(e){this._meta.setAvatarEmoji(e)}setAvatarURL(e){this._meta.setAvatarURL(e)}emote(e){this._meta.emote(e)}chat(e){this._meta.chat(e)}async setPreferredDevices(){await this._tele.setPreferredDevices()}async setAudioInputDevice(e){await this._tele.setAudioInputDevice(e)}async setVideoInputDevice(e){await this._tele.setVideoInputDevice(e)}async getCurrentAudioInputDevice(){return await this._tele.getCurrentAudioInputDevice()}async getCurrentVideoInputDevice(){return await this._tele.getCurrentVideoInputDevice()}async toggleAudioMuted(){return await this._tele.toggleAudioMuted()}async toggleVideoMuted(){return await this._tele.toggleVideoMuted()}async getAudioMuted(){return await this._tele.getAudioMuted()}async getVideoMuted(){return await this._tele.getVideoMuted()}get metadataState(){return this._meta.metadataState}get localUserID(){return this._tele.localUserID}get localUserName(){return this._tele.localUserName}get roomName(){return this._tele.roomName}userExists(e){return this._tele.userExists(e)}getUserNames(){return this._tele.getUserNames()}async connect(){await this._tele.connect(),this._tele.connectionState===o.Connected&&await this._meta.connect()}async join(e){await this._tele.join(e),this._tele.conferenceState===o.Connected&&await this._meta.join(e)}async identify(e){await this._tele.identify(e),await this._meta.identify(this.localUserID)}async leave(){await this._meta.leave(),await this._tele.leave()}async disconnect(){await this._meta.disconnect(),await this._tele.disconnect()}update(){this.audio.update()}async setAudioOutputDevice(e){this._tele.setAudioOutputDevice(e),i&&await this.audio.setAudioOutputDeviceID(this._tele.preferredAudioOutputID)}async setAudioMuted(e){let t=this.isAudioMuted;return e!==t&&(t=await this.toggleAudioMuted()),t}async setVideoMuted(e){let t=this.isVideoMuted;return e!==t&&(t=await this.toggleVideoMuted()),t}},e.DEFAULT_LOCAL_USER_ID=p,e.addLogger=function(e,t){e.addEventListener(t,((...e)=>{v&&console.log(">== CALLA ==<",t,...e)}))},e.canChangeAudioOutput=i,e.version=m,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
//# sourceMappingURL=calla.min.js.map
