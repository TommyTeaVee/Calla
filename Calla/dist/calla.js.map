{"version":3,"file":"calla.js","sources":["../../Kudzu/arrays/arrayScan.ts","../../Kudzu/typeChecks.ts","../../Kudzu/arrays/arrayBinarySearch.ts","../../Kudzu/arrays/arrayInsertAt.ts","../../Kudzu/arrays/arraySortedInsert.ts","../../Kudzu/arrays/arrayRemoveAt.ts","../../Kudzu/events/EventBase.ts","../../Kudzu/html/attrs.ts","../../Kudzu/html/css.ts","../../Kudzu/html/tags.ts","../devices/DeviceManager.ts","../CallaEvents.ts","../ConnectionState.ts","../meta/BaseMetadataClient.ts","../tele/BaseTeleconferenceClient.ts","../../Kudzu/html/flags.ts","../../Kudzu/events/isModifierless.ts","../../Kudzu/debugging/models.ts","../../Kudzu/debugging/WindowLogger.ts","../../Kudzu/debugging/Logger.ts","../audio/AudioActivityEvent.ts","../Calla.ts","../index.ts"],"sourcesContent":["/**\r\n * Scans through a series of filters to find an item that matches\r\n * any of the filters. The first item of the first filter that matches\r\n * will be returned.\r\n */\r\nexport function arrayScan<T>(arr: T[], ...tests: ((val: T) => boolean)[]) {\r\n    for (const test of tests) {\r\n        for (const item of arr) {\r\n            if (test(item)) {\r\n                return item;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}","function t(o: any, s: string, c: Function) {\r\n    return typeof o === s\r\n        || o instanceof c;\r\n}\r\n\r\nexport function isFunction(obj: any): obj is Function {\r\n    return t(obj, \"function\", Function);\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n    return t(obj, \"string\", String);\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n    return t(obj, \"boolean\", Boolean);\r\n}\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n    return t(obj, \"number\", Number);\r\n}\r\n\r\n/**\r\n * Check a value to see if it is of a number type\r\n * and is not the special NaN value.\r\n */\r\nexport function isGoodNumber(obj: any): obj is number {\r\n    return isNumber(obj)\r\n        && !Number.isNaN(obj);\r\n}\r\n\r\nexport function isObject(obj: any): obj is object {\r\n    return isDefined(obj)\r\n        && t(obj, \"object\", Object);\r\n}\r\n\r\nexport function isDate(obj: any): obj is Date {\r\n    return obj instanceof Date;\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n    return obj instanceof Array;\r\n}\r\n\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n    return obj instanceof HTMLElement;\r\n}\r\n\r\nexport function assertNever(x: never, msg?: string): never {\r\n    throw new Error((msg || \"Unexpected object: \") + x);\r\n}\r\n\r\nexport function isNullOrUndefined<T>(obj: T | null | undefined): obj is null | undefined {\r\n    return obj === null\r\n        || obj === undefined;\r\n}\r\n\r\nexport function isDefined<T>(obj: T | null | undefined): obj is T {\r\n    return !isNullOrUndefined(obj);\r\n}\r\n\r\nexport function isEventListener(obj: EventListenerOrEventListenerObject): obj is EventListener {\r\n    return isFunction(obj);\r\n}\r\n\r\nexport function isEventListenerObject(obj: EventListenerOrEventListenerObject): obj is EventListenerObject {\r\n    return !isEventListener(obj);\r\n}\r\n\r\nexport function isArrayBufferView(obj: any): obj is ArrayBufferView {\r\n    return obj instanceof Uint8Array\r\n        || obj instanceof Uint8ClampedArray\r\n        || obj instanceof Int8Array\r\n        || obj instanceof Uint16Array\r\n        || obj instanceof Int16Array\r\n        || obj instanceof Uint32Array\r\n        || obj instanceof Int32Array\r\n        || obj instanceof BigUint64Array\r\n        || obj instanceof BigInt64Array\r\n        || obj instanceof Float32Array\r\n        || obj instanceof Float64Array;\r\n}\r\n\r\nexport function isXHRBodyInit(obj: any): obj is BodyInit {\r\n    return isString(obj)\r\n        || obj instanceof Blob\r\n        || obj instanceof FormData\r\n        || obj instanceof ArrayBuffer\r\n        || obj instanceof Document\r\n        || isArrayBufferView(obj)\r\n        || obj instanceof ReadableStream;\r\n}","import { isDefined, isNullOrUndefined } from \"../typeChecks\";\r\n\r\nfunction defaultKeySelector<T>(obj: T): any {\r\n    return obj;\r\n}\r\n\r\nexport function arrayBinarySearchFind<T, V>(arr: T[], key: V, keySelector: (obj: T) => V): T | undefined {\r\n    const idx = arrayBinarySearchByKey(arr, key, keySelector);\r\n    if (Number.isInteger(idx)) {\r\n        return arr[idx - 1];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Performs a binary search on a list to find where the item should be inserted.\r\n *\r\n * If the item is found, the returned index will be an exact integer.\r\n *\r\n * If the item is not found, the returned insertion index will be 0.5 greater than\r\n * the index at which it should be inserted.\r\n */\r\nexport function arrayBinarySearchByKey<T, V>(arr: T[], itemKey: V, keySelector: (obj: T) => V): number {\r\n    let left = 0;\r\n    let right = arr.length;\r\n    let idx = Math.floor((left + right) / 2);\r\n    let found = false;\r\n    while (left < right && idx < arr.length) {\r\n        const compareTo = arr[idx];\r\n        const compareToKey = isNullOrUndefined(compareTo)\r\n            ? null\r\n            : keySelector(compareTo);\r\n        if (isDefined(compareToKey)\r\n            && itemKey < compareToKey) {\r\n            right = idx;\r\n        }\r\n        else {\r\n            if (itemKey === compareToKey) {\r\n                found = true;\r\n            }\r\n            left = idx + 1;\r\n        }\r\n\r\n        idx = Math.floor((left + right) / 2);\r\n    }\r\n\r\n    if (!found) {\r\n        idx += 0.5;\r\n    }\r\n\r\n    return idx;\r\n}\r\n\r\n/**\r\n * Performs a binary search on a list to find where the item should be inserted.\r\n *\r\n * If the item is found, the returned index will be an exact integer.\r\n *\r\n * If the item is not found, the returned insertion index will be 0.5 greater than\r\n * the index at which it should be inserted.\r\n */\r\nexport function arrayBinarySearch<T, V>(arr: T[], item: T, keySelector?: (obj: T) => V): number {\r\n    keySelector = keySelector || defaultKeySelector;\r\n    const itemKey = keySelector(item);\r\n    return arrayBinarySearchByKey(arr, itemKey, keySelector);\r\n}","ï»¿/**\r\n * Inserts an item at the given index into an array.\r\n * @param arr\r\n * @param item\r\n * @param idx\r\n */\r\n\r\nexport function arrayInsertAt<T>(arr: T[], item: T, idx: number) {\r\n    arr.splice(idx, 0, item);\r\n}\r\n","import { isBoolean, isNullOrUndefined, isFunction } from \"../typeChecks\";\r\nimport { arrayBinarySearch } from \"./arrayBinarySearch\";\r\nimport { arrayInsertAt } from \"./arrayInsertAt\";\r\n\r\n/**\r\n * Performs an insert operation that maintains the sort\r\n * order of the array, returning the index at which the\r\n * item was inserted.\r\n */\r\nexport function arraySortedInsert<T>(arr: T[], item: T): number;\r\nexport function arraySortedInsert<T, V>(arr: T[], item: T, keySelector?: (obj: T) => V): number;\r\nexport function arraySortedInsert<T>(arr: T[], item: T, allowDuplicates?: boolean): number;\r\nexport function arraySortedInsert<T, V>(arr: T[], item: T, keySelector?: (obj: T) => V, allowDuplicates?: boolean): number;\r\nexport function arraySortedInsert<T, V>(arr: T[], item: T, keySelector?: ((obj: T) => V) | boolean, allowDuplicates?: boolean): number {\r\n    let ks: ((obj: T) => V) | undefined;\r\n\r\n    if (isFunction(keySelector)) {\r\n        ks = keySelector;\r\n    }\r\n    else if (isBoolean(keySelector)) {\r\n        allowDuplicates = keySelector;\r\n    }\r\n\r\n    if (isNullOrUndefined(allowDuplicates)) {\r\n        allowDuplicates = true;\r\n    }\r\n\r\n    let idx = arrayBinarySearch(arr, item, ks);\r\n    const found = (idx % 1) === 0;\r\n    idx = idx | 0;\r\n    if (!found || allowDuplicates) {\r\n        arrayInsertAt(arr, item, idx);\r\n    }\r\n\r\n    return idx;\r\n}\r\n\r\n/**\r\n * Creates a new array that is sorted by the key extracted\r\n * by the keySelector callback, not modifying the input array,\r\n * (unlike JavaScript's own Array.prototype.sort).\r\n * @param arr\r\n * @param keySelector\r\n */\r\nexport function arraySortByKey<T, V>(arr: ReadonlyArray<T>, keySelector: (obj: T) => V): T[] {\r\n    const newArr = new Array<T>();\r\n    for (const obj of arr) {\r\n        arraySortedInsert(newArr, obj, keySelector);\r\n    }\r\n\r\n    return newArr;\r\n}","/**\r\n * Removes an item at the given index from an array.\r\n */\r\nexport function arrayRemoveAt<T>(arr: T[], idx: number) {\r\n    return arr.splice(idx, 1)[0];\r\n}","import { arrayRemoveAt } from \"../arrays/arrayRemoveAt\";\r\nimport { isBoolean, isDefined, isFunction } from \"../typeChecks\";\r\n\r\nexport class EventBase implements EventTarget {\r\n    private listeners = new Map<string, Function[]>();\r\n    private listenerOptions = new Map<Function, boolean | AddEventListenerOptions>();\r\n\r\n    addEventListener(type: string, callback: (evt: Event) => any, options?: boolean | AddEventListenerOptions): void {\r\n        if (isFunction(callback)) {\r\n            let listeners = this.listeners.get(type);\r\n            if (!listeners) {\r\n                listeners = new Array<Function>();\r\n                this.listeners.set(type, listeners);\r\n            }\r\n\r\n            if (!listeners.find(c => c === callback)) {\r\n                listeners.push(callback);\r\n\r\n                if (options) {\r\n                    this.listenerOptions.set(callback, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeEventListener(type: string, callback: (evt: Event) => any) {\r\n        if (isFunction(callback)) {\r\n            const listeners = this.listeners.get(type);\r\n            if (listeners) {\r\n                this.removeListener(listeners, callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeListener(listeners: Function[], callback: Function) {\r\n        const idx = listeners.findIndex(c => c === callback);\r\n        if (idx >= 0) {\r\n            arrayRemoveAt(listeners, idx);\r\n            if (this.listenerOptions.has(callback)) {\r\n                this.listenerOptions.delete(callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    dispatchEvent(evt: Event): boolean {\r\n        const listeners = this.listeners.get(evt.type);\r\n        if (listeners) {\r\n            for (const callback of listeners) {\r\n                const options = this.listenerOptions.get(callback);\r\n                if (isDefined(options)\r\n                    && !isBoolean(options)\r\n                    && options.once) {\r\n                    this.removeListener(listeners, callback);\r\n                }\r\n\r\n                callback.call(this, evt);\r\n            }\r\n        }\r\n        return !evt.defaultPrevented;\r\n    }\r\n}\r\n\r\nexport class TypedEvent<T> extends Event {\r\n    constructor(type: T & string) {\r\n        super(type);\r\n    }\r\n}\r\n\r\nexport class TypedEventBase<EventsT> extends EventBase {\r\n    private mappedCallbacks = new Map<Function, (evt: Event) => any>();\r\n\r\n    addEventListener<K extends keyof EventsT, V extends TypedEvent<K> & EventsT[K]>(type: K & string, callback: (evt: V) => any, options?: boolean | AddEventListenerOptions): void {\r\n        if (this.checkAddEventListener(type, callback)) {\r\n            let mappedCallback = this.mappedCallbacks.get(callback);\r\n            if (mappedCallback == null) {\r\n                mappedCallback = (evt: Event) => callback(evt as V);\r\n                this.mappedCallbacks.set(callback, mappedCallback);\r\n            }\r\n\r\n            super.addEventListener(type, mappedCallback, options);\r\n        }\r\n    }\r\n\r\n    protected checkAddEventListener<T extends Event>(_type: string, _callback: (evt: T) => any): boolean {\r\n        return true;\r\n    }\r\n\r\n    removeEventListener<K extends keyof EventsT, V extends TypedEvent<K> & EventsT[K]>(type: K & string, callback: (evt: V) => any) {\r\n        const mappedCallback = this.mappedCallbacks.get(callback);\r\n        if (mappedCallback) {\r\n            super.removeEventListener(type, mappedCallback);\r\n        }\r\n    }\r\n\r\n    dispatchEvent<T extends Event>(evt: T): boolean {\r\n        this.onDispatching(evt);\r\n        return super.dispatchEvent(evt);\r\n    }\r\n\r\n    protected onDispatching<T extends Event>(_evt: T) { }\r\n}","import { isBoolean } from \"../typeChecks\";\r\n\r\n/**\r\n * A setter functor for HTML attributes.\r\n **/\r\nexport class Attr {\r\n    readonly tags: readonly string[];\r\n    /**\r\n     * Creates a new setter functor for HTML Attributes\r\n     * @param key - the attribute name.\r\n     * @param value - the value to set for the attribute.\r\n     * @param tags - the HTML tags that support this attribute.\r\n     */\r\n    constructor(\r\n        public readonly key: string,\r\n        public readonly value: any,\r\n        private readonly bySetAttribute: boolean,\r\n        ...tags: string[]) {\r\n        this.tags = tags.map(t => t.toLocaleUpperCase());\r\n        Object.freeze(this);\r\n    }\r\n\r\n    /**\r\n     * Set the attribute value on an HTMLElement\r\n     * @param elem - the element on which to set the attribute.\r\n     */\r\n    apply(elem: HTMLElement) {\r\n        const isDataSet = this.key.startsWith(\"data-\");\r\n        const isValid = this.tags.length === 0\r\n            || this.tags.indexOf(elem.tagName) > -1\r\n            || isDataSet;\r\n\r\n        if (!isValid) {\r\n            console.warn(`Element ${elem.tagName} does not support Attribute ${this.key}`);\r\n        }\r\n        else if (isDataSet) {\r\n            const subkey = this.key.substring(5);\r\n            elem.dataset[subkey] = this.value;\r\n        }\r\n        else if (this.key === \"style\") {\r\n            Object.assign(elem.style, this.value);\r\n        }\r\n        else if (this.bySetAttribute) {\r\n            elem.setAttribute(this.key, this.value);\r\n        }\r\n        else if (this.key in elem) {\r\n            (elem as any)[this.key] = this.value;\r\n        }\r\n        else if (this.value === false) {\r\n            elem.removeAttribute(this.key);\r\n        }\r\n        else if (this.value === true) {\r\n            elem.setAttribute(this.key, \"\");\r\n        }\r\n        else {\r\n            elem.setAttribute(this.key, this.value);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * a list of types the server accepts, typically a file type.\r\n * @param value - the value to set on the attribute.\r\n **/\r\nexport function accept(value: string) { return new Attr(\"accept\", value, false, \"form\", \"input\"); }\r\n\r\n/**\r\n * The accessKey attribute\r\n **/\r\nexport function accessKey(value: string) { return new Attr(\"accessKey\", value, false, \"input\", \"button\"); }\r\n\r\n/**\r\n * specifying the horizontal alignment of the element.\r\n **/\r\nexport function align(value: string) { return new Attr(\"align\", value, false, \"applet\", \"caption\", \"col\", \"colgroup\", \"hr\", \"iframe\", \"img\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"); }\r\n\r\n/**\r\n * Specifies a feature-policy for the iframe.\r\n **/\r\nexport function allow(value: string) { return new Attr(\"allow\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Alternative text in case an image can't be displayed.\r\n **/\r\nexport function alt(value: string) { return new Attr(\"alt\", value, false, \"applet\", \"area\", \"img\", \"input\"); }\r\n\r\n/**\r\n * Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.\r\n **/\r\nexport function ariaActiveDescendant(value: string) { return new Attr(\"ariaActiveDescendant\", value, false); }\r\n\r\n/**\r\n * Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.\r\n **/\r\nexport function ariaAtomic(value: boolean) { return new Attr(\"ariaAtomic\", value, false); }\r\n\r\n/**\r\n * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.\r\n **/\r\nexport function ariaAutoComplete(value: string) { return new Attr(\"ariaAutoComplete\", value, false); }\r\n\r\n/**\r\n * Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.\r\n **/\r\nexport function ariaBusy(value: boolean) { return new Attr(\"ariaBusy\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets. See related aria-pressed and aria-selected.\r\n **/\r\nexport function ariaChecked(value: boolean) { return new Attr(\"ariaChecked\", value, false); }\r\n\r\n/**\r\n * Defines the total number of columns in a table, grid, or treegrid. See related aria-colindex.\r\n  **/\r\nexport function ariaColCount(value: number) { return new Attr(\"ariaColCount\", value, false); }\r\n\r\n/**\r\n * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid. See related aria-colcount and aria-colspan.\r\n  **/\r\nexport function ariaColIndex(value: number) { return new Attr(\"ariaColIndex\", value, false); }\r\n\r\n/**\r\n * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid. See related aria-colindex and aria-rowspan.\r\n  **/\r\nexport function ariaColSpan(value: number) { return new Attr(\"ariaColSpan\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) whose contents or presence are controlled by the current element. See related aria-owns.\r\n  **/\r\nexport function ariaControls(value: string) { return new Attr(\"ariaControls\", value, false); }\r\n\r\n/**\r\n * Indicates the element that represents the current item within a container or set of related elements.\r\n  **/\r\nexport function ariaCurrent(value: string) { return new Attr(\"ariaCurrent\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) that describes the object. See related aria-labelledby.\r\n  **/\r\nexport function ariaDescribedBy(value: string) { return new Attr(\"ariaDescribedBy\", value, false); }\r\n\r\n/**\r\n * Identifies the element that provides a detailed, extended description for the object. See related aria-describedby.\r\n  **/\r\nexport function ariaDetails(value: string) { return new Attr(\"ariaDetails\", value, false); }\r\n\r\n/**\r\n * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable. See related aria-hidden and aria-readonly.\r\n  **/\r\nexport function ariaDisabled(value: boolean) { return new Attr(\"ariaDisabled\", value, false); }\r\n\r\n/**\r\n * Identifies the element that provides an error message for the object. See related aria-invalid and aria-describedby.\r\n  **/\r\nexport function ariaErrorMessage(value: string) { return new Attr(\"ariaErrorMessage\", value, false); }\r\n\r\n/**\r\n * Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.\r\n **/\r\nexport function ariaExpanded(value: boolean) { return new Attr(\"ariaExpanded\", value, false); }\r\n\r\n/**\r\n * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order.\r\n  **/\r\nexport function ariaFlowTo(value: string) { return new Attr(\"ariaFlowTo\", value, false); }\r\n\r\n/**\r\n * Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.\r\n  **/\r\nexport function ariaHasPopup(value: string) { return new Attr(\"ariaHasPopup\", value, false); }\r\n\r\n/**\r\n * Indicates whether the element is exposed to an accessibility API. See related aria-disabled.\r\n **/\r\nexport function ariaHidden(value: boolean) { return new Attr(\"ariaHidden\", value, false); }\r\n\r\n/**\r\n * Indicates the entered value does not conform to the format expected by the application. See related aria-errormessage.\r\n  **/\r\nexport function ariaInvalid(value: string) { return new Attr(\"ariaInvalid\", value, false); }\r\n\r\n/**\r\n * Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.\r\n  **/\r\nexport function ariaKeyShortcuts(value: string) { return new Attr(\"ariaKeyShortcuts\", value, false); }\r\n\r\n/**\r\n * Defines a string value that labels the current element. See related aria-labelledby.\r\n  **/\r\nexport function ariaLabel(value: string) { return new Attr(\"ariaLabel\", value, false); }\r\n\r\n/**\r\n * Identifies the element (or elements) that labels the current element. See related aria-describedby.\r\n  **/\r\nexport function ariaLabelledBy(value: string) { return new Attr(\"ariaLabelledBy\", value, false); }\r\n\r\n/**\r\n * Defines the hierarchical level of an element within a structure.\r\n  **/\r\nexport function ariaLevel(value: number) { return new Attr(\"ariaLevel\", value, false); }\r\n\r\n/**\r\n * Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.\r\n  **/\r\nexport function ariaLive(value: string) { return new Attr(\"ariaLive\", value, false); }\r\n\r\n/**\r\n * Indicates whether an element is modal when displayed\r\n  **/\r\nexport function ariaModal(value: boolean) { return new Attr(\"ariaModal\", value, false); }\r\n\r\n/**\r\n * Indicates whether a text box accepts multiple lines of input or only a single line.\r\n  **/\r\nexport function ariaMultiline(value: boolean) { return new Attr(\"ariaMultiline\", value, false); }\r\n\r\n/**\r\n * Indicates that the user may select more than one item from the current selectable descendants.\r\n  **/\r\nexport function ariaMultiSelectable(value: boolean) { return new Attr(\"ariaMultiSelectable\", value, false); }\r\n\r\n/**\r\n * Indicates that the user may select more than one item from the current selectable descendants.\r\n  **/\r\nexport function ariaOrientation(value: string) { return new Attr(\"ariaOrientation\", value, false); }\r\n\r\n/**\r\n * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship. See related aria-controls.\r\n  **/\r\nexport function ariaOwns(value: string) { return new Attr(\"ariaOwns\", value, false); }\r\n\r\n/**\r\n * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format.\r\n  **/\r\nexport function ariaPlaceholder(value: string) { return new Attr(\"ariaPlaceholder\", value, false); }\r\n\r\n/**\r\n * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related aria-setsize.\r\n  **/\r\nexport function ariaPosInSet(value: number) { return new Attr(\"ariaPosInSet\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"pressed\" state of toggle buttons. See related aria-checked and aria-selected.\r\n **/\r\nexport function ariaPressed(value: boolean) { return new Attr(\"ariaPressed\", value, false); }\r\n\r\n/**\r\n * Indicates that the element is not editable, but is otherwise operable. See related aria-disabled.\r\n  **/\r\nexport function ariaReadOnly(value: boolean) { return new Attr(\"ariaReadOnly\", value, false); }\r\n\r\n/**\r\n * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. See related aria-atomic.\r\n  **/\r\nexport function ariaRelevant(value: string) { return new Attr(\"ariaRelevant\", value, false); }\r\n\r\n/**\r\n * Indicates that user input is required on the element before a form may be submitted.\r\n  **/\r\nexport function ariaRequired(value: boolean) { return new Attr(\"ariaRequired\", value, false); }\r\n\r\n/**\r\n * Defines a human-readable, author-localized description for the role of an element.\r\n  **/\r\nexport function ariaRoleDescription(value: string) { return new Attr(\"ariaRoleDescription\", value, false); }\r\n\r\n/**\r\n * Defines the total number of rows in a table, grid, or treegrid. See related aria-rowindex.\r\n  **/\r\nexport function ariaRowCount(value: number) { return new Attr(\"ariaRowCount\", value, false); }\r\n\r\n/**\r\n * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid. See related aria-rowcount and aria-rowspan.\r\n  **/\r\nexport function ariaRowIndex(value: number) { return new Attr(\"ariaRowIndex\", value, false); }\r\n\r\n/**\r\n Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid. See related aria-rowindex and aria-colspan.\r\n  **/\r\nexport function ariaRowSpan(value: number) { return new Attr(\"ariaRowSpan\", value, false); }\r\n\r\n/**\r\n * Indicates the current \"selected\" state of various widgets. See related aria-checked and aria-pressed.\r\n **/\r\nexport function ariaSelected(value: boolean) { return new Attr(\"ariaSelected\", value, false); }\r\n\r\n/**\r\n * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related aria-posinset.\r\n  **/\r\nexport function ariaSetSize(value: number) { return new Attr(\"ariaSetsize\", value, false); }\r\n\r\n/**\r\n * Indicates if items in a table or grid are sorted in ascending or descending order.\r\n  **/\r\nexport function ariaSort(value: string) { return new Attr(\"ariaSort\", value, false); }\r\n\r\n/**\r\n * Defines the maximum allowed value for a range widget.\r\n  **/\r\nexport function ariaValueMax(value: number) { return new Attr(\"ariaValueMax\", value, false); }\r\n\r\n/**\r\n * Defines the minimum allowed value for a range widget.\r\n  **/\r\nexport function ariaValueMin(value: number) { return new Attr(\"ariaValueMin\", value, false); }\r\n\r\n/**\r\n * Defines the current value for a range widget. See related aria-valuetext.\r\n  **/\r\nexport function ariaValueNow(value: number) { return new Attr(\"ariaValueNow\", value, false); }\r\n\r\n/**\r\n * Defines the human readable text alternative of aria-valuenow for a range widget.\r\n  **/\r\nexport function ariaValueText(value: string) { return new Attr(\"ariaValueText\", value, false); }\r\n\r\n/**\r\n * Executes the script asynchronously.\r\n  **/\r\nexport function async(value: string) { return new Attr(\"async\", value, false, \"script\"); }\r\n\r\n/**\r\n * Sets whether input is automatically capitalized when entered by user\r\n  **/\r\nexport function autoCapitalize(value: boolean) { return new Attr(\"autocapitalize\", value, false); }\r\n\r\n/**\r\n * Indicates whether controls in this form can by default have their values automatically completed by the browser.\r\n  **/\r\nexport function autoComplete(value: boolean) { return new Attr(\"autocomplete\", value ? \"on\" : \"off\", false, \"form\", \"input\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * The element should be automatically focused after the page loaded.\r\n  **/\r\nexport function autoFocus(value: boolean) { return new Attr(\"autofocus\", value, false, \"button\", \"input\", \"keygen\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * The audio or video should play as soon as possible.\r\n  **/\r\nexport function autoPlay(value: boolean) { return new Attr(\"autoplay\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Contains the time range of already buffered media.\r\n  **/\r\nexport function buffered(value: boolean) { return new Attr(\"buffered\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * From the HTML Media Capture\r\n  **/\r\nexport function capture(value: boolean) { return new Attr(\"capture\", value, false, \"input\"); }\r\n\r\n/**\r\n * Declares the character encoding of the page or script.\r\n  **/\r\nexport function charSet(value: string) { return new Attr(\"charset\", value, false, \"meta\", \"script\"); }\r\n\r\n/**\r\n * Indicates whether the element should be checked on page load.\r\n  **/\r\nexport function checked(value: boolean) { return new Attr(\"checked\", value, false, \"command\", \"input\"); }\r\n\r\n/**\r\n * Contains a URI which points to the source of the quote or change.\r\n  **/\r\nexport function cite(value: string) { return new Attr(\"cite\", value, false, \"blockquote\", \"del\", \"ins\", \"q\"); }\r\n\r\n/**\r\n * Often used with CSS to style elements with common properties.\r\n  **/\r\nexport function className(value: string) { return new Attr(\"className\", value, false); }\r\n\r\n/**\r\n * Specifies the URL of the applet's class file to be loaded and executed.\r\n  **/\r\nexport function code(value: string) { return new Attr(\"code\", value, false, \"applet\"); }\r\n\r\n/**\r\n * This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored.\r\n  **/\r\nexport function codeBase(value: string) { return new Attr(\"codebase\", value, false, \"applet\"); }\r\n\r\n/**\r\n * Defines the number of columns in a textarea.\r\n  **/\r\nexport function cols(value: number) { return new Attr(\"cols\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * The colspan attribute defines the number of columns a cell should span.\r\n  **/\r\nexport function colSpan(value: number) { return new Attr(\"colspan\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * A value associated with http-equiv or name depending on the context.\r\n  **/\r\nexport function content(value: string) { return new Attr(\"content\", value, false, \"meta\"); }\r\n\r\n/**\r\n * Indicates whether the element's content is editable.\r\n  **/\r\nexport function contentEditable(value: string) { return new Attr(\"contenteditable\", value, false); }\r\n\r\n/**\r\n * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n  **/\r\nexport function contextMenu(value: string) { return new Attr(\"contextmenu\", value, false); }\r\n\r\n/**\r\n * Indicates whether the browser should show playback controls to the user.\r\n  **/\r\nexport function controls(value: boolean) { return new Attr(\"controls\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * A set of values specifying the coordinates of the hot-spot region.\r\n  **/\r\nexport function coords(value: string) { return new Attr(\"coords\", value, false, \"area\"); }\r\n\r\n/**\r\n * How the element handles cross-origin requests\r\n  **/\r\nexport function crossOrigin(value: string) { return new Attr(\"crossorigin\", value, false, \"audio\", \"img\", \"link\", \"script\", \"video\"); }\r\n\r\n/**\r\n * Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.\r\n  **/\r\nexport function csp(value: string) { return new Attr(\"csp\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Specifies the URL of the resource.\r\n  **/\r\nexport function data(value: string) { return new Attr(\"data\", value, false, \"object\"); }\r\n\r\n/**\r\n * Lets you attach custom attributes to an HTML element.\r\n */\r\nexport function customData(name: string, value: any) { return new Attr(\"data-\" + name, value, false); }\r\n\r\n/**\r\n * Indicates the date and time associated with the element.\r\n  **/\r\nexport function dateTime(value: Date) { return new Attr(\"datetime\", value, false, \"del\", \"ins\", \"time\"); }\r\n\r\n/**\r\n * Indicates the preferred method to decode the image.\r\n  **/\r\nexport function decoding(value: string) { return new Attr(\"decoding\", value, false, \"img\"); }\r\n\r\n/**\r\n * Indicates that the track should be enabled unless the user's preferences indicate something different.\r\n  **/\r\nexport function htmlDefault(value: boolean|string) { return new Attr(\"default\", value, false, \"track\"); }\r\n\r\n/**\r\n * Indicates that the script should be executed after the page has been parsed.\r\n  **/\r\nexport function defer(value: boolean) { return new Attr(\"defer\", value, false, \"script\"); }\r\n\r\n/**\r\n * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n  **/\r\nexport function dir(value: string) { return new Attr(\"dir\", value, false); }\r\n\r\n/**\r\n * Indicates whether the user can interact with the element.\r\n  **/\r\nexport function disabled(value: boolean) { return new Attr(\"disabled\", value, false, \"button\", \"command\", \"fieldset\", \"input\", \"keygen\", \"optgroup\", \"option\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * ??? \r\n  **/\r\nexport function dirName(value: string) { return new Attr(\"dirname\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates that the hyperlink is to be used for downloading a resource.\r\n  **/\r\nexport function download(value: boolean) { return new Attr(\"download\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Defines whether the element can be dragged.\r\n  **/\r\nexport function draggable(value: boolean) { return new Attr(\"draggable\", value, false); }\r\n\r\n/**\r\n * Indicates that the element accepts the dropping of content onto it.\r\n  **/\r\nexport function dropZone(value: string) { return new Attr(\"dropzone\", value, false); }\r\n\r\n/**\r\n * Defines the content type of the form data when the method is POST.\r\n  **/\r\nexport function encType(value: string) { return new Attr(\"enctype\", value, false, \"form\"); }\r\n\r\n/**\r\n * The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).\r\n  **/\r\nexport function enterKeyHint(value: string) { return new Attr(\"enterkeyhint\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Describes elements which belongs to this one.\r\n  **/\r\nexport function htmlFor(value: string) { return new Attr(\"htmlFor\", value, false, \"label\", \"output\"); }\r\n\r\n/**\r\n * Indicates the form that is the owner of the element.\r\n  **/\r\nexport function form(value: string) { return new Attr(\"form\", value, false, \"button\", \"fieldset\", \"input\", \"keygen\", \"label\", \"meter\", \"object\", \"output\", \"progress\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates the action of the element, overriding the action defined in the <form>.\r\n  **/\r\nexport function formAction(value: string) { return new Attr(\"formaction\", value, false, \"input\", \"button\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner.\r\n  **/\r\nexport function formEncType(value: string) { return new Attr(\"formenctype\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.\r\n  **/\r\nexport function formMethod(value: string) { return new Attr(\"formmethod\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner.\r\n  **/\r\nexport function formNoValidate(value: boolean) { return new Attr(\"formnovalidate\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * If the button/input is a submit button (type=\"submit\"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner.\r\n  **/\r\nexport function formTarget(value: string) { return new Attr(\"formtarget\", value, false, \"button\", \"input\"); }\r\n\r\n/**\r\n * IDs of the <th> elements which applies to this element.\r\n  **/\r\nexport function headers(value: string) { return new Attr(\"headers\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * Specifies the height of elements listed here. For all other elements, use the CSS height property.\r\n  **/\r\nexport function htmlHeight(value: number | string) { return new Attr(\"height\", value, false, \"canvas\", \"embed\", \"iframe\", \"img\", \"input\", \"object\", \"video\"); }\r\n\r\n/**\r\n * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n  **/\r\nexport function hidden(value: boolean) { return new Attr(\"hidden\", value, false); }\r\n\r\n/**\r\n * Indicates the lower bound of the upper range.\r\n  **/\r\nexport function high(value: number) { return new Attr(\"high\", value, false, \"meter\"); }\r\n\r\n/**\r\n * The URL of a linked resource.\r\n  **/\r\nexport function href(value: string) { return new Attr(\"href\", value, false, \"a\", \"area\", \"base\", \"link\"); }\r\n\r\n/**\r\n * Specifies the language of the linked resource.\r\n  **/\r\nexport function hrefLang(value: string) { return new Attr(\"hreflang\", value, false, \"a\", \"area\", \"link\"); }\r\n\r\n/**\r\n * Defines a pragma directive.\r\n  **/\r\nexport function httpEquiv(value: string) { return new Attr(\"httpEquiv\", value, false, \"meta\"); }\r\n\r\n/**\r\n * Specifies a picture which represents the command.\r\n  **/\r\nexport function icon(value: string) { return new Attr(\"icon\", value, false, \"command\"); }\r\n\r\n/**\r\n * Often used with CSS to style a specific element. The value of this attribute must be unique.\r\n  **/\r\nexport function id(value: string) { return new Attr(\"id\", value, false); }\r\n\r\n/**\r\n * Indicates the relative fetch priority for the resource.\r\n  **/\r\nexport function importance(value: string) { return new Attr(\"importance\", value, false, \"iframe\", \"img\", \"link\", \"script\"); }\r\n\r\n/**\r\n * Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).\r\n  **/\r\nexport function inputMode(value: string) { return new Attr(\"inputmode\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Specifies a Subresource Integrity value that allows browsers to verify what they fetch.\r\n  **/\r\nexport function integrity(value: string) { return new Attr(\"integrity\", value, false, \"link\", \"script\"); }\r\n\r\n/**\r\n * This attribute tells the browser to ignore the actual intrinsic size of the image and pretend itâs the size specified in the attribute.\r\n  **/\r\nexport function intrinsicSize(value: string) { return new Attr(\"intrinsicsize\", value, false, \"img\"); }\r\n\r\n/**\r\n * Indicates that the image is part of a server-side image map.\r\n  **/\r\nexport function isMap(value: boolean) { return new Attr(\"ismap\", value, false, \"img\"); }\r\n\r\n/**\r\n * Specifies the type of key generated.\r\n  **/\r\nexport function keyType(value: string) { return new Attr(\"keytype\", value, false, \"keygen\"); }\r\n\r\n/**\r\n * The itemprop attribute\r\n  **/\r\nexport function itemProp(value: string) { return new Attr(\"itemprop\", value, false); }\r\n\r\n/**\r\n * Specifies the kind of text track.\r\n  **/\r\nexport function kind(value: string) { return new Attr(\"kind\", value, false, \"track\"); }\r\n\r\n/**\r\n * Specifies a user-readable title of the element.\r\n  **/\r\nexport function label(value: string) { return new Attr(\"label\", value, false, \"optgroup\", \"option\", \"track\"); }\r\n\r\n/**\r\n * Defines the language used in the element.\r\n  **/\r\nexport function lang(value: string) { return new Attr(\"lang\", value, false); }\r\n\r\n/**\r\n * Defines the script language used in the element.\r\n  **/\r\nexport function language(value: string) { return new Attr(\"language\", value, false, \"script\"); }\r\n\r\n/**\r\n * Identifies a list of pre-defined options to suggest to the user.\r\n  **/\r\nexport function list(value: string) { return new Attr(\"list\", value, true, \"input\"); }\r\n\r\n/**\r\n * Indicates whether the media should start playing from the start when it's finished.\r\n  **/\r\nexport function loop(value: boolean) { return new Attr(\"loop\", value, false, \"audio\", \"bgsound\", \"marquee\", \"video\"); }\r\n\r\n/**\r\n * Indicates the upper bound of the lower range.\r\n  **/\r\nexport function low(value: number) { return new Attr(\"low\", value, false, \"meter\"); }\r\n\r\n/**\r\n * Indicates the maximum value allowed.\r\n  **/\r\nexport function max(value: number) { return new Attr(\"max\", value, false, \"input\", \"meter\", \"progress\"); }\r\n\r\n/**\r\n * Defines the maximum number of characters allowed in the element.\r\n  **/\r\nexport function maxLength(value: number) { return new Attr(\"maxlength\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Defines the minimum number of characters allowed in the element.\r\n  **/\r\nexport function minLength(value: number) { return new Attr(\"minlength\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Specifies a hint of the media for which the linked resource was designed.\r\n  **/\r\nexport function media(value: string) { return new Attr(\"media\", value, false, \"a\", \"area\", \"link\", \"source\", \"style\"); }\r\n\r\n/**\r\n * Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.\r\n  **/\r\nexport function method(value: string) { return new Attr(\"method\", value, false, \"form\"); }\r\n\r\n/**\r\n * Indicates the minimum value allowed.\r\n  **/\r\nexport function min(value: number) { return new Attr(\"min\", value, false, \"input\", \"meter\"); }\r\n\r\n/**\r\n * Indicates whether multiple values can be entered in an input of the type email or file.\r\n  **/\r\nexport function multiple(value: boolean) { return new Attr(\"multiple\", value, false, \"input\", \"select\"); }\r\n\r\n/**\r\n * Indicates whether the audio will be initially silenced on page load.\r\n  **/\r\nexport function muted(value: boolean) { return new Attr(\"muted\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Name of the element. For example used by the server to identify the fields in form submits.\r\n  **/\r\nexport function name(value: string) { return new Attr(\"name\", value, false, \"button\", \"form\", \"fieldset\", \"iframe\", \"input\", \"keygen\", \"object\", \"output\", \"select\", \"textarea\", \"map\", \"meta\", \"param\"); }\r\n\r\n/**\r\n * This attribute indicates that the form shouldn't be validated when submitted.\r\n  **/\r\nexport function noValidate(value: boolean) { return new Attr(\"novalidate\", value, false, \"form\"); }\r\n\r\n/**\r\n * Indicates whether the details will be shown on page load.\r\n  **/\r\nexport function open(value: string) { return new Attr(\"open\", value, false, \"details\"); }\r\n\r\n/**\r\n * Indicates the optimal numeric value.\r\n  **/\r\nexport function optimum(value: number) { return new Attr(\"optimum\", value, false, \"meter\"); }\r\n\r\n/**\r\n * Defines a regular expression which the element's value will be validated against.\r\n  **/\r\nexport function pattern(value: string) { return new Attr(\"pattern\", value, false, \"input\"); }\r\n\r\n/**\r\n * The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink.\r\n  **/\r\nexport function ping(value: string) { return new Attr(\"ping\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Provides a hint to the user of what can be entered in the field.\r\n  **/\r\nexport function placeHolder(value: string) { return new Attr(\"placeholder\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates that the media element should play automatically on iOS.\r\n  **/\r\nexport function playsInline(value: boolean) { return new Attr(\"playsInline\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * A URL indicating a poster frame to show until the user plays or seeks.\r\n  **/\r\nexport function poster(value: string) { return new Attr(\"poster\", value, false, \"video\"); }\r\n\r\n/**\r\n * Indicates whether the whole resource, parts of it or nothing should be preloaded.\r\n  **/\r\nexport function preload(value: boolean|string) { return new Attr(\"preload\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * Indicates whether the element can be edited.\r\n  **/\r\nexport function readOnly(value: boolean) { return new Attr(\"readonly\", value, false, \"input\", \"textarea\"); }\r\n\r\n/**\r\n * The radiogroup attribute\r\n  **/\r\nexport function radioGroup(value: string) { return new Attr(\"radiogroup\", value, false, \"command\"); }\r\n\r\n/**\r\n * Specifies which referrer is sent when fetching the resource.\r\n  **/\r\nexport function referrerPolicy(value: string) { return new Attr(\"referrerpolicy\", value, false, \"a\", \"area\", \"iframe\", \"img\", \"link\", \"script\"); }\r\n\r\n/**\r\n * Specifies the relationship of the target object to the link object.\r\n  **/\r\nexport function rel(value: string) { return new Attr(\"rel\", value, false, \"a\", \"area\", \"link\"); }\r\n\r\n/**\r\n * Indicates whether this element is required to fill out or not.\r\n  **/\r\nexport function required(value: boolean) { return new Attr(\"required\", value, false, \"input\", \"select\", \"textarea\"); }\r\n\r\n/**\r\n * Indicates whether the list should be displayed in a descending order instead of a ascending.\r\n  **/\r\nexport function reversed(value: boolean) { return new Attr(\"reversed\", value, false, \"ol\"); }\r\n\r\n/**\r\n * Defines the number of rows in a text area.\r\n  **/\r\nexport function role(value: string) { return new Attr(\"role\", value, false); }\r\n\r\n/**\r\n * The rows attribute\r\n  **/\r\nexport function rows(value: number) { return new Attr(\"rows\", value, false, \"textarea\"); }\r\n\r\n/**\r\n * Defines the number of rows a table cell should span over.\r\n  **/\r\nexport function rowSpan(value: number) { return new Attr(\"rowspan\", value, false, \"td\", \"th\"); }\r\n\r\n/**\r\n * Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).\r\n  **/\r\nexport function sandbox(value: string) { return new Attr(\"sandbox\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * Defines the cells that the header test (defined in the th element) relates to.\r\n  **/\r\nexport function scope(value: string) { return new Attr(\"scope\", value, false, \"th\"); }\r\n\r\n/**\r\n * The scoped attribute\r\n  **/\r\nexport function scoped(value: boolean) { return new Attr(\"scoped\", value, false, \"style\"); }\r\n\r\n/**\r\n * Defines a value which will be selected on page load.\r\n  **/\r\nexport function selected(value: boolean) { return new Attr(\"selected\", value, false, \"option\"); }\r\n\r\n/**\r\n * An ersatz attribute for selecting existing elements by query selector.\r\n */\r\nexport function selector(value: string) { return new Attr(\"selector\", value, false); }\r\n\r\n/**\r\n * The shape attribute\r\n  **/\r\nexport function shape(value: string) { return new Attr(\"shape\", value, false, \"a\", \"area\"); }\r\n\r\n/**\r\n * Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.\r\n  **/\r\nexport function size(value: number) { return new Attr(\"size\", value, false, \"input\", \"select\"); }\r\n\r\n/**\r\n * Assigns a slot in a shadow DOM shadow tree to an element.\r\n  **/\r\nexport function slot(value: string) { return new Attr(\"slot\", value, false); }\r\n\r\n/**\r\n * The sizes attribute\r\n  **/\r\nexport function sizes(value: string) { return new Attr(\"sizes\", value, false, \"link\", \"img\", \"source\"); }\r\n\r\n/**\r\n * The span attribute\r\n  **/\r\nexport function span(value: string) { return new Attr(\"span\", value, false, \"col\", \"colgroup\"); }\r\n\r\n/**\r\n * Indicates whether spell checking is allowed for the element.\r\n  **/\r\nexport function spellCheck(value: boolean) { return new Attr(\"spellcheck\", value, false); }\r\n\r\n/**\r\n * The URL of the embeddable content.\r\n  **/\r\nexport function src(value: string) { return new Attr(\"src\", value, false, \"audio\", \"embed\", \"iframe\", \"img\", \"input\", \"script\", \"source\", \"track\", \"video\"); }\r\n\r\n/**\r\n * The srcdoc attribute\r\n  **/\r\nexport function srcDoc(value: string) { return new Attr(\"srcdoc\", value, false, \"iframe\"); }\r\n\r\n/**\r\n * The srclang attribute\r\n  **/\r\nexport function srcLang(value: string) { return new Attr(\"srclang\", value, false, \"track\"); }\r\n\r\n/**\r\n * A MediaStream object to use as a source for an HTML video or audio element\r\n  **/\r\nexport function srcObject(value: MediaProvider) { return new Attr(\"srcObject\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * One or more responsive image candidates.\r\n  **/\r\nexport function srcSet(value: string) { return new Attr(\"srcset\", value, false, \"img\", \"source\"); }\r\n\r\n/**\r\n * Defines the first number if other than 1.\r\n  **/\r\nexport function start(value: number) { return new Attr(\"start\", value, false, \"ol\"); }\r\n\r\n/**\r\n * Defines CSS styles which will override styles previously set.\r\n *\r\n * NOTE: DO NOT USE THIS. You should use `styles()` instead.\r\n **/\r\nexport function __deprecated__style__deprecated__(value: any) {\r\n    for (let k in value) {\r\n        if (!value[k] && !isBoolean(value[k])) {\r\n            delete value[k];\r\n        }\r\n    }\r\n    return new Attr(\"style\", value, false);\r\n}\r\n\r\n/**\r\n * The step attribute\r\n  **/\r\nexport function step(value: number) { return new Attr(\"step\", value, false, \"input\"); }\r\n\r\n/**\r\n * The summary attribute\r\n  **/\r\nexport function summary(value: string) { return new Attr(\"summary\", value, false, \"table\"); }\r\n\r\n/**\r\n * Overrides the browser's default tab order and follows the one specified instead.\r\n  **/\r\nexport function tabIndex(value: number) { return new Attr(\"tabindex\", value, false); }\r\n\r\n/**\r\n * Text to be displayed in a tooltip when hovering over the element.\r\n  **/\r\nexport function title(value: string) { return new Attr(\"title\", value, false); }\r\n\r\n/**\r\n * The target attribute\r\n  **/\r\nexport function target(value: string) { return new Attr(\"target\", value, false, \"a\", \"area\", \"base\", \"form\"); }\r\n\r\n/**\r\n * Specify whether an elementâs attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged.\r\n  **/\r\nexport function translate(value: boolean) { return new Attr(\"translate\", value, false); }\r\n\r\n/**\r\n * Defines the type of the element.\r\n  **/\r\nexport function type(value: string) { return new Attr(\"type\", value, false, \"button\", \"input\", \"command\", \"embed\", \"link\", \"object\", \"script\", \"source\", \"style\", \"menu\"); }\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function value(value: string) { return new Attr(\"value\", value, false, \"button\", \"data\", \"input\", \"li\", \"meter\", \"option\", \"progress\", \"param\"); }\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function valueAsNumber(value: number) { return new Attr(\"valueAsNumber\", value, false, \"input\"); }\r\n\r\n/**\r\n * Defines a default value which will be displayed in the element on page load.\r\n  **/\r\nexport function valueAsDate(value: Date) { return new Attr(\"valueAsDate\", value, false, \"input\"); }\r\n\r\n/**\r\n * setting the volume at which a media element plays.\r\n  **/\r\nexport function volume(value: number) { return new Attr(\"volume\", value, false, \"audio\", \"video\"); }\r\n\r\n/**\r\n * The usemap attribute\r\n  **/\r\nexport function useMap(value: boolean) { return new Attr(\"usemap\", value, false, \"img\", \"input\", \"object\"); }\r\n\r\n/**\r\n * For the elements listed here, this establishes the element's width.\r\n  **/\r\nexport function htmlWidth(value: number | string) { return new Attr(\"width\", value, false, \"canvas\", \"embed\", \"iframe\", \"img\", \"input\", \"object\", \"video\"); }\r\n\r\n/**\r\n * Indicates whether the text should be wrapped.\r\n  **/\r\nexport function wrap(value: boolean) { return new Attr(\"wrap\", value, false, \"textarea\"); }","export class CssProp {\r\n    public readonly name: string;\r\n    constructor(\r\n        public readonly key: string,\r\n        public readonly value: string) {\r\n        this.name = key.replace(/[A-Z]/g, (m) => {\r\n            return \"-\" + m.toLocaleLowerCase();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the attribute value on an HTMLElement\r\n     * @param elem - the element on which to set the attribute.\r\n     */\r\n    apply(elem: CSSStyleDeclaration) {\r\n        (elem as any)[this.key] = this.value;\r\n    }\r\n}\r\n\r\nexport class CssPropSet {\r\n    private rest: (CssProp | CssPropSet)[];\r\n    constructor(...rest: (CssProp | CssPropSet)[]) {\r\n        this.rest = rest;\r\n    }\r\n\r\n    /**\r\n     * Set the attribute value on an HTMLElement\r\n     * @param style - the element on which to set the attribute.\r\n     */\r\n    apply(style: CSSStyleDeclaration) {\r\n        for (const prop of this.rest) {\r\n            prop.apply(style);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Combine style properties.\r\n **/\r\nexport function styles(...rest: (CssProp | CssPropSet)[]) {\r\n    return new CssPropSet(...rest);\r\n}\r\n\r\nexport function alignContent(v: string) { return new CssProp(\"alignContent\", v); }\r\nexport function alignItems(v: string) { return new CssProp(\"alignItems\", v); }\r\nexport function alignSelf(v: string) { return new CssProp(\"alignSelf\", v); }\r\nexport function alignmentBaseline(v: string) { return new CssProp(\"alignmentBaseline\", v); }\r\nexport function all(v: string) { return new CssProp(\"all\", v); }\r\nexport function animation(v: string) { return new CssProp(\"animation\", v); }\r\nexport function animationDelay(v: string) { return new CssProp(\"animationDelay\", v); }\r\nexport function animationDirection(v: string) { return new CssProp(\"animationDirection\", v); }\r\nexport function animationDuration(v: string) { return new CssProp(\"animationDuration\", v); }\r\nexport function animationFillMode(v: string) { return new CssProp(\"animationFillMode\", v); }\r\nexport function animationIterationCount(v: string) { return new CssProp(\"animationIterationCount\", v); }\r\nexport function animationName(v: string) { return new CssProp(\"animationName\", v); }\r\nexport function animationPlayState(v: string) { return new CssProp(\"animationPlayState\", v); }\r\nexport function animationTimingFunction(v: string) { return new CssProp(\"animationTimingFunction\", v); }\r\nexport function appearance(v: string) { return new CssProp(\"appearance\", v); }\r\nexport function backdropFilter(v: string) { return new CssProp(\"backdropFilter\", v); }\r\nexport function backfaceVisibility(v: string) { return new CssProp(\"backfaceVisibility\", v); }\r\nexport function background(v: string) { return new CssProp(\"background\", v); }\r\nexport function backgroundAttachment(v: string) { return new CssProp(\"backgroundAttachment\", v); }\r\nexport function backgroundBlendMode(v: string) { return new CssProp(\"backgroundBlendMode\", v); }\r\nexport function backgroundClip(v: string) { return new CssProp(\"backgroundClip\", v); }\r\nexport function backgroundColor(v: string) { return new CssProp(\"backgroundColor\", v); }\r\nexport function backgroundImage(v: string) { return new CssProp(\"backgroundImage\", v); }\r\nexport function backgroundOrigin(v: string) { return new CssProp(\"backgroundOrigin\", v); }\r\nexport function backgroundPosition(v: string) { return new CssProp(\"backgroundPosition\", v); }\r\nexport function backgroundPositionX(v: string) { return new CssProp(\"backgroundPositionX\", v); }\r\nexport function backgroundPositionY(v: string) { return new CssProp(\"backgroundPositionY\", v); }\r\nexport function backgroundRepeat(v: string) { return new CssProp(\"backgroundRepeat\", v); }\r\nexport function backgroundRepeatX(v: string) { return new CssProp(\"backgroundRepeatX\", v); }\r\nexport function backgroundRepeatY(v: string) { return new CssProp(\"backgroundRepeatY\", v); }\r\nexport function backgroundSize(v: string) { return new CssProp(\"backgroundSize\", v); }\r\nexport function baselineShift(v: string) { return new CssProp(\"baselineShift\", v); }\r\nexport function blockSize(v: string) { return new CssProp(\"blockSize\", v); }\r\nexport function border(v: string) { return new CssProp(\"border\", v); }\r\nexport function borderBlockEnd(v: string) { return new CssProp(\"borderBlockEnd\", v); }\r\nexport function borderBlockEndColor(v: string) { return new CssProp(\"borderBlockEndColor\", v); }\r\nexport function borderBlockEndStyle(v: string) { return new CssProp(\"borderBlockEndStyle\", v); }\r\nexport function borderBlockEndWidth(v: string) { return new CssProp(\"borderBlockEndWidth\", v); }\r\nexport function borderBlockStart(v: string) { return new CssProp(\"borderBlockStart\", v); }\r\nexport function borderBlockStartColor(v: string) { return new CssProp(\"borderBlockStartColor\", v); }\r\nexport function borderBlockStartStyle(v: string) { return new CssProp(\"borderBlockStartStyle\", v); }\r\nexport function borderBlockStartWidth(v: string) { return new CssProp(\"borderBlockStartWidth\", v); }\r\nexport function borderBottom(v: string) { return new CssProp(\"borderBottom\", v); }\r\nexport function borderBottomColor(v: string) { return new CssProp(\"borderBottomColor\", v); }\r\nexport function borderBottomLeftRadius(v: string) { return new CssProp(\"borderBottomLeftRadius\", v); }\r\nexport function borderBottomRightRadius(v: string) { return new CssProp(\"borderBottomRightRadius\", v); }\r\nexport function borderBottomStyle(v: string) { return new CssProp(\"borderBottomStyle\", v); }\r\nexport function borderBottomWidth(v: string) { return new CssProp(\"borderBottomWidth\", v); }\r\nexport function borderCollapse(v: string) { return new CssProp(\"borderCollapse\", v); }\r\nexport function borderColor(v: string) { return new CssProp(\"borderColor\", v); }\r\nexport function borderImage(v: string) { return new CssProp(\"borderImage\", v); }\r\nexport function borderImageOutset(v: string) { return new CssProp(\"borderImageOutset\", v); }\r\nexport function borderImageRepeat(v: string) { return new CssProp(\"borderImageRepeat\", v); }\r\nexport function borderImageSlice(v: string) { return new CssProp(\"borderImageSlice\", v); }\r\nexport function borderImageSource(v: string) { return new CssProp(\"borderImageSource\", v); }\r\nexport function borderImageWidth(v: string) { return new CssProp(\"borderImageWidth\", v); }\r\nexport function borderInlineEnd(v: string) { return new CssProp(\"borderInlineEnd\", v); }\r\nexport function borderInlineEndColor(v: string) { return new CssProp(\"borderInlineEndColor\", v); }\r\nexport function borderInlineEndStyle(v: string) { return new CssProp(\"borderInlineEndStyle\", v); }\r\nexport function borderInlineEndWidth(v: string) { return new CssProp(\"borderInlineEndWidth\", v); }\r\nexport function borderInlineStart(v: string) { return new CssProp(\"borderInlineStart\", v); }\r\nexport function borderInlineStartColor(v: string) { return new CssProp(\"borderInlineStartColor\", v); }\r\nexport function borderInlineStartStyle(v: string) { return new CssProp(\"borderInlineStartStyle\", v); }\r\nexport function borderInlineStartWidth(v: string) { return new CssProp(\"borderInlineStartWidth\", v); }\r\nexport function borderLeft(v: string) { return new CssProp(\"borderLeft\", v); }\r\nexport function borderLeftColor(v: string) { return new CssProp(\"borderLeftColor\", v); }\r\nexport function borderLeftStyle(v: string) { return new CssProp(\"borderLeftStyle\", v); }\r\nexport function borderLeftWidth(v: string) { return new CssProp(\"borderLeftWidth\", v); }\r\nexport function borderRadius(v: string) { return new CssProp(\"borderRadius\", v); }\r\nexport function borderRight(v: string) { return new CssProp(\"borderRight\", v); }\r\nexport function borderRightColor(v: string) { return new CssProp(\"borderRightColor\", v); }\r\nexport function borderRightStyle(v: string) { return new CssProp(\"borderRightStyle\", v); }\r\nexport function borderRightWidth(v: string) { return new CssProp(\"borderRightWidth\", v); }\r\nexport function borderSpacing(v: string) { return new CssProp(\"borderSpacing\", v); }\r\nexport function borderStyle(v: string) { return new CssProp(\"borderStyle\", v); }\r\nexport function borderTop(v: string) { return new CssProp(\"borderTop\", v); }\r\nexport function borderTopColor(v: string) { return new CssProp(\"borderTopColor\", v); }\r\nexport function borderTopLeftRadius(v: string) { return new CssProp(\"borderTopLeftRadius\", v); }\r\nexport function borderTopRightRadius(v: string) { return new CssProp(\"borderTopRightRadius\", v); }\r\nexport function borderTopStyle(v: string) { return new CssProp(\"borderTopStyle\", v); }\r\nexport function borderTopWidth(v: string) { return new CssProp(\"borderTopWidth\", v); }\r\nexport function borderWidth(v: string) { return new CssProp(\"borderWidth\", v); }\r\nexport function bottom(v: string) { return new CssProp(\"bottom\", v); }\r\nexport function boxShadow(v: string) { return new CssProp(\"boxShadow\", v); }\r\nexport function boxSizing(v: string) { return new CssProp(\"boxSizing\", v); }\r\nexport function breakAfter(v: string) { return new CssProp(\"breakAfter\", v); }\r\nexport function breakBefore(v: string) { return new CssProp(\"breakBefore\", v); }\r\nexport function breakInside(v: string) { return new CssProp(\"breakInside\", v); }\r\nexport function bufferedRendering(v: string) { return new CssProp(\"bufferedRendering\", v); }\r\nexport function captionSide(v: string) { return new CssProp(\"captionSide\", v); }\r\nexport function caretColor(v: string) { return new CssProp(\"caretColor\", v); }\r\nexport function clear(v: string) { return new CssProp(\"clear\", v); }\r\nexport function clip(v: string) { return new CssProp(\"clip\", v); }\r\nexport function clipPath(v: string) { return new CssProp(\"clipPath\", v); }\r\nexport function clipRule(v: string) { return new CssProp(\"clipRule\", v); }\r\nexport function color(v: string) { return new CssProp(\"color\", v); }\r\nexport function colorInterpolation(v: string) { return new CssProp(\"colorInterpolation\", v); }\r\nexport function colorInterpolationFilters(v: string) { return new CssProp(\"colorInterpolationFilters\", v); }\r\nexport function colorRendering(v: string) { return new CssProp(\"colorRendering\", v); }\r\nexport function colorScheme(v: string) { return new CssProp(\"colorScheme\", v); }\r\nexport function columnCount(v: string) { return new CssProp(\"columnCount\", v); }\r\nexport function columnFill(v: string) { return new CssProp(\"columnFill\", v); }\r\nexport function columnGap(v: string) { return new CssProp(\"columnGap\", v); }\r\nexport function columnRule(v: string) { return new CssProp(\"columnRule\", v); }\r\nexport function columnRuleColor(v: string) { return new CssProp(\"columnRuleColor\", v); }\r\nexport function columnRuleStyle(v: string) { return new CssProp(\"columnRuleStyle\", v); }\r\nexport function columnRuleWidth(v: string) { return new CssProp(\"columnRuleWidth\", v); }\r\nexport function columnSpan(v: string) { return new CssProp(\"columnSpan\", v); }\r\nexport function columnWidth(v: string) { return new CssProp(\"columnWidth\", v); }\r\nexport function columns(v: string) { return new CssProp(\"columns\", v); }\r\nexport function contain(v: string) { return new CssProp(\"contain\", v); }\r\nexport function containIntrinsicSize(v: string) { return new CssProp(\"containIntrinsicSize\", v); }\r\nexport function counterIncrement(v: string) { return new CssProp(\"counterIncrement\", v); }\r\nexport function counterReset(v: string) { return new CssProp(\"counterReset\", v); }\r\nexport function cursor(v: string) { return new CssProp(\"cursor\", v); }\r\nexport function cx(v: string) { return new CssProp(\"cx\", v); }\r\nexport function cy(v: string) { return new CssProp(\"cy\", v); }\r\nexport function d(v: string) { return new CssProp(\"d\", v); }\r\nexport function direction(v: string) { return new CssProp(\"direction\", v); }\r\nexport function display(v: string) { return new CssProp(\"display\", v); }\r\nexport function dominantBaseline(v: string) { return new CssProp(\"dominantBaseline\", v); }\r\nexport function emptyCells(v: string) { return new CssProp(\"emptyCells\", v); }\r\nexport function fill(v: string) { return new CssProp(\"fill\", v); }\r\nexport function fillOpacity(v: string) { return new CssProp(\"fillOpacity\", v); }\r\nexport function fillRule(v: string) { return new CssProp(\"fillRule\", v); }\r\nexport function filter(v: string) { return new CssProp(\"filter\", v); }\r\nexport function flex(v: string) { return new CssProp(\"flex\", v); }\r\nexport function flexBasis(v: string) { return new CssProp(\"flexBasis\", v); }\r\nexport function flexDirection(v: string) { return new CssProp(\"flexDirection\", v); }\r\nexport function flexFlow(v: string) { return new CssProp(\"flexFlow\", v); }\r\nexport function flexGrow(v: string) { return new CssProp(\"flexGrow\", v); }\r\nexport function flexShrink(v: string) { return new CssProp(\"flexShrink\", v); }\r\nexport function flexWrap(v: string) { return new CssProp(\"flexWrap\", v); }\r\nexport function float(v: string) { return new CssProp(\"float\", v); }\r\nexport function floodColor(v: string) { return new CssProp(\"floodColor\", v); }\r\nexport function floodOpacity(v: string) { return new CssProp(\"floodOpacity\", v); }\r\nexport function font(v: string) { return new CssProp(\"font\", v); }\r\nexport function fontDisplay(v: string) { return new CssProp(\"fontDisplay\", v); }\r\nexport function fontFamily(v: string) { return new CssProp(\"fontFamily\", v); }\r\nexport function fontFeatureSettings(v: string) { return new CssProp(\"fontFeatureSettings\", v); }\r\nexport function fontKerning(v: string) { return new CssProp(\"fontKerning\", v); }\r\nexport function fontOpticalSizing(v: string) { return new CssProp(\"fontOpticalSizing\", v); }\r\nexport function fontSize(v: string) { return new CssProp(\"fontSize\", v); }\r\nexport function fontStretch(v: string) { return new CssProp(\"fontStretch\", v); }\r\nexport function fontStyle(v: string) { return new CssProp(\"fontStyle\", v); }\r\nexport function fontVariant(v: string) { return new CssProp(\"fontVariant\", v); }\r\nexport function fontVariantCaps(v: string) { return new CssProp(\"fontVariantCaps\", v); }\r\nexport function fontVariantEastAsian(v: string) { return new CssProp(\"fontVariantEastAsian\", v); }\r\nexport function fontVariantLigatures(v: string) { return new CssProp(\"fontVariantLigatures\", v); }\r\nexport function fontVariantNumeric(v: string) { return new CssProp(\"fontVariantNumeric\", v); }\r\nexport function fontVariationSettings(v: string) { return new CssProp(\"fontVariationSettings\", v); }\r\nexport function fontWeight(v: string) { return new CssProp(\"fontWeight\", v); }\r\nexport function forcedColorAdjust(v: string) { return new CssProp(\"forcedColorAdjust\", v); }\r\nexport function gap(v: string) { return new CssProp(\"gap\", v); }\r\nexport function grid(v: string) { return new CssProp(\"grid\", v); }\r\nexport function gridArea(v: string) { return new CssProp(\"gridArea\", v); }\r\nexport function gridAutoColumns(v: string) { return new CssProp(\"gridAutoColumns\", v); }\r\nexport function gridAutoFlow(v: string) { return new CssProp(\"gridAutoFlow\", v); }\r\nexport function gridAutoRows(v: string) { return new CssProp(\"gridAutoRows\", v); }\r\nexport function gridColumn(v: string) { return new CssProp(\"gridColumn\", v); }\r\nexport function gridColumnEnd(v: string) { return new CssProp(\"gridColumnEnd\", v); }\r\nexport function gridColumnGap(v: string) { return new CssProp(\"gridColumnGap\", v); }\r\nexport function gridColumnStart(v: string) { return new CssProp(\"gridColumnStart\", v); }\r\nexport function gridGap(v: string) { return new CssProp(\"gridGap\", v); }\r\nexport function gridRow(v: string) { return new CssProp(\"gridRow\", v); }\r\nexport function gridRowEnd(v: string) { return new CssProp(\"gridRowEnd\", v); }\r\nexport function gridRowGap(v: string) { return new CssProp(\"gridRowGap\", v); }\r\nexport function gridRowStart(v: string) { return new CssProp(\"gridRowStart\", v); }\r\nexport function gridTemplate(v: string) { return new CssProp(\"gridTemplate\", v); }\r\nexport function gridTemplateAreas(v: string) { return new CssProp(\"gridTemplateAreas\", v); }\r\nexport function gridTemplateColumns(v: string) { return new CssProp(\"gridTemplateColumns\", v); }\r\nexport function gridTemplateRows(v: string) { return new CssProp(\"gridTemplateRows\", v); }\r\nexport function height(v: string) { return new CssProp(\"height\", v); }\r\nexport function hyphens(v: string) { return new CssProp(\"hyphens\", v); }\r\nexport function imageOrientation(v: string) { return new CssProp(\"imageOrientation\", v); }\r\nexport function imageRendering(v: string) { return new CssProp(\"imageRendering\", v); }\r\nexport function inlineSize(v: string) { return new CssProp(\"inlineSize\", v); }\r\nexport function isolation(v: string) { return new CssProp(\"isolation\", v); }\r\nexport function justifyContent(v: string) { return new CssProp(\"justifyContent\", v); }\r\nexport function justifyItems(v: string) { return new CssProp(\"justifyItems\", v); }\r\nexport function justifySelf(v: string) { return new CssProp(\"justifySelf\", v); }\r\nexport function left(v: string) { return new CssProp(\"left\", v); }\r\nexport function letterSpacing(v: string) { return new CssProp(\"letterSpacing\", v); }\r\nexport function lightingColor(v: string) { return new CssProp(\"lightingColor\", v); }\r\nexport function lineBreak(v: string) { return new CssProp(\"lineBreak\", v); }\r\nexport function lineHeight(v: string) { return new CssProp(\"lineHeight\", v); }\r\nexport function listStyle(v: string) { return new CssProp(\"listStyle\", v); }\r\nexport function listStyleImage(v: string) { return new CssProp(\"listStyleImage\", v); }\r\nexport function listStylePosition(v: string) { return new CssProp(\"listStylePosition\", v); }\r\nexport function listStyleType(v: string) { return new CssProp(\"listStyleType\", v); }\r\nexport function margin(v: string) { return new CssProp(\"margin\", v); }\r\nexport function marginBlockEnd(v: string) { return new CssProp(\"marginBlockEnd\", v); }\r\nexport function marginBlockStart(v: string) { return new CssProp(\"marginBlockStart\", v); }\r\nexport function marginBottom(v: string) { return new CssProp(\"marginBottom\", v); }\r\nexport function marginInlineEnd(v: string) { return new CssProp(\"marginInlineEnd\", v); }\r\nexport function marginInlineStart(v: string) { return new CssProp(\"marginInlineStart\", v); }\r\nexport function marginLeft(v: string) { return new CssProp(\"marginLeft\", v); }\r\nexport function marginRight(v: string) { return new CssProp(\"marginRight\", v); }\r\nexport function marginTop(v: string) { return new CssProp(\"marginTop\", v); }\r\nexport function marker(v: string) { return new CssProp(\"marker\", v); }\r\nexport function markerEnd(v: string) { return new CssProp(\"markerEnd\", v); }\r\nexport function markerMid(v: string) { return new CssProp(\"markerMid\", v); }\r\nexport function markerStart(v: string) { return new CssProp(\"markerStart\", v); }\r\nexport function mask(v: string) { return new CssProp(\"mask\", v); }\r\nexport function maskType(v: string) { return new CssProp(\"maskType\", v); }\r\nexport function maxBlockSize(v: string) { return new CssProp(\"maxBlockSize\", v); }\r\nexport function maxHeight(v: string) { return new CssProp(\"maxHeight\", v); }\r\nexport function maxInlineSize(v: string) { return new CssProp(\"maxInlineSize\", v); }\r\nexport function maxWidth(v: string) { return new CssProp(\"maxWidth\", v); }\r\nexport function maxZoom(v: string) { return new CssProp(\"maxZoom\", v); }\r\nexport function minBlockSize(v: string) { return new CssProp(\"minBlockSize\", v); }\r\nexport function minHeight(v: string) { return new CssProp(\"minHeight\", v); }\r\nexport function minInlineSize(v: string) { return new CssProp(\"minInlineSize\", v); }\r\nexport function minWidth(v: string) { return new CssProp(\"minWidth\", v); }\r\nexport function minZoom(v: string) { return new CssProp(\"minZoom\", v); }\r\nexport function mixBlendMode(v: string) { return new CssProp(\"mixBlendMode\", v); }\r\nexport function objectFit(v: string) { return new CssProp(\"objectFit\", v); }\r\nexport function objectPosition(v: string) { return new CssProp(\"objectPosition\", v); }\r\nexport function offset(v: string) { return new CssProp(\"offset\", v); }\r\nexport function offsetDistance(v: string) { return new CssProp(\"offsetDistance\", v); }\r\nexport function offsetPath(v: string) { return new CssProp(\"offsetPath\", v); }\r\nexport function offsetRotate(v: string) { return new CssProp(\"offsetRotate\", v); }\r\nexport function opacity(v: string) { return new CssProp(\"opacity\", v); }\r\nexport function order(v: string) { return new CssProp(\"order\", v); }\r\nexport function orientation(v: string) { return new CssProp(\"orientation\", v); }\r\nexport function orphans(v: string) { return new CssProp(\"orphans\", v); }\r\nexport function outline(v: string) { return new CssProp(\"outline\", v); }\r\nexport function outlineColor(v: string) { return new CssProp(\"outlineColor\", v); }\r\nexport function outlineOffset(v: string) { return new CssProp(\"outlineOffset\", v); }\r\nexport function outlineStyle(v: string) { return new CssProp(\"outlineStyle\", v); }\r\nexport function outlineWidth(v: string) { return new CssProp(\"outlineWidth\", v); }\r\nexport function overflow(v: string) { return new CssProp(\"overflow\", v); }\r\nexport function overflowAnchor(v: string) { return new CssProp(\"overflowAnchor\", v); }\r\nexport function overflowWrap(v: string) { return new CssProp(\"overflowWrap\", v); }\r\nexport function overflowX(v: string) { return new CssProp(\"overflowX\", v); }\r\nexport function overflowY(v: string) { return new CssProp(\"overflowY\", v); }\r\nexport function overscrollBehavior(v: string) { return new CssProp(\"overscrollBehavior\", v); }\r\nexport function overscrollBehaviorBlock(v: string) { return new CssProp(\"overscrollBehaviorBlock\", v); }\r\nexport function overscrollBehaviorInline(v: string) { return new CssProp(\"overscrollBehaviorInline\", v); }\r\nexport function overscrollBehaviorX(v: string) { return new CssProp(\"overscrollBehaviorX\", v); }\r\nexport function overscrollBehaviorY(v: string) { return new CssProp(\"overscrollBehaviorY\", v); }\r\nexport function padding(v: string) { return new CssProp(\"padding\", v); }\r\nexport function paddingBlockEnd(v: string) { return new CssProp(\"paddingBlockEnd\", v); }\r\nexport function paddingBlockStart(v: string) { return new CssProp(\"paddingBlockStart\", v); }\r\nexport function paddingBottom(v: string) { return new CssProp(\"paddingBottom\", v); }\r\nexport function paddingInlineEnd(v: string) { return new CssProp(\"paddingInlineEnd\", v); }\r\nexport function paddingInlineStart(v: string) { return new CssProp(\"paddingInlineStart\", v); }\r\nexport function paddingLeft(v: string) { return new CssProp(\"paddingLeft\", v); }\r\nexport function paddingRight(v: string) { return new CssProp(\"paddingRight\", v); }\r\nexport function paddingTop(v: string) { return new CssProp(\"paddingTop\", v); }\r\nexport function pageBreakAfter(v: string) { return new CssProp(\"pageBreakAfter\", v); }\r\nexport function pageBreakBefore(v: string) { return new CssProp(\"pageBreakBefore\", v); }\r\nexport function pageBreakInside(v: string) { return new CssProp(\"pageBreakInside\", v); }\r\nexport function paintOrder(v: string) { return new CssProp(\"paintOrder\", v); }\r\nexport function perspective(v: string) { return new CssProp(\"perspective\", v); }\r\nexport function perspectiveOrigin(v: string) { return new CssProp(\"perspectiveOrigin\", v); }\r\nexport function placeContent(v: string) { return new CssProp(\"placeContent\", v); }\r\nexport function placeItems(v: string) { return new CssProp(\"placeItems\", v); }\r\nexport function placeSelf(v: string) { return new CssProp(\"placeSelf\", v); }\r\nexport function pointerEvents(v: string) { return new CssProp(\"pointerEvents\", v); }\r\nexport function position(v: string) { return new CssProp(\"position\", v); }\r\nexport function quotes(v: string) { return new CssProp(\"quotes\", v); }\r\nexport function r(v: string) { return new CssProp(\"r\", v); }\r\nexport function resize(v: string) { return new CssProp(\"resize\", v); }\r\nexport function right(v: string) { return new CssProp(\"right\", v); }\r\nexport function rowGap(v: string) { return new CssProp(\"rowGap\", v); }\r\nexport function rubyPosition(v: string) { return new CssProp(\"rubyPosition\", v); }\r\nexport function rx(v: string) { return new CssProp(\"rx\", v); }\r\nexport function ry(v: string) { return new CssProp(\"ry\", v); }\r\nexport function scrollBehavior(v: string) { return new CssProp(\"scrollBehavior\", v); }\r\nexport function scrollMargin(v: string) { return new CssProp(\"scrollMargin\", v); }\r\nexport function scrollMarginBlock(v: string) { return new CssProp(\"scrollMarginBlock\", v); }\r\nexport function scrollMarginBlockEnd(v: string) { return new CssProp(\"scrollMarginBlockEnd\", v); }\r\nexport function scrollMarginBlockStart(v: string) { return new CssProp(\"scrollMarginBlockStart\", v); }\r\nexport function scrollMarginBottom(v: string) { return new CssProp(\"scrollMarginBottom\", v); }\r\nexport function scrollMarginInline(v: string) { return new CssProp(\"scrollMarginInline\", v); }\r\nexport function scrollMarginInlineEnd(v: string) { return new CssProp(\"scrollMarginInlineEnd\", v); }\r\nexport function scrollMarginInlineStart(v: string) { return new CssProp(\"scrollMarginInlineStart\", v); }\r\nexport function scrollMarginLeft(v: string) { return new CssProp(\"scrollMarginLeft\", v); }\r\nexport function scrollMarginRight(v: string) { return new CssProp(\"scrollMarginRight\", v); }\r\nexport function scrollMarginTop(v: string) { return new CssProp(\"scrollMarginTop\", v); }\r\nexport function scrollPadding(v: string) { return new CssProp(\"scrollPadding\", v); }\r\nexport function scrollPaddingBlock(v: string) { return new CssProp(\"scrollPaddingBlock\", v); }\r\nexport function scrollPaddingBlockEnd(v: string) { return new CssProp(\"scrollPaddingBlockEnd\", v); }\r\nexport function scrollPaddingBlockStart(v: string) { return new CssProp(\"scrollPaddingBlockStart\", v); }\r\nexport function scrollPaddingBottom(v: string) { return new CssProp(\"scrollPaddingBottom\", v); }\r\nexport function scrollPaddingInline(v: string) { return new CssProp(\"scrollPaddingInline\", v); }\r\nexport function scrollPaddingInlineEnd(v: string) { return new CssProp(\"scrollPaddingInlineEnd\", v); }\r\nexport function scrollPaddingInlineStart(v: string) { return new CssProp(\"scrollPaddingInlineStart\", v); }\r\nexport function scrollPaddingLeft(v: string) { return new CssProp(\"scrollPaddingLeft\", v); }\r\nexport function scrollPaddingRight(v: string) { return new CssProp(\"scrollPaddingRight\", v); }\r\nexport function scrollPaddingTop(v: string) { return new CssProp(\"scrollPaddingTop\", v); }\r\nexport function scrollSnapAlign(v: string) { return new CssProp(\"scrollSnapAlign\", v); }\r\nexport function scrollSnapStop(v: string) { return new CssProp(\"scrollSnapStop\", v); }\r\nexport function scrollSnapType(v: string) { return new CssProp(\"scrollSnapType\", v); }\r\nexport function shapeImageThreshold(v: string) { return new CssProp(\"shapeImageThreshold\", v); }\r\nexport function shapeMargin(v: string) { return new CssProp(\"shapeMargin\", v); }\r\nexport function shapeOutside(v: string) { return new CssProp(\"shapeOutside\", v); }\r\nexport function shapeRendering(v: string) { return new CssProp(\"shapeRendering\", v); }\r\nexport function speak(v: string) { return new CssProp(\"speak\", v); }\r\nexport function stopColor(v: string) { return new CssProp(\"stopColor\", v); }\r\nexport function stopOpacity(v: string) { return new CssProp(\"stopOpacity\", v); }\r\nexport function stroke(v: string) { return new CssProp(\"stroke\", v); }\r\nexport function strokeDasharray(v: string) { return new CssProp(\"strokeDasharray\", v); }\r\nexport function strokeDashoffset(v: string) { return new CssProp(\"strokeDashoffset\", v); }\r\nexport function strokeLinecap(v: string) { return new CssProp(\"strokeLinecap\", v); }\r\nexport function strokeLinejoin(v: string) { return new CssProp(\"strokeLinejoin\", v); }\r\nexport function strokeMiterlimit(v: string) { return new CssProp(\"strokeMiterlimit\", v); }\r\nexport function strokeOpacity(v: string) { return new CssProp(\"strokeOpacity\", v); }\r\nexport function strokeWidth(v: string) { return new CssProp(\"strokeWidth\", v); }\r\nexport function tabSize(v: string) { return new CssProp(\"tabSize\", v); }\r\nexport function tableLayout(v: string) { return new CssProp(\"tableLayout\", v); }\r\nexport function textAlign(v: string) { return new CssProp(\"textAlign\", v); }\r\nexport function textAlignLast(v: string) { return new CssProp(\"textAlignLast\", v); }\r\nexport function textAnchor(v: string) { return new CssProp(\"textAnchor\", v); }\r\nexport function textCombineUpright(v: string) { return new CssProp(\"textCombineUpright\", v); }\r\nexport function textDecoration(v: string) { return new CssProp(\"textDecoration\", v); }\r\nexport function textDecorationColor(v: string) { return new CssProp(\"textDecorationColor\", v); }\r\nexport function textDecorationLine(v: string) { return new CssProp(\"textDecorationLine\", v); }\r\nexport function textDecorationSkipInk(v: string) { return new CssProp(\"textDecorationSkipInk\", v); }\r\nexport function textDecorationStyle(v: string) { return new CssProp(\"textDecorationStyle\", v); }\r\nexport function textIndent(v: string) { return new CssProp(\"textIndent\", v); }\r\nexport function textOrientation(v: string) { return new CssProp(\"textOrientation\", v); }\r\nexport function textOverflow(v: string) { return new CssProp(\"textOverflow\", v); }\r\nexport function textRendering(v: string) { return new CssProp(\"textRendering\", v); }\r\nexport function textShadow(v: string) { return new CssProp(\"textShadow\", v); }\r\nexport function textSizeAdjust(v: string) { return new CssProp(\"textSizeAdjust\", v); }\r\nexport function textTransform(v: string) { return new CssProp(\"textTransform\", v); }\r\nexport function textUnderlinePosition(v: string) { return new CssProp(\"textUnderlinePosition\", v); }\r\nexport function top(v: string) { return new CssProp(\"top\", v); }\r\nexport function touchAction(v: string) { return new CssProp(\"touchAction\", v); }\r\nexport function transform(v: string) { return new CssProp(\"transform\", v); }\r\nexport function transformBox(v: string) { return new CssProp(\"transformBox\", v); }\r\nexport function transformOrigin(v: string) { return new CssProp(\"transformOrigin\", v); }\r\nexport function transformStyle(v: string) { return new CssProp(\"transformStyle\", v); }\r\nexport function transition(v: string) { return new CssProp(\"transition\", v); }\r\nexport function transitionDelay(v: string) { return new CssProp(\"transitionDelay\", v); }\r\nexport function transitionDuration(v: string) { return new CssProp(\"transitionDuration\", v); }\r\nexport function transitionProperty(v: string) { return new CssProp(\"transitionProperty\", v); }\r\nexport function transitionTimingFunction(v: string) { return new CssProp(\"transitionTimingFunction\", v); }\r\nexport function unicodeBidi(v: string) { return new CssProp(\"unicodeBidi\", v); }\r\nexport function unicodeRange(v: string) { return new CssProp(\"unicodeRange\", v); }\r\nexport function userSelect(v: string) { return new CssProp(\"userSelect\", v); }\r\nexport function userZoom(v: string) { return new CssProp(\"userZoom\", v); }\r\nexport function vectorEffect(v: string) { return new CssProp(\"vectorEffect\", v); }\r\nexport function verticalAlign(v: string) { return new CssProp(\"verticalAlign\", v); }\r\nexport function visibility(v: string) { return new CssProp(\"visibility\", v); }\r\nexport function whiteSpace(v: string) { return new CssProp(\"whiteSpace\", v); }\r\nexport function widows(v: string) { return new CssProp(\"widows\", v); }\r\nexport function width(v: string) { return new CssProp(\"width\", v); }\r\nexport function willChange(v: string) { return new CssProp(\"willChange\", v); }\r\nexport function wordBreak(v: string) { return new CssProp(\"wordBreak\", v); }\r\nexport function wordSpacing(v: string) { return new CssProp(\"wordSpacing\", v); }\r\nexport function wordWrap(v: string) { return new CssProp(\"wordWrap\", v); }\r\nexport function writingMode(v: string) { return new CssProp(\"writingMode\", v); }\r\nexport function x(v: string) { return new CssProp(\"x\", v); }\r\nexport function y(v: string) { return new CssProp(\"y\", v); }\r\nexport function zIndex(v: number) { return new CssProp(\"zIndex\", v.toFixed(0)); }\r\nexport function zoom(v: number) { return new CssProp(\"zoom\", v.toFixed(0)); }\r\n\r\n\r\n/**\r\n * A selection of fonts for preferred monospace rendering.\r\n **/\r\nexport function getMonospaceFonts() {\r\n    return \"ui-monospace, 'Droid Sans Mono', 'Cascadia Mono', 'Segoe UI Mono', 'Ubuntu Mono', 'Roboto Mono', Menlo, Monaco, Consolas, monospace\";\r\n}\r\n\r\n/**\r\n * A selection of fonts for preferred monospace rendering.\r\n **/\r\nexport function getMonospaceFamily() {\r\n    return fontFamily(getMonospaceFonts());\r\n}\r\n\r\n/**\r\n * A selection of fonts that should match whatever the user's operating system normally uses.\r\n **/\r\nexport function getSystemFonts() {\r\n    return \"system-ui, -apple-system, '.SFNSText-Regular', 'San Francisco', 'Segoe UI', 'Ubuntu', 'Roboto', 'Noto Sans' 'Droid Sans', sans-serif\";\r\n}\r\n\r\n/**\r\n * A selection of fonts that should match whatever the user's operating system normally uses.\r\n **/\r\nexport function getSystemFamily() {\r\n    return fontFamily(getSystemFonts());\r\n}\r\n\r\n/**\r\n * A selection of serif fonts.\r\n **/\r\nexport function getSerifFonts() {\r\n    return \"Georgia, Cambria, 'Times New Roman', Times, serif\";\r\n}\r\n\r\nexport function getSerifFamily() {\r\n    return fontFamily(getSerifFonts());\r\n}\r\n\r\n\r\nexport class CSSInJSRule {\r\n    constructor(private selector: string, private props: CssProp[]) {\r\n    }\r\n\r\n    apply(sheet: CSSStyleSheet) {\r\n        const style = this.props\r\n            .map(prop => `${prop.name}: ${prop.value};`)\r\n            .join(\"\");\r\n        sheet.insertRule(\r\n            `${this.selector} {${style}}`,\r\n            sheet.cssRules.length);\r\n    }\r\n}\r\n\r\nexport function rule(selector: string, ...props: CssProp[]): CSSInJSRule {\r\n    return new CSSInJSRule(selector, props);\r\n}","import { isBoolean, isFunction, isNumber, isObject, isString } from \"../typeChecks\";\r\nimport { Attr, type } from \"./attrs\";\r\nimport { CSSInJSRule, CssPropSet, margin, styles } from \"./css\";\r\n\r\nexport interface ErsatzElement {\r\n    element: HTMLElement;\r\n}\r\n\r\nexport interface ErsatzElements {\r\n    elements: HTMLElement[];\r\n}\r\n\r\ninterface IAppliable {\r\n    apply(x: any): any;\r\n}\r\n\r\ntype makesIAppliable = (v: any) => IAppliable;\r\n\r\nexport type Appendable = string | Node | ErsatzElement | ErsatzElements;\r\n\r\n\r\nexport type TagChild = Appendable\r\n    | IAppliable\r\n    | makesIAppliable\r\n    | number\r\n    | boolean\r\n    | Date\r\n    | CssPropSet;\r\n\r\nfunction isErsatzElement(obj: any): obj is ErsatzElement {\r\n    return isObject(obj)\r\n        && \"element\" in obj\r\n        && (obj as any).element instanceof Node;\r\n}\r\n\r\nfunction isErsatzElements(obj: any): obj is ErsatzElements {\r\n    return isObject(obj)\r\n        && \"elements\" in obj\r\n        && (obj as any).elements instanceof Array;\r\n}\r\n\r\nexport interface IFocusable {\r\n    focus(): void;\r\n}\r\n\r\nexport function isFocusable(elem: any): elem is IFocusable {\r\n    return \"focus\" in elem && isFunction((elem as IFocusable).focus);\r\n}\r\n\r\nexport function elementSetDisplay(elem: HTMLElement, visible: boolean, visibleDisplayType: string = \"block\"): void {\r\n    elem.style.display = visible ? visibleDisplayType : \"none\";\r\n}\r\n\r\nexport function elementIsDisplayed(elem: HTMLElement): boolean {\r\n    return elem.style.display !== \"none\";\r\n}\r\n\r\nexport function elementAppend(parent: ParentNode, ...children: Appendable[]) {\r\n    const arr = new Array<string | Node>();\r\n    for (const child of children) {\r\n        if (isErsatzElement(child)) {\r\n            arr.push(child.element);\r\n        }\r\n        else if (isErsatzElements(child)) {\r\n            arr.push(...child.elements);\r\n        }\r\n        else {\r\n            arr.push(child);\r\n        }\r\n    }\r\n\r\n    parent.append(...arr);\r\n}\r\n\r\nexport function getElement<T extends HTMLElement>(selector: string): T {\r\n    return document.querySelector<T>(selector);\r\n}\r\n\r\nexport function getButton(selector: string) {\r\n    return getElement<HTMLButtonElement>(selector);\r\n}\r\n\r\nexport function getInput(selector: string) {\r\n    return getElement<HTMLInputElement>(selector);\r\n}\r\n\r\nexport function getSelect(selector: string) {\r\n    return getElement<HTMLSelectElement>(selector);\r\n}\r\n\r\nexport function getCanvas(selector: string) {\r\n    return getElement<HTMLCanvasElement>(selector);\r\n}\r\n\r\n/**\r\n * Creates an HTML element for a given tag name.\r\n * \r\n * Boolean attributes that you want to default to true can be passed\r\n * as just the attribute creating function, \r\n *   e.g. `Audio(autoPlay)` vs `Audio(autoPlay(true))`\r\n * @param name - the name of the tag\r\n * @param rest - optional attributes, child elements, and text\r\n * @returns\r\n */\r\nexport function tag(name: string, ...rest: TagChild[]) {\r\n    let elem: HTMLElement | null = null;\r\n\r\n    for (const attr of rest) {\r\n        if (attr instanceof Attr) {\r\n            if (attr.key === \"id\") {\r\n                elem = document.getElementById(attr.value);\r\n                break;\r\n            }\r\n            else if (attr.key === \"selector\") {\r\n                elem = document.querySelector(attr.value);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (elem == null) {\r\n        elem = document.createElement(name);\r\n    }\r\n\r\n    for (let x of rest) {\r\n        if (x != null) {\r\n            if (x instanceof CssPropSet) {\r\n                x.apply(elem.style);\r\n            }\r\n            else if (isString(x)\r\n                || isNumber(x)\r\n                || isBoolean(x)\r\n                || x instanceof Date\r\n                || x instanceof Node\r\n                || isErsatzElement(x)) {\r\n\r\n                if (isErsatzElement(x)) {\r\n                    x = x.element;\r\n                }\r\n                else if (!(x instanceof Node)) {\r\n                    x = document.createTextNode(x.toLocaleString());\r\n                }\r\n\r\n                elem.appendChild(x);\r\n            }\r\n            else if (isErsatzElements(x)) {\r\n                elem.append(...x.elements);\r\n            }\r\n            else {\r\n                if (x instanceof Function) {\r\n                    x = x(true);\r\n                }\r\n\r\n                if (!(x instanceof Attr) || x.key !== \"selector\") {\r\n                    x.apply(elem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return elem;\r\n}\r\n\r\nexport interface IDisableable {\r\n    disabled: boolean;\r\n}\r\n\r\nexport function isDisableable(element: any): element is IDisableable {\r\n    return \"disabled\" in element\r\n        && typeof element.disabled === \"boolean\";\r\n}\r\n\r\n/**\r\n * Empty an element of all children. This is faster than setting `innerHTML = \"\"`.\r\n */\r\nexport function elementClearChildren(elem: HTMLElement) {\r\n    while (elem.lastChild) {\r\n        elem.lastChild.remove();\r\n    }\r\n}\r\n\r\nexport function elementSetText(elem: HTMLElement, text: string) {\r\n    elementClearChildren(elem);\r\n    elem.appendChild(TextNode(text));\r\n}\r\n\r\n\r\nexport type HTMLAudioElementWithSinkID = HTMLAudioElement & {\r\n    sinkId: string;\r\n    setSinkId(id: string): Promise<void>;\r\n};\r\n\r\nexport function A(...rest: TagChild[]): HTMLAnchorElement { return tag(\"a\", ...rest) as HTMLAnchorElement; }\r\nexport function Abbr(...rest: TagChild[]): HTMLElement { return tag(\"abbr\", ...rest); }\r\nexport function Address(...rest: TagChild[]): HTMLElement { return tag(\"address\", ...rest); }\r\nexport function Area(...rest: TagChild[]): HTMLAreaElement { return tag(\"area\", ...rest) as HTMLAreaElement; }\r\nexport function Article(...rest: TagChild[]): HTMLElement { return tag(\"article\", ...rest); }\r\nexport function Aside(...rest: TagChild[]): HTMLElement { return tag(\"aside\", ...rest); }\r\nexport function Audio(...rest: TagChild[]): HTMLAudioElementWithSinkID { return tag(\"audio\", ...rest) as HTMLAudioElementWithSinkID; }\r\nexport function B(...rest: TagChild[]): HTMLElement { return tag(\"b\", ...rest); }\r\nexport function Base(...rest: TagChild[]): HTMLBaseElement { return tag(\"base\", ...rest) as HTMLBaseElement; }\r\nexport function BDI(...rest: TagChild[]): HTMLElement { return tag(\"bdi\", ...rest); }\r\nexport function BDO(...rest: TagChild[]): HTMLElement { return tag(\"bdo\", ...rest); }\r\nexport function BlockQuote(...rest: TagChild[]): HTMLQuoteElement { return tag(\"blockquote\", ...rest) as HTMLQuoteElement; }\r\nexport function Body(...rest: TagChild[]): HTMLBodyElement { return tag(\"body\", ...rest) as HTMLBodyElement; }\r\nexport function BR(): HTMLBRElement { return tag(\"br\") as HTMLBRElement; }\r\nexport function ButtonRaw(...rest: TagChild[]): HTMLButtonElement { return tag(\"button\", ...rest) as HTMLButtonElement; }\r\nexport function Button(...rest: TagChild[]): HTMLButtonElement { return ButtonRaw(...rest, type(\"button\")); }\r\nexport function ButtonSubmit(...rest: TagChild[]): HTMLButtonElement { return ButtonRaw(...rest, type(\"submit\")); }\r\nexport function ButtonReset(...rest: TagChild[]): HTMLButtonElement { return ButtonRaw(...rest, type(\"reset\")); }\r\nexport function Canvas(...rest: TagChild[]): HTMLCanvasElement { return tag(\"canvas\", ...rest) as HTMLCanvasElement; }\r\nexport function Caption(...rest: TagChild[]): HTMLTableCaptionElement { return tag(\"caption\", ...rest) as HTMLTableCaptionElement; }\r\nexport function Cite(...rest: TagChild[]): HTMLElement { return tag(\"cite\", ...rest); }\r\nexport function Code(...rest: TagChild[]): HTMLElement { return tag(\"code\", ...rest); }\r\nexport function Col(...rest: TagChild[]): HTMLTableColElement { return tag(\"col\", ...rest) as HTMLTableColElement; }\r\nexport function ColGroup(...rest: TagChild[]): HTMLTableColElement { return tag(\"colgroup\", ...rest) as HTMLTableColElement; }\r\nexport function Data(...rest: TagChild[]): HTMLDataElement { return tag(\"data\", ...rest) as HTMLDataElement; }\r\nexport function DataList(...rest: TagChild[]): HTMLDataListElement { return tag(\"datalist\", ...rest) as HTMLDataListElement; }\r\nexport function DD(...rest: TagChild[]): HTMLElement { return tag(\"dd\", ...rest); }\r\nexport function Del(...rest: TagChild[]): HTMLModElement { return tag(\"del\", ...rest) as HTMLModElement; }\r\nexport function Details(...rest: TagChild[]): HTMLDetailsElement { return tag(\"details\", ...rest) as HTMLDetailsElement; }\r\nexport function DFN(...rest: TagChild[]): HTMLElement { return tag(\"dfn\", ...rest); }\r\nexport function Dialog(...rest: TagChild[]): HTMLDialogElement { return tag(\"dialog\", ...rest) as HTMLDialogElement; }\r\nexport function Dir(...rest: TagChild[]): HTMLDirectoryElement { return tag(\"dir\", ...rest) as HTMLDirectoryElement; }\r\nexport function Div(...rest: TagChild[]): HTMLDivElement { return tag(\"div\", ...rest) as HTMLDivElement; }\r\nexport function DL(...rest: TagChild[]): HTMLDListElement { return tag(\"dl\", ...rest) as HTMLDListElement; }\r\nexport function DT(...rest: TagChild[]): HTMLElement { return tag(\"dt\", ...rest); }\r\nexport function Em(...rest: TagChild[]): HTMLElement { return tag(\"em\", ...rest); }\r\nexport function Embed(...rest: TagChild[]): HTMLEmbedElement { return tag(\"embed\", ...rest) as HTMLEmbedElement; }\r\nexport function FieldSet(...rest: TagChild[]): HTMLFieldSetElement { return tag(\"fieldset\", ...rest) as HTMLFieldSetElement; }\r\nexport function FigCaption(...rest: TagChild[]): HTMLElement { return tag(\"figcaption\", ...rest); }\r\nexport function Figure(...rest: TagChild[]): HTMLElement { return tag(\"figure\", ...rest); }\r\nexport function Footer(...rest: TagChild[]): HTMLElement { return tag(\"footer\", ...rest); }\r\nexport function Form(...rest: TagChild[]): HTMLFormElement { return tag(\"form\", ...rest) as HTMLFormElement; }\r\nexport function H1(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h1\", ...rest) as HTMLHeadingElement; }\r\nexport function H2(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h2\", ...rest) as HTMLHeadingElement; }\r\nexport function H3(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h3\", ...rest) as HTMLHeadingElement; }\r\nexport function H4(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h4\", ...rest) as HTMLHeadingElement; }\r\nexport function H5(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h5\", ...rest) as HTMLHeadingElement; }\r\nexport function H6(...rest: TagChild[]): HTMLHeadingElement { return tag(\"h6\", ...rest) as HTMLHeadingElement; }\r\nexport function HR(...rest: TagChild[]): HTMLHRElement { return tag(\"hr\", ...rest) as HTMLHRElement; }\r\nexport function Head(...rest: TagChild[]): HTMLHeadElement { return tag(\"head\", ...rest) as HTMLHeadElement; }\r\nexport function Header(...rest: TagChild[]): HTMLElement { return tag(\"header\", ...rest); }\r\nexport function HGroup(...rest: TagChild[]): HTMLElement { return tag(\"hgroup\", ...rest); }\r\nexport function HTML(...rest: TagChild[]): HTMLHtmlElement { return tag(\"html\", ...rest) as HTMLHtmlElement; }\r\nexport function I(...rest: TagChild[]): HTMLElement { return tag(\"i\", ...rest); }\r\nexport function IFrame(...rest: TagChild[]): HTMLIFrameElement { return tag(\"iframe\", ...rest) as HTMLIFrameElement; }\r\nexport function Img(...rest: TagChild[]): HTMLImageElement { return tag(\"img\", ...rest) as HTMLImageElement; }\r\nexport function Input(...rest: TagChild[]): HTMLInputElement { return tag(\"input\", ...rest) as HTMLInputElement; }\r\nexport function Ins(...rest: TagChild[]): HTMLModElement { return tag(\"ins\", ...rest) as HTMLModElement; }\r\nexport function KBD(...rest: TagChild[]): HTMLElement { return tag(\"kbd\", ...rest); }\r\nexport function Label(...rest: TagChild[]): HTMLLabelElement { return tag(\"label\", ...rest) as HTMLLabelElement; }\r\nexport function Legend(...rest: TagChild[]): HTMLLegendElement { return tag(\"legend\", ...rest) as HTMLLegendElement; }\r\nexport function LI(...rest: TagChild[]): HTMLLIElement { return tag(\"li\", ...rest) as HTMLLIElement; }\r\nexport function Link(...rest: TagChild[]): HTMLLinkElement { return tag(\"link\", ...rest) as HTMLLinkElement; }\r\nexport function Main(...rest: TagChild[]): HTMLElement { return tag(\"main\", ...rest); }\r\nexport function HtmlMap(...rest: TagChild[]): HTMLMapElement { return tag(\"map\", ...rest) as HTMLMapElement; }\r\nexport function Mark(...rest: TagChild[]): HTMLElement { return tag(\"mark\", ...rest); }\r\nexport function Marquee(...rest: TagChild[]): HTMLMarqueeElement { return tag(\"marquee\", ...rest) as HTMLMarqueeElement; }\r\nexport function Menu(...rest: TagChild[]): HTMLMenuElement { return tag(\"menu\", ...rest) as HTMLMenuElement; }\r\nexport function Meta(...rest: TagChild[]): HTMLMetaElement { return tag(\"meta\", ...rest) as HTMLMetaElement; }\r\nexport function Meter(...rest: TagChild[]): HTMLMeterElement { return tag(\"meter\", ...rest) as HTMLMeterElement; }\r\nexport function Nav(...rest: TagChild[]): HTMLElement { return tag(\"nav\", ...rest); }\r\nexport function NoScript(...rest: TagChild[]): HTMLElement { return tag(\"noscript\", ...rest); }\r\nexport function HtmlObject(...rest: TagChild[]): HTMLObjectElement { return tag(\"object\", ...rest) as HTMLObjectElement; }\r\nexport function OL(...rest: TagChild[]): HTMLOListElement { return tag(\"ol\", ...rest) as HTMLOListElement; }\r\nexport function OptGroup(...rest: TagChild[]): HTMLOptGroupElement { return tag(\"optgroup\", ...rest) as HTMLOptGroupElement; }\r\nexport function Option(...rest: TagChild[]): HTMLOptionElement { return tag(\"option\", ...rest) as HTMLOptionElement; }\r\nexport function Output(...rest: TagChild[]): HTMLOutputElement { return tag(\"output\", ...rest) as HTMLOutputElement; }\r\nexport function P(...rest: TagChild[]): HTMLParagraphElement { return tag(\"p\", ...rest) as HTMLParagraphElement; }\r\nexport function Param(...rest: TagChild[]): HTMLParamElement { return tag(\"param\", ...rest) as HTMLParamElement; }\r\nexport function Picture(...rest: TagChild[]): HTMLPictureElement { return tag(\"picture\", ...rest) as HTMLPictureElement; }\r\nexport function Pre(...rest: TagChild[]): HTMLPreElement { return tag(\"pre\", ...rest) as HTMLPreElement; }\r\nexport function Progress(...rest: TagChild[]): HTMLProgressElement { return tag(\"progress\", ...rest) as HTMLProgressElement; }\r\nexport function Q(...rest: TagChild[]): HTMLQuoteElement { return tag(\"q\", ...rest) as HTMLQuoteElement; }\r\nexport function RB(...rest: TagChild[]): HTMLElement { return tag(\"rb\", ...rest); }\r\nexport function RP(...rest: TagChild[]): HTMLElement { return tag(\"rp\", ...rest); }\r\nexport function RT(...rest: TagChild[]): HTMLElement { return tag(\"rt\", ...rest); }\r\nexport function RTC(...rest: TagChild[]): HTMLElement { return tag(\"rtc\", ...rest); }\r\nexport function Ruby(...rest: TagChild[]): HTMLElement { return tag(\"ruby\", ...rest); }\r\nexport function S(...rest: TagChild[]): HTMLElement { return tag(\"s\", ...rest); }\r\nexport function Samp(...rest: TagChild[]): HTMLElement { return tag(\"samp\", ...rest); }\r\nexport function Script(...rest: TagChild[]): HTMLScriptElement { return tag(\"script\", ...rest) as HTMLScriptElement; }\r\nexport function Section(...rest: TagChild[]): HTMLElement { return tag(\"section\", ...rest); }\r\nexport function Select(...rest: TagChild[]): HTMLSelectElement { return tag(\"select\", ...rest) as HTMLSelectElement; }\r\nexport function Slot(...rest: TagChild[]): HTMLSlotElement { return tag(\"slot\", ...rest) as HTMLSlotElement; }\r\nexport function Small(...rest: TagChild[]): HTMLElement { return tag(\"small\", ...rest); }\r\nexport function Source(...rest: TagChild[]): HTMLSourceElement { return tag(\"source\", ...rest) as HTMLSourceElement; }\r\nexport function Span(...rest: TagChild[]): HTMLSpanElement { return tag(\"span\", ...rest) as HTMLSpanElement; }\r\nexport function Strong(...rest: TagChild[]): HTMLElement { return tag(\"strong\", ...rest); }\r\nexport function Sub(...rest: TagChild[]): HTMLElement { return tag(\"sub\", ...rest); }\r\nexport function Summary(...rest: TagChild[]): HTMLElement { return tag(\"summary\", ...rest); }\r\nexport function Sup(...rest: TagChild[]): HTMLElement { return tag(\"sup\", ...rest); }\r\nexport function Table(...rest: TagChild[]): HTMLTableElement { return tag(\"table\", ...rest) as HTMLTableElement; }\r\nexport function TBody(...rest: TagChild[]): HTMLTableSectionElement { return tag(\"tbody\", ...rest) as HTMLTableSectionElement; }\r\nexport function TD(...rest: TagChild[]): HTMLTableDataCellElement { return tag(\"td\", ...rest) as HTMLTableDataCellElement; }\r\nexport function Template(...rest: TagChild[]): HTMLTemplateElement { return tag(\"template\", ...rest) as HTMLTemplateElement; }\r\nexport function TextArea(...rest: TagChild[]): HTMLTextAreaElement { return tag(\"textarea\", ...rest) as HTMLTextAreaElement; }\r\nexport function TFoot(...rest: TagChild[]): HTMLTableSectionElement { return tag(\"tfoot\", ...rest) as HTMLTableSectionElement; }\r\nexport function TH(...rest: TagChild[]): HTMLTableHeaderCellElement { return tag(\"th\", ...rest) as HTMLTableHeaderCellElement; }\r\nexport function THead(...rest: TagChild[]): HTMLTableSectionElement { return tag(\"thead\", ...rest) as HTMLTableSectionElement; }\r\nexport function Time(...rest: TagChild[]): HTMLTimeElement { return tag(\"time\", ...rest) as HTMLTimeElement; }\r\nexport function Title(...rest: TagChild[]): HTMLTitleElement { return tag(\"title\", ...rest) as HTMLTitleElement; }\r\nexport function TR(...rest: TagChild[]): HTMLTableRowElement { return tag(\"tr\", ...rest) as HTMLTableRowElement; }\r\nexport function Track(...rest: TagChild[]): HTMLTrackElement { return tag(\"track\", ...rest) as HTMLTrackElement; }\r\nexport function U(...rest: TagChild[]): HTMLElement { return tag(\"u\", ...rest); }\r\nexport function UL(...rest: TagChild[]): HTMLUListElement { return tag(\"ul\", ...rest) as HTMLUListElement; }\r\nexport function Var(...rest: TagChild[]): HTMLElement { return tag(\"var\", ...rest); }\r\nexport function Video(...rest: TagChild[]): HTMLVideoElement { return tag(\"video\", ...rest) as HTMLVideoElement; }\r\nexport function WBR(): HTMLElement { return tag(\"wbr\"); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a button.\r\n */\r\nexport function InputButton(...rest: TagChild[]): HTMLInputElement { return Input(type(\"button\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a checkbox.\r\n */\r\nexport function InputCheckbox(...rest: TagChild[]): HTMLInputElement { return Input(type(\"checkbox\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a color picker.\r\n */\r\nexport function InputColor(...rest: TagChild[]): HTMLInputElement { return Input(type(\"color\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a date picker.\r\n */\r\nexport function InputDate(...rest: TagChild[]): HTMLInputElement { return Input(type(\"date\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a local date-time picker.\r\n */\r\nexport function InputDateTime(...rest: TagChild[]): HTMLInputElement { return Input(type(\"datetime-local\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is an email entry field.\r\n */\r\nexport function InputEmail(...rest: TagChild[]): HTMLInputElement { return Input(type(\"email\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a file picker.\r\n */\r\nexport function InputFile(...rest: TagChild[]): HTMLInputElement { return Input(type(\"file\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a hidden field.\r\n */\r\nexport function InputHidden(...rest: TagChild[]): HTMLInputElement { return Input(type(\"hidden\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a graphical submit button.\r\n */\r\nexport function InputImage(...rest: TagChild[]): HTMLInputElement { return Input(type(\"image\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a month picker.\r\n */\r\nexport function InputMonth(...rest: TagChild[]): HTMLInputElement { return Input(type(\"month\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a month picker.\r\n */\r\nexport function InputNumber(...rest: TagChild[]): HTMLInputElement { return Input(type(\"number\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a password entry field.\r\n */\r\nexport function InputPassword(...rest: TagChild[]): HTMLInputElement { return Input(type(\"password\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a radio button.\r\n */\r\nexport function InputRadio(...rest: TagChild[]): HTMLInputElement { return Input(type(\"radio\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a range selector.\r\n */\r\nexport function InputRange(...rest: TagChild[]): HTMLInputElement { return Input(type(\"range\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a form reset button.\r\n */\r\nexport function InputReset(...rest: TagChild[]): HTMLInputElement { return Input(type(\"reset\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a search entry field.\r\n */\r\nexport function InputSearch(...rest: TagChild[]): HTMLInputElement { return Input(type(\"search\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a submit button.\r\n */\r\nexport function InputSubmit(...rest: TagChild[]): HTMLInputElement { return Input(type(\"submit\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a telephone number entry field.\r\n */\r\nexport function InputTelephone(...rest: TagChild[]): HTMLInputElement { return Input(type(\"tel\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a text entry field.\r\n */\r\nexport function InputText(...rest: TagChild[]): HTMLInputElement { return Input(type(\"text\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a time picker.\r\n */\r\nexport function InputTime(...rest: TagChild[]): HTMLInputElement { return Input(type(\"time\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a URL entry field.\r\n */\r\nexport function InputURL(...rest: TagChild[]): HTMLInputElement { return Input(type(\"url\"), ...rest); }\r\n\r\n/**\r\n * creates an HTML Input tag that is a week picker.\r\n */\r\nexport function InputWeek(...rest: TagChild[]): HTMLInputElement { return Input(type(\"week\"), ...rest); }\r\n\r\n/**\r\n * Creates a text node out of the give input.\r\n */\r\nexport function TextNode(txt: any): Text {\r\n    return document.createTextNode(txt);\r\n}\r\n\r\n/**\r\n * Creates a Div element with margin: auto.\r\n */\r\nexport function Run(...rest: TagChild[]): HTMLDivElement {\r\n    return Div(\r\n        styles(\r\n            margin(\"auto\")),\r\n        ...rest);\r\n}\r\n\r\nexport function Style(...rest: CSSInJSRule[]): HTMLStyleElement {\r\n    let elem = document.createElement(\"style\");\r\n    document.head.appendChild(elem);\r\n\r\n    for (let x of rest) {\r\n        x.apply(elem.sheet);\r\n    }\r\n\r\n    return elem;\r\n}","import { arrayScan } from \"kudzu/arrays/arrayScan\";\r\nimport { arraySortByKey } from \"kudzu/arrays/arraySortedInsert\";\r\nimport { TypedEvent, TypedEventBase } from \"kudzu/events/EventBase\";\r\nimport { autoPlay, playsInline } from \"kudzu/html/attrs\";\r\nimport { display, styles } from \"kudzu/html/css\";\r\nimport { Audio, HTMLAudioElementWithSinkID } from \"kudzu/html/tags\";\r\nimport { isDefined, isFunction, isNullOrUndefined } from \"kudzu/typeChecks\";\r\nimport { MediaDeviceSet } from \"./MediaDeviceSet\";\r\nimport { MediaPermissionSet } from \"./MediaPermissionSet\";\r\n\r\n/**\r\n * Indicates whether or not the current browser can change the destination device for audio output.\r\n **/\r\nexport const canChangeAudioOutput = isFunction((HTMLAudioElement.prototype as any).setSinkId);\r\n\r\n\r\nfunction filterDeviceDuplicates(devices: MediaDeviceInfo[]) {\r\n    const filtered = [];\r\n    for (let i = 0; i < devices.length; ++i) {\r\n        const a = devices[i];\r\n        let found = false;\r\n        for (let j = 0; j < filtered.length && !found; ++j) {\r\n            const b = filtered[j];\r\n            found = a.kind === b.kind && b.label.indexOf(a.label) > 0;\r\n        }\r\n\r\n        if (!found) {\r\n            filtered.push(a);\r\n        }\r\n    }\r\n\r\n    return filtered;\r\n}\r\n\r\nexport class DeviceManagerInputsChangedEvent\r\n    extends TypedEvent<\"inputschanged\"> {\r\n    public constructor(public readonly audio: MediaDeviceInfo, public readonly video: MediaDeviceInfo) {\r\n        super(\"inputschanged\");\r\n    }\r\n}\r\n\r\nexport class DeviceManagerAudioOutputChangedEvent\r\n    extends TypedEvent<\"audiooutputchanged\"> {\r\n    public constructor(public readonly device: MediaDeviceInfo) {\r\n        super(\"audiooutputchanged\");\r\n    }\r\n}\r\n\r\nconst PREFERRED_AUDIO_OUTPUT_ID_KEY = \"calla:preferredAudioOutputID\";\r\nconst PREFERRED_AUDIO_INPUT_ID_KEY = \"calla:preferredAudioInputID\";\r\nconst PREFERRED_VIDEO_INPUT_ID_KEY = \"calla:preferredVideoInputID\";\r\n\r\nexport class DeviceManager\r\n    extends TypedEventBase<{\r\n        inputschanged: DeviceManagerInputsChangedEvent;\r\n        audiooutputchanged: DeviceManagerAudioOutputChangedEvent;\r\n    }> {\r\n\r\n    private element: HTMLAudioElementWithSinkID = null;\r\n\r\n    private _hasAudioPermission = false;\r\n    get hasAudioPermission(): boolean {\r\n        return this._hasAudioPermission;\r\n    }\r\n\r\n    private _hasVideoPermission = false;\r\n    get hasVideoPermission(): boolean {\r\n        return this._hasVideoPermission;\r\n    }\r\n\r\n    private _currentStream: MediaStream = null;\r\n    get currentStream(): MediaStream {\r\n        return this._currentStream;\r\n    }\r\n\r\n    set currentStream(v: MediaStream) {\r\n        if (v !== this.currentStream) {\r\n            if (isDefined(this.currentStream)\r\n                && this.currentStream.active) {\r\n                for (const track of this.currentStream.getTracks()) {\r\n                    track.stop();\r\n                }\r\n            }\r\n\r\n            this._currentStream = v;\r\n        }\r\n    }\r\n\r\n    constructor(public needsVideoDevice = false) {\r\n        super();\r\n\r\n        if (canChangeAudioOutput) {\r\n            this.element = Audio(\r\n                playsInline,\r\n                autoPlay,\r\n                styles(\r\n                    display(\"none\")));\r\n\r\n            document.body.appendChild(this.element);\r\n        }\r\n    }\r\n\r\n    async setDestination(destination: MediaStreamAudioDestinationNode): Promise<void> {\r\n        try {\r\n            if (canChangeAudioOutput && destination.stream !== this.element.srcObject) {\r\n                this.element.srcObject = destination.stream;\r\n                const devices = await this.getAudioOutputDevices();\r\n                const device = arrayScan(\r\n                    devices,\r\n                    (d) => d.deviceId === this.preferredAudioOutputID,\r\n                    (d) => d.deviceId === \"default\",\r\n                    (d) => d.deviceId.length > 0);\r\n                if (device) {\r\n                    await this.setAudioOutputDevice(device);\r\n                }\r\n                await this.element.play();\r\n            }\r\n        }\r\n        catch (exp) {\r\n            console.error(exp);\r\n        }\r\n    }\r\n\r\n    async start(): Promise<void> {\r\n        await this.enablePreferredAudioInput();\r\n        await this.enablePreferredVideoInput();\r\n    }\r\n\r\n    async enablePreferredAudioInput(): Promise<void> {\r\n        const device = await this.getPreferredAudioInput();\r\n        if (device) {\r\n            await this.setAudioInputDevice(device);\r\n        }\r\n    }\r\n\r\n    async enablePreferredVideoInput(): Promise<void> {\r\n        const device = await this.getPreferredVideoInput();\r\n        if (device) {\r\n            await this.setVideoInputDevice(device);\r\n        }\r\n    }\r\n\r\n    get preferredAudioOutputID(): string {\r\n        if (!canChangeAudioOutput) {\r\n            return null;\r\n        }\r\n\r\n        return localStorage.getItem(PREFERRED_AUDIO_OUTPUT_ID_KEY);\r\n    }\r\n\r\n    private setPreferredAudioOutputID(v: string) {\r\n        if (canChangeAudioOutput) {\r\n            localStorage.setItem(PREFERRED_AUDIO_OUTPUT_ID_KEY, v);\r\n        }\r\n    }\r\n\r\n\r\n    get preferredAudioInputID(): string {\r\n        return localStorage.getItem(PREFERRED_AUDIO_INPUT_ID_KEY);\r\n    }\r\n\r\n    private setPreferredAudioInputID(v: string) {\r\n        localStorage.setItem(PREFERRED_AUDIO_INPUT_ID_KEY, v);\r\n    }\r\n\r\n    get preferredVideoInputID(): string {\r\n        return localStorage.getItem(PREFERRED_VIDEO_INPUT_ID_KEY);\r\n    }\r\n\r\n    private setPreferredVideoInputID(v: string) {\r\n        localStorage.setItem(PREFERRED_VIDEO_INPUT_ID_KEY, v);\r\n    }\r\n\r\n    async getAudioOutputDevices(filterDuplicates: boolean = false): Promise<MediaDeviceInfo[]> {\r\n        if (!canChangeAudioOutput) {\r\n            return [];\r\n        }\r\n\r\n        const devices = await this.getAvailableDevices(filterDuplicates);\r\n        return devices && devices.audioOutput || [];\r\n    }\r\n\r\n    async getAudioInputDevices(filterDuplicates: boolean = false): Promise<MediaDeviceInfo[]> {\r\n        const devices = await this.getAvailableDevices(filterDuplicates);\r\n        return devices && devices.audioInput || [];\r\n    }\r\n\r\n    async getVideoInputDevices(filterDuplicates: boolean = false): Promise<MediaDeviceInfo[]> {\r\n        const devices = await this.getAvailableDevices(filterDuplicates);\r\n        return devices && devices.videoInput || [];\r\n    }\r\n\r\n    async getAudioOutputDevice(): Promise<MediaDeviceInfo> {\r\n        if (!canChangeAudioOutput) {\r\n            return null;\r\n        }\r\n\r\n        const curId = this.element && this.element.sinkId;\r\n        if (isNullOrUndefined(curId)) {\r\n            return null;\r\n        }\r\n\r\n        const devices = await this.getAudioOutputDevices(),\r\n            device = arrayScan(devices,\r\n                d => d.deviceId === curId);\r\n\r\n        return device;\r\n    }\r\n\r\n    async getAudioInputDevice(): Promise<MediaDeviceInfo> {\r\n        if (isNullOrUndefined(this.currentStream)\r\n            || !this.currentStream.active) {\r\n            return null;\r\n        }\r\n\r\n        const curTracks = this.currentStream.getAudioTracks();\r\n        if (curTracks.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const testTrack = curTracks[0];\r\n        const devices = await this.getAudioInputDevices();\r\n        const device = arrayScan(devices,\r\n            d => testTrack.label === d.label);\r\n\r\n        return device;\r\n    }\r\n\r\n    async getVideoInputDevice(): Promise<MediaDeviceInfo> {\r\n        if (isNullOrUndefined(this.currentStream)\r\n            || !this.currentStream.active) {\r\n            return null;\r\n        }\r\n\r\n        const curTracks = this.currentStream.getVideoTracks();\r\n        if (curTracks.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const testTrack = curTracks[0];\r\n        const devices = await this.getVideoInputDevices();\r\n        const device = arrayScan(devices,\r\n            d => testTrack.label === d.label);\r\n\r\n        return device;\r\n    }\r\n\r\n    private async getPreferredAudioInput(): Promise<MediaDeviceInfo> {\r\n        const devices = await this.getAudioInputDevices();\r\n        const device = arrayScan(\r\n            devices,\r\n            (d) => d.deviceId === this.preferredAudioInputID,\r\n            (d) => d.deviceId === \"default\",\r\n            (d) => d.deviceId.length > 0);\r\n        return device;\r\n    }\r\n\r\n    private async getPreferredVideoInput(): Promise<MediaDeviceInfo> {\r\n        const devices = await this.getVideoInputDevices();\r\n        const device = arrayScan(\r\n            devices,\r\n            (d) => d.deviceId === this.preferredVideoInputID,\r\n            (d) => this.needsVideoDevice && d.deviceId.length > 0);\r\n        return device;\r\n    }\r\n\r\n    async setAudioOutputDevice(device: MediaDeviceInfo) {\r\n        if (canChangeAudioOutput) {\r\n            if (device.kind !== \"audiooutput\") {\r\n                throw new Error(`Device is not an audio output device. Was: ${device.kind}. Label: ${device.label}`);\r\n            }\r\n\r\n            this.setPreferredAudioOutputID(device && device.deviceId || null);\r\n            const curDevice = this.element;\r\n            const curDeviceID = curDevice && curDevice.sinkId;\r\n            if (this.preferredAudioOutputID !== curDeviceID) {\r\n                if (isDefined(this.preferredAudioOutputID)) {\r\n                    await this.element.setSinkId(this.preferredAudioOutputID);\r\n                }\r\n                this.dispatchEvent(new DeviceManagerAudioOutputChangedEvent(device));\r\n            }\r\n        }\r\n    }\r\n\r\n    async setAudioInputDevice(newAudio: MediaDeviceInfo) {\r\n        if (newAudio.kind !== \"audioinput\") {\r\n            throw new Error(`Device is not an audio input device. Was: ${newAudio.kind}. Label: ${newAudio.label}`);\r\n        }\r\n\r\n        this.setPreferredAudioInputID(newAudio && newAudio.deviceId || null);\r\n        const curAudio = await this.getAudioInputDevice();\r\n        const curAudioID = curAudio && curAudio.deviceId;\r\n        if (this.preferredAudioInputID !== curAudioID) {\r\n            const curVideo = await this.getVideoInputDevice();\r\n            this.dispatchEvent(new DeviceManagerInputsChangedEvent(newAudio, curVideo));\r\n        }\r\n    }\r\n\r\n    async setVideoInputDevice(newVideo: MediaDeviceInfo) {\r\n        if (newVideo.kind !== \"videoinput\") {\r\n            throw new Error(`Device is not an video input device. Was: ${newVideo.kind}. Label: ${newVideo.label}`);\r\n        }\r\n\r\n        this.setPreferredVideoInputID(newVideo && newVideo.deviceId || null);\r\n        const curVideo = await this.getVideoInputDevice();\r\n        const curVideoID = curVideo && curVideo.deviceId;\r\n        if (this.preferredVideoInputID !== curVideoID) {\r\n            const curAudio = await this.getAudioInputDevice();\r\n            this.dispatchEvent(new DeviceManagerInputsChangedEvent(curAudio, newVideo));\r\n        }\r\n    }\r\n\r\n    private async getAvailableDevices(filterDuplicates: boolean = false): Promise<MediaDeviceSet> {\r\n        let devices = await this.getDevices();\r\n\r\n        if (filterDuplicates) {\r\n            devices = filterDeviceDuplicates(devices);\r\n        }\r\n\r\n        return {\r\n            audioOutput: canChangeAudioOutput ? devices.filter(d => d.kind === \"audiooutput\") : [],\r\n            audioInput: devices.filter(d => d.kind === \"audioinput\"),\r\n            videoInput: devices.filter(d => d.kind === \"videoinput\")\r\n        };\r\n    }\r\n\r\n    private async getDevices(): Promise<MediaDeviceInfo[]> {\r\n        let devices: MediaDeviceInfo[] = null;\r\n\r\n        for (let i = 0; i < 3; ++i) {\r\n            devices = await navigator.mediaDevices.enumerateDevices();\r\n            for (const device of devices) {\r\n                if (device.deviceId.length > 0) {\r\n                    if (!this.hasAudioPermission) {\r\n                        this._hasAudioPermission = device.kind === \"audioinput\"\r\n                            && device.label.length > 0;\r\n                    }\r\n\r\n                    if (this.needsVideoDevice && !this.hasVideoPermission) {\r\n                        this._hasVideoPermission = device.kind === \"videoinput\"\r\n                            && device.label.length > 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.hasAudioPermission\r\n                && (!this.needsVideoDevice || this.hasVideoPermission)) {\r\n                break;\r\n            }\r\n\r\n            try {\r\n                if (!this.hasAudioPermission\r\n                    || this.needsVideoDevice && !this.hasVideoPermission) {\r\n\r\n                    this.currentStream = await navigator.mediaDevices.getUserMedia({\r\n                        audio: this.preferredAudioInputID\r\n                            && { deviceId: this.preferredAudioInputID }\r\n                            || true,\r\n                        video: this.needsVideoDevice\r\n                            && (this.preferredVideoInputID\r\n                                && { deviceId: this.preferredVideoInputID }\r\n                                || true)\r\n                            || false\r\n                    });\r\n                }\r\n            }\r\n            catch (exp) {\r\n                console.warn(exp);\r\n            }\r\n        }\r\n\r\n        devices = arraySortByKey(devices || [], d => d.label);\r\n        return devices;\r\n    }\r\n\r\n    async getMediaPermissions(): Promise<MediaPermissionSet> {\r\n        await this.getDevices();\r\n        return {\r\n            audio: this.hasAudioPermission,\r\n            video: this.hasVideoPermission\r\n        };\r\n    }\r\n}","import type { AudioActivityEvent } from \"./audio/AudioActivityEvent\";\r\nimport type { InterpolatedPose } from \"./audio/positions/InterpolatedPose\";\r\nimport { AudioStreamSource } from \"./audio/sources/AudioStreamSource\";\r\n\r\nexport type CallaTeleconferenceEventType = \"serverConnected\"\r\n    | \"serverDisconnected\"\r\n    | \"serverFailed\"\r\n    | \"conferenceConnected\"\r\n    | \"conferenceJoined\"\r\n    | \"conferenceFailed\"\r\n    | \"conferenceRestored\"\r\n    | \"conferenceLeft\"\r\n    | \"participantJoined\"\r\n    | \"participantLeft\"\r\n    | \"userNameChanged\"\r\n    | \"audioMuteStatusChanged\"\r\n    | \"videoMuteStatusChanged\"\r\n    | \"audioActivity\"\r\n    | \"audioAdded\"\r\n    | \"audioRemoved\"\r\n    | \"videoAdded\"\r\n    | \"videoRemoved\";\r\n\r\nexport type CallaMetadataEventType = \"userPosed\"\r\n    | \"userPointer\"\r\n    | \"setAvatarEmoji\"\r\n    | \"setAvatarURL\"\r\n    | \"emote\"\r\n    | \"chat\";\r\n\r\nexport type CallaEventType = CallaTeleconferenceEventType | CallaMetadataEventType;\r\n\r\nexport class CallaEvent<T extends CallaEventType> extends Event {\r\n    constructor(public eventType: T) {\r\n        super(eventType);\r\n    }\r\n}\r\n\r\nexport class CallaTeleconferenceServerConnectedEvent\r\n    extends CallaEvent<\"serverConnected\"> {\r\n    constructor() {\r\n        super(\"serverConnected\");\r\n    }\r\n}\r\n\r\nexport class CallaTeleconferenceServerDisconnectedEvent\r\n    extends CallaEvent<\"serverDisconnected\"> {\r\n    constructor() {\r\n        super(\"serverDisconnected\");\r\n    }\r\n}\r\n\r\nexport class CallaTeleconferenceServerFailedEvent\r\n    extends CallaEvent<\"serverFailed\"> {\r\n    constructor() {\r\n        super(\"serverFailed\");\r\n    }\r\n}\r\n\r\nexport class CallaUserEvent<T extends CallaEventType> extends CallaEvent<T> {\r\n    constructor(type: T, public id: string) {\r\n        super(type);\r\n    }\r\n}\r\n\r\nexport class CallaParticipantEvent<T extends CallaTeleconferenceEventType> extends CallaUserEvent<T> {\r\n    constructor(type: T, id: string, public displayName: string) {\r\n        super(type, id);\r\n    }\r\n}\r\n\r\nexport class CallaUserNameChangedEvent extends CallaUserEvent<\"userNameChanged\"> {\r\n    constructor(id: string, public displayName: string) {\r\n        super(\"userNameChanged\", id);\r\n    }\r\n}\r\n\r\nexport class CallaConferenceJoinedEvent extends CallaUserEvent<\"conferenceJoined\"> {\r\n    constructor(id: string, public pose: InterpolatedPose) {\r\n        super(\"conferenceJoined\", id);\r\n    }\r\n}\r\n\r\nexport class CallaConferenceLeftEvent extends CallaUserEvent<\"conferenceLeft\"> {\r\n    constructor(id: string) {\r\n        super(\"conferenceLeft\", id);\r\n    }\r\n}\r\n\r\nexport class CallaConferenceConnectedEvent extends CallaEvent<\"conferenceConnected\"> {\r\n    constructor() {\r\n        super(\"conferenceConnected\");\r\n    }\r\n}\r\n\r\nexport class CallaConferenceFailedEvent extends CallaEvent<\"conferenceFailed\">{\r\n    constructor() {\r\n        super(\"conferenceFailed\");\r\n    }\r\n}\r\n\r\nexport class CallaConferenceRestoredEvent extends CallaEvent<\"conferenceRestored\">{\r\n    constructor() {\r\n        super(\"conferenceRestored\");\r\n    }\r\n}\r\n\r\nexport class CallaParticipantJoinedEvent extends CallaParticipantEvent<\"participantJoined\"> {\r\n    constructor(id: string, displayName: string, public source: AudioStreamSource) {\r\n        super(\"participantJoined\", id, displayName);\r\n    }\r\n}\r\n\r\nexport class CallaParticipantLeftEvent extends CallaUserEvent<\"participantLeft\"> {\r\n    constructor(id: string) {\r\n        super(\"participantLeft\", id);\r\n    }\r\n}\r\n\r\nexport class CallaParticipantNameChangeEvent extends CallaParticipantEvent<\"userNameChanged\"> {\r\n    constructor(id: string, displayName: string) {\r\n        super(\"userNameChanged\", id, displayName);\r\n    }\r\n}\r\n\r\nexport class CallaUserMutedEvent<T extends CallaTeleconferenceEventType> extends CallaUserEvent<T> {\r\n    constructor(type: T, id: string, public muted: boolean) {\r\n        super(type, id);\r\n    }\r\n}\r\n\r\nexport class CallaUserAudioMutedEvent extends CallaUserMutedEvent<\"audioMuteStatusChanged\"> {\r\n    constructor(id: string, muted: boolean) {\r\n        super(\"audioMuteStatusChanged\", id, muted);\r\n    }\r\n}\r\n\r\nexport class CallaUserVideoMutedEvent extends CallaUserMutedEvent<\"videoMuteStatusChanged\"> {\r\n    constructor(id: string, muted: boolean) {\r\n        super(\"videoMuteStatusChanged\", id, muted);\r\n    }\r\n}\r\n\r\nexport enum StreamType {\r\n    Audio = \"audio\",\r\n    Video = \"video\"\r\n}\r\n\r\nexport enum StreamOpType {\r\n    Added = \"added\",\r\n    Removed = \"removed\",\r\n    Changed = \"changed\"\r\n}\r\n\r\nexport class CallaStreamEvent<T extends CallaTeleconferenceEventType> extends CallaUserEvent<T> {\r\n    constructor(type: T, public kind: StreamType, public op: StreamOpType, id: string, public stream: MediaStream) {\r\n        super(type, id);\r\n    }\r\n}\r\n\r\nexport class CallaStreamAddedEvent<T extends CallaTeleconferenceEventType> extends CallaStreamEvent<T> {\r\n    constructor(type: T, kind: StreamType, id: string, stream: MediaStream) {\r\n        super(type, kind, StreamOpType.Added, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaStreamRemovedEvent<T extends CallaTeleconferenceEventType> extends CallaStreamEvent<T> {\r\n    constructor(type: T, kind: StreamType, id: string, stream: MediaStream) {\r\n        super(type, kind, StreamOpType.Removed, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaStreamChangedEvent<T extends CallaTeleconferenceEventType> extends CallaStreamEvent<T> {\r\n    constructor(type: T, kind: StreamType, id: string, stream: MediaStream) {\r\n        super(type, kind, StreamOpType.Changed, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaAudioStreamAddedEvent extends CallaStreamAddedEvent<\"audioAdded\"> {\r\n    constructor(id: string, stream: MediaStream) {\r\n        super(\"audioAdded\", StreamType.Audio, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaAudioStreamRemovedEvent extends CallaStreamRemovedEvent<\"audioRemoved\"> {\r\n    constructor(id: string, stream: MediaStream) {\r\n        super(\"audioRemoved\", StreamType.Audio, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaVideoStreamAddedEvent extends CallaStreamAddedEvent<\"videoAdded\"> {\r\n    constructor(id: string, stream: MediaStream) {\r\n        super(\"videoAdded\", StreamType.Video, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaVideoStreamRemovedEvent extends CallaStreamRemovedEvent<\"videoRemoved\"> {\r\n    constructor(id: string, stream: MediaStream) {\r\n        super(\"videoRemoved\", StreamType.Video, id, stream);\r\n    }\r\n}\r\n\r\nexport class CallaPoseEvent<T extends CallaMetadataEventType> extends CallaUserEvent<T> {\r\n    constructor(type: T, id: string, public px: number, public py: number, public pz: number, public fx: number, public fy: number, public fz: number, public ux: number, public uy: number, public uz: number) {\r\n        super(type, id);\r\n    }\r\n\r\n    set(px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number) {\r\n        this.px = px;\r\n        this.py = py;\r\n        this.pz = pz;\r\n        this.fx = fx;\r\n        this.fy = fy;\r\n        this.fz = fz;\r\n        this.ux = ux;\r\n        this.uy = uy;\r\n        this.uz = uz;\r\n    }\r\n}\r\n\r\nexport class CallaUserPosedEvent extends CallaPoseEvent<\"userPosed\"> {\r\n    constructor(id: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number) {\r\n        super(\"userPosed\", id, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n}\r\n\r\nexport class CallaUserPointerEvent extends CallaPoseEvent<\"userPointer\"> {\r\n    constructor(id: string, public name: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number) {\r\n        super(\"userPointer\", id, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n}\r\n\r\nexport class CallaEmojiEvent<T extends CallaMetadataEventType> extends CallaUserEvent<T> {\r\n    constructor(type: T, id: string, public readonly emoji: string) {\r\n        super(type, id);\r\n    }\r\n}\r\n\r\nexport class CallaEmoteEvent extends CallaEmojiEvent<\"emote\"> {\r\n    constructor(id: string, emoji: string) {\r\n        super(\"emote\", id, emoji);\r\n    }\r\n}\r\n\r\nexport class CallaEmojiAvatarEvent extends CallaEmojiEvent<\"setAvatarEmoji\"> {\r\n    constructor(id: string, emoji: string) {\r\n        super(\"setAvatarEmoji\", id, emoji);\r\n    }\r\n}\r\n\r\nexport class CallaPhotoAvatarEvent extends CallaUserEvent<\"setAvatarURL\"> {\r\n    constructor(id: string, public readonly url: string) {\r\n        super(\"setAvatarURL\", id);\r\n    }\r\n}\r\n\r\nexport class CallaChatEvent extends CallaUserEvent<\"chat\"> {\r\n    constructor(id: string, public text: string) {\r\n        super(\"chat\", id);\r\n    }\r\n}\r\n\r\nexport interface CallaTeleconferenceEvents {\r\n    serverConnected: CallaTeleconferenceServerConnectedEvent;\r\n    serverDisconnected: CallaTeleconferenceServerDisconnectedEvent;\r\n    serverFailed: CallaTeleconferenceServerFailedEvent;\r\n    audioMuteStatusChanged: CallaUserAudioMutedEvent;\r\n    videoMuteStatusChanged: CallaUserVideoMutedEvent;\r\n    conferenceConnected: CallaConferenceConnectedEvent;\r\n    conferenceJoined: CallaConferenceJoinedEvent;\r\n    conferenceLeft: CallaConferenceLeftEvent;\r\n    conferenceFailed: CallaConferenceFailedEvent;\r\n    conferenceRestored: CallaConferenceRestoredEvent;\r\n    participantJoined: CallaParticipantJoinedEvent;\r\n    participantLeft: CallaParticipantLeftEvent;\r\n    userNameChanged: CallaUserNameChangedEvent;\r\n    audioActivity: AudioActivityEvent;\r\n    audioAdded: CallaAudioStreamAddedEvent;\r\n    videoAdded: CallaVideoStreamAddedEvent;\r\n    audioRemoved: CallaAudioStreamRemovedEvent;\r\n    videoRemoved: CallaVideoStreamRemovedEvent;\r\n}\r\n\r\nexport interface CallaMetadataEvents {\r\n    userPosed: CallaUserPosedEvent;\r\n    userPointer: CallaUserPointerEvent;\r\n    emote: CallaEmoteEvent;\r\n    setAvatarEmoji: CallaEmojiAvatarEvent;\r\n    setAvatarURL: CallaPhotoAvatarEvent;\r\n    chat: CallaChatEvent;\r\n}\r\n\r\nexport interface CallaClientEvents extends CallaTeleconferenceEvents, CallaMetadataEvents { }","export enum ConnectionState {\r\n    Disconnected = \"Disconnected\",\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnecting = \"Disconnecting\"\r\n}","import { TypedEventBase } from \"kudzu/events/EventBase\";\r\nimport type { CallaEventType, CallaMetadataEvents } from \"../CallaEvents\";\r\nimport { CallaUserEvent } from \"../CallaEvents\";\r\nimport { ConnectionState } from \"../ConnectionState\";\r\nimport type { IMetadataClientExt } from \"./IMetadataClient\";\r\n\r\n\r\nexport abstract class BaseMetadataClient\r\n    extends TypedEventBase<CallaMetadataEvents>\r\n    implements IMetadataClientExt {\r\n\r\n    async getNext<T extends keyof CallaMetadataEvents>(evtName: T, userID: string): Promise<CallaMetadataEvents[T]> {\r\n        return new Promise((resolve) => {\r\n            const getter = (evt: CallaMetadataEvents[T]) => {\r\n                if (evt instanceof CallaUserEvent\r\n                    && evt.id === userID) {\r\n                    this.removeEventListener(evtName, getter);\r\n                    resolve(evt);\r\n                }\r\n            };\r\n\r\n            this.addEventListener(evtName, getter);\r\n        });\r\n    }\r\n\r\n    abstract get metadataState(): ConnectionState;\r\n\r\n    get isConnected(): boolean {\r\n        return this.metadataState === ConnectionState.Connected;\r\n    }\r\n\r\n    protected abstract callInternal(command: CallaEventType, ...args: any[]): Promise<void>;\r\n\r\n    protected abstract callInternalSingle(userid: string, command: CallaEventType, ...args: any[]): Promise<void>;\r\n\r\n    setLocalPose(px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this.callInternal(\"userPosed\", px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    tellLocalPose(userid: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this.callInternalSingle(userid, \"userPosed\", px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    setLocalPointer(name: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this.callInternal(\"userPointer\", name, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    setAvatarEmoji(emoji: string): void {\r\n        this.callInternal(\"setAvatarEmoji\", emoji);\r\n    }\r\n\r\n    tellAvatarEmoji(userid: string, emoji: string): void {\r\n        this.callInternalSingle(userid, \"setAvatarEmoji\", emoji);\r\n    }\r\n\r\n    setAvatarURL(url: string): void {\r\n        this.callInternal(\"setAvatarURL\", url);\r\n    }\r\n\r\n    tellAvatarURL(userid: string, url: string): void {\r\n        this.callInternalSingle(userid, \"setAvatarURL\", url);\r\n    }\r\n\r\n    emote(emoji: string): void {\r\n        this.callInternal(\"emote\", emoji);\r\n    }\r\n\r\n    chat(text: string): void {\r\n        this.callInternal(\"chat\", text);\r\n    }\r\n\r\n    abstract connect(): Promise<void>;\r\n    abstract join(roomName: string): Promise<void>;\r\n    abstract identify(userNameOrID: string): Promise<void>;\r\n    abstract leave(): Promise<void>;\r\n    abstract disconnect(): Promise<void>;\r\n}\r\n","import type { ErsatzEventTarget } from \"kudzu/events/ErsatzEventTarget\";\r\nimport { TypedEventBase } from \"kudzu/events/EventBase\";\r\nimport type { IFetcher } from \"kudzu/io/IFetcher\";\r\nimport { AudioManager } from \"../audio/AudioManager\";\r\nimport type { CallaTeleconferenceEvents } from \"../CallaEvents\";\r\nimport { CallaUserEvent } from \"../CallaEvents\";\r\nimport { ConnectionState } from \"../ConnectionState\";\r\nimport type { DeviceManagerInputsChangedEvent } from \"../devices/DeviceManager\";\r\nimport { DeviceManager } from \"../devices/DeviceManager\";\r\nimport type { ITeleconferenceClientExt } from \"./ITeleconferenceClient\";\r\n\r\nexport function addLogger(obj: ErsatzEventTarget, evtName: string): void {\r\n    obj.addEventListener(evtName, (...rest: any[]) => {\r\n        if (loggingEnabled) {\r\n            console.log(\">== CALLA ==<\", evtName, ...rest);\r\n        }\r\n    });\r\n}\r\n\r\nexport const DEFAULT_LOCAL_USER_ID = \"local-user\";\r\n\r\nlet loggingEnabled = window.location.hostname === \"localhost\"\r\n    || /\\bdebug\\b/.test(window.location.search);\r\n\r\nexport abstract class BaseTeleconferenceClient\r\n    extends TypedEventBase<CallaTeleconferenceEvents>\r\n    implements ITeleconferenceClientExt {\r\n\r\n    toggleLogging() {\r\n        loggingEnabled = !loggingEnabled;\r\n    }\r\n\r\n    localUserID: string = null;\r\n    localUserName: string = null;\r\n    roomName: string = null;\r\n\r\n    protected fetcher: IFetcher;\r\n\r\n    private _connectionState = ConnectionState.Disconnected;\r\n    private _conferenceState = ConnectionState.Disconnected;\r\n\r\n    hasAudioPermission = false;\r\n    hasVideoPermission = false;\r\n\r\n    get connectionState(): ConnectionState {\r\n        return this._connectionState;\r\n    }\r\n\r\n    private setConnectionState(state: ConnectionState): void {\r\n        this._connectionState = state;\r\n    }\r\n\r\n    get conferenceState(): ConnectionState {\r\n        return this._conferenceState;\r\n    }\r\n\r\n    private setConferenceState(state: ConnectionState): void {\r\n        this._conferenceState = state;\r\n    }\r\n\r\n    constructor(fetcher: IFetcher, private _audio: AudioManager, public needsVideoDevice = false) {\r\n        super();\r\n\r\n        this.fetcher = fetcher;\r\n\r\n        this.devices.addEventListener(\"inputschanged\", this.onInputsChanged.bind(this));\r\n\r\n        this.addEventListener(\"serverConnected\", this.setConnectionState.bind(this, ConnectionState.Connected));\r\n        this.addEventListener(\"serverFailed\", this.setConnectionState.bind(this, ConnectionState.Disconnected));\r\n        this.addEventListener(\"serverDisconnected\", this.setConnectionState.bind(this, ConnectionState.Disconnected));\r\n\r\n        this.addEventListener(\"conferenceJoined\", this.setConferenceState.bind(this, ConnectionState.Connected));\r\n        this.addEventListener(\"conferenceFailed\", this.setConferenceState.bind(this, ConnectionState.Disconnected));\r\n        this.addEventListener(\"conferenceRestored\", this.setConferenceState.bind(this, ConnectionState.Connected));\r\n        this.addEventListener(\"conferenceLeft\", this.setConferenceState.bind(this, ConnectionState.Disconnected));\r\n    }\r\n\r\n    get audio(): AudioManager {\r\n        return this._audio;\r\n    }\r\n\r\n    get devices(): DeviceManager {\r\n        return this._audio.devices;\r\n    }\r\n\r\n    protected onDispatching<T extends Event>(evt: T) {\r\n        if (evt instanceof CallaUserEvent\r\n            && (evt.id == null\r\n                || evt.id === \"local\")) {\r\n            if (this.localUserID === DEFAULT_LOCAL_USER_ID) {\r\n                evt.id = null;\r\n            }\r\n            else {\r\n                evt.id = this.localUserID;\r\n            }\r\n        }\r\n    }\r\n\r\n    async getNext<T extends keyof CallaTeleconferenceEvents>(evtName: T, userID: string): Promise<CallaTeleconferenceEvents[T]> {\r\n        return new Promise((resolve) => {\r\n            const getter = (evt: CallaTeleconferenceEvents[T]) => {\r\n                if (evt instanceof CallaUserEvent\r\n                    && evt.id === userID) {\r\n                    this.removeEventListener(evtName, getter);\r\n                    resolve(evt);\r\n                }\r\n            };\r\n\r\n            this.addEventListener(evtName, getter);\r\n        });\r\n    }\r\n\r\n    async connect(): Promise<void> {\r\n        this.setConnectionState(ConnectionState.Connecting);\r\n    }\r\n\r\n    async join(_roomName: string, _password?: string): Promise<void> {\r\n        this.setConferenceState(ConnectionState.Connecting);\r\n    }\r\n\r\n    async leave(): Promise<void> {\r\n        this.setConferenceState(ConnectionState.Disconnecting);\r\n    }\r\n\r\n    async disconnect(): Promise<void> {\r\n        this.setConnectionState(ConnectionState.Disconnecting);\r\n    }\r\n\r\n    abstract userExists(id: string): boolean;\r\n    abstract getUserNames(): string[][];\r\n    abstract identify(userNameOrID: string): Promise<void>;\r\n    protected abstract onInputsChanged(evt: DeviceManagerInputsChangedEvent): Promise<void>;\r\n    abstract toggleAudioMuted(): Promise<boolean>;\r\n    abstract toggleVideoMuted(): Promise<boolean>;\r\n    abstract getAudioMuted(): Promise<boolean>;\r\n    abstract getVideoMuted(): Promise<boolean>;\r\n}\r\n","// NOTE: This field gets overwritten in a build process.\r\n//\r\n// see: MyRollup/index.js, function makeBundle(), with the configuration for\r\n//  the replace plugin (replaceOpts object).\r\n//\r\n// Doing it this way ensures that Rollup will trim dead-code due to lazy\r\n// logic evaluation.\r\nexport const isWorker = false;\r\n\r\nexport const isChrome = \"chrome\" in globalThis && !navigator.userAgent.match(\"CriOS\");\r\nexport const isFirefox = \"InstallTrigger\" in globalThis;\r\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nexport const isOpera = /Opera/.test(navigator.userAgent);\r\nexport const isIE = /*@cc_on!@*/ false || \"documentMode\" in document;\r\n\r\nexport const isAndroid = /Android/.test(navigator.userAgent);\r\nexport const isIOS = /iPad|iPhone|iPod/.test(navigator.platform)\r\n    || /Macintosh(.*?) FxiOS(.*?)\\//.test(navigator.platform)\r\n    || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 2;\r\nexport const isMacOS = /Macintosh/.test(navigator.userAgent || \"\");\r\nexport const isApple = isIOS || isMacOS;\r\nexport const isBlackberry = /BlackBerry/.test(navigator.userAgent);\r\nexport const isUCBrowser = /(UC Browser |UCWEB)/.test(navigator.userAgent);\r\n\r\nexport const isMobile = isAndroid\r\n    || isIOS\r\n    || isBlackberry\r\n    || isUCBrowser;\r\nexport const isDesktop = !isMobile;\r\n\r\nexport const isOculus = /oculus/i.test(navigator.userAgent);\r\nexport const isOculusGo = isOculus && /pacific/i.test(navigator.userAgent);\r\nexport const isOculusQuest = isOculus && /quest/i.test(navigator.userAgent);\r\nexport const isOculusQuest2 = isOculus && /quest 2/i.test(navigator.userAgent);\r\nexport const isMobileVR = /Mobile VR/.test(navigator.userAgent)\r\n    || isOculus;\r\nexport const hasWebXR = \"xr\" in navigator\r\n    && \"isSessionSupported\" in (navigator as any).xr;\r\nexport const hasWebVR = \"getVRDisplays\" in navigator;\r\n\r\nexport const hasBatteryAPI = \"getBattery\" in navigator;\r\n\r\nexport const browserName = isChrome\r\n    ? \"CHROMIUM\"\r\n    : (isFirefox\r\n        ? \"FIREFOX\"\r\n        : (isIE\r\n            ? \"IE\"\r\n            : (isOpera\r\n                ? \"OPERA\"\r\n                : (isSafari\r\n                    ? \"SAFARI\"\r\n                    : \"UNKNOWN\"))));","export function isModifierless(evt: KeyboardEvent) {\r\n    return !(evt.shiftKey || evt.altKey || evt.ctrlKey || evt.metaKey);\r\n}\r\n","import { isDefined } from \"../typeChecks\";\r\n\r\nexport interface ILogger {\r\n    log(id: string, ...values: any[]): void;\r\n    delete(id: string): void;\r\n    clear(): void;\r\n    addWorker(name: string, worker: Worker): void;\r\n}\r\n\r\nexport enum MessageType {\r\n    Log = \"log\",\r\n    Delete = \"delete\",\r\n    Clear = \"clear\"\r\n}\r\n\r\nexport const KEY = \"XXX_QUAKE_LOGGER_XXX\";\r\n\r\nexport interface IWorkerLoggerMessageData {\r\n    key: string;\r\n    method: MessageType;\r\n    id: string;\r\n    values: any[];\r\n}\r\n\r\nexport function isWorkerLoggerMessageData(data: any): data is IWorkerLoggerMessageData {\r\n    return isDefined(data)\r\n        && \"key\" in data\r\n        && data.key === KEY;\r\n}","import { isModifierless } from \"../events/isModifierless\";\r\nimport { backgroundColor, color, columnGap, display, getMonospaceFamily, gridAutoFlow, gridColumn, height, left, opacity, overflow, overflowY, padding, pointerEvents, position, styles, top, width, zIndex } from \"../html/css\";\r\nimport { Div, elementClearChildren, elementSetDisplay, TextNode } from \"../html/tags\";\r\nimport { assertNever } from \"../typeChecks\";\r\nimport { ILogger, isWorkerLoggerMessageData, MessageType } from \"./models\";\r\n\r\nfunction track(a: number, b: number) {\r\n    return styles(\r\n        gridColumn(`${a}/${b}`),\r\n        getMonospaceFamily());\r\n}\r\n\r\nexport class WindowLogger implements ILogger {\r\n    private logs = new Map<string, Array<any>>();\r\n    private rows = new Map<string, HTMLElement[]>();\r\n    private container: HTMLElement;\r\n    private grid: HTMLElement;\r\n    private workerCount = 0;\r\n\r\n    constructor() {\r\n        this.container = Div(\r\n            styles(\r\n                position(\"fixed\"),\r\n                display(\"none\"),\r\n                top(\"0\"),\r\n                left(\"0\"),\r\n                width(\"100%\"),\r\n                height(\"100%\"),\r\n                zIndex(9001),\r\n                padding(\"1em\"),\r\n                opacity(\"0.5\"),\r\n                backgroundColor(\"black\"),\r\n                color(\"white\"),\r\n                overflow(\"hidden\"),\r\n                pointerEvents(\"none\")),\r\n            this.grid = Div(\r\n                styles(\r\n                    display(\"grid\"),\r\n                    overflowY(\"auto\"),\r\n                    columnGap(\"0.5em\"),\r\n                    gridAutoFlow(\"row\"))));\r\n\r\n        document.body.appendChild(this.container);\r\n\r\n        window.addEventListener(\"keypress\", (evt) => {\r\n            if (isModifierless(evt) && evt.key === '`') {\r\n                elementSetDisplay(\r\n                    this.container,\r\n                    this.container.style.display === \"none\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private render(): void {\r\n        const toRemove = new Array<string>();\r\n        for (const [id, row] of this.rows) {\r\n            if (!this.logs.has(id)) {\r\n                for (const cell of row) {\r\n                    this.grid.removeChild(cell);\r\n                }\r\n                toRemove.push(id);\r\n            }\r\n        }\r\n\r\n        for (const id of toRemove) {\r\n            this.rows.delete(id);\r\n        }\r\n\r\n        let maxWidth = 0;\r\n        for (const values of this.logs.values()) {\r\n            maxWidth = Math.max(maxWidth, values.length);\r\n        }\r\n\r\n        this.grid.style.gridTemplateColumns = `auto repeat(${maxWidth}, 1fr)`;\r\n\r\n        for (const [id, values] of this.logs) {\r\n            let row = this.rows.get(id);\r\n            if (!row) {\r\n                row = [\r\n                    Div(id, track(1, 2)),\r\n                    ...values.map((_, i) => {\r\n                        const isLast = i === values.length - 1;\r\n                        const endTrack = isLast ? -1 : i + 3;\r\n                        const cell = Div(track(i + 2, endTrack));\r\n                        return cell;\r\n                    })\r\n                ];\r\n                this.rows.set(id, row);\r\n                this.grid.append(...row);\r\n            }\r\n\r\n            for (let i = 0; i < values.length; ++i) {\r\n                const value = values[i];\r\n                const cell = row[i + 1] as HTMLElement;\r\n                elementClearChildren(cell);\r\n                cell.appendChild(TextNode(JSON.stringify(value)));\r\n            }\r\n        }\r\n    }\r\n\r\n    log(id: string, ...values: any[]): void {\r\n        this.logs.set(id, values);\r\n        this.render();\r\n    }\r\n\r\n    delete(id: string): void {\r\n        this.logs.delete(id);\r\n        this.render();\r\n    }\r\n\r\n    clear(): void {\r\n        this.logs.clear();\r\n        this.render();\r\n    }\r\n\r\n    addWorker(name: string, worker: Worker) {\r\n        worker.addEventListener(\"message\", (evt): void => {\r\n            const slug = `worker:${name || this.workerCount.toFixed(0)}:`;\r\n            if (isWorkerLoggerMessageData(evt.data)) {\r\n                switch (evt.data.method) {\r\n                    case MessageType.Log:\r\n                        this.log(slug + evt.data.id, ...evt.data.values);\r\n                        break;\r\n                    case MessageType.Delete:\r\n                        this.delete(slug + evt.data.id);\r\n                        break;\r\n                    case MessageType.Clear:\r\n                        for (const key of this.logs.keys()) {\r\n                            if (key.startsWith(slug)) {\r\n                                this.delete(key);\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        assertNever(evt.data.method);\r\n                }\r\n            }\r\n        });\r\n\r\n        ++this.workerCount;\r\n    }\r\n}\r\n","import { isWorker } from \"../html/flags\";\r\nimport { ILogger } from \"./models\";\r\nimport { WindowLogger } from \"./WindowLogger\";\r\nimport { WorkerLogger } from \"./WorkerLogger\";\r\n\r\nconst logger: ILogger = isWorker\r\n    ? new WorkerLogger()\r\n    : new WindowLogger();\r\n\r\nexport class Logger implements ILogger {\r\n\r\n    log(id: string, ...values: any[]): void {\r\n        logger.log(id, ...values);\r\n    }\r\n\r\n    delete(id: string): void {\r\n        logger.delete(id);\r\n    }\r\n\r\n    clear(): void {\r\n        logger.clear();\r\n    }\r\n\r\n    addWorker(name: string, worker: Worker): void {\r\n        logger.addWorker(name, worker);\r\n    }\r\n}\r\n\r\n","/**\r\n * An Event class for tracking changes to audio activity.\r\n **/\r\nexport class AudioActivityEvent extends Event {\r\n    id: string = null;\r\n    isActive: boolean = false;\r\n\r\n    /** Creates a new \"audioActivity\" event */\r\n    constructor() {\r\n        super(\"audioActivity\");\r\n        Object.seal(this);\r\n    }\r\n\r\n    /**\r\n     * Sets the current state of the event\r\n     * @param id - the user for which the activity changed\r\n     * @param isActive - the new state of the activity\r\n     */\r\n    set(id: string, isActive: boolean): void {\r\n        this.id = id;\r\n        this.isActive = isActive;\r\n    }\r\n}\r\n","import { Logger } from \"kudzu/debugging/Logger\";\r\nimport { TypedEventBase } from \"kudzu/events/EventBase\";\r\nimport type { IFetcher } from \"kudzu/io/IFetcher\";\r\nimport type { IDisposable } from \"kudzu/using\";\r\nimport { AudioActivityEvent } from \"./audio/AudioActivityEvent\";\r\nimport type { AudioManager } from \"./audio/AudioManager\";\r\nimport type {\r\n    CallaAudioStreamAddedEvent,\r\n    CallaAudioStreamRemovedEvent,\r\n    CallaClientEvents,\r\n    CallaConferenceJoinedEvent,\r\n    CallaConferenceLeftEvent,\r\n    CallaParticipantJoinedEvent,\r\n    CallaParticipantLeftEvent,\r\n    CallaUserPointerEvent,\r\n    CallaUserPosedEvent\r\n} from \"./CallaEvents\";\r\nimport { ConnectionState } from \"./ConnectionState\";\r\nimport type { DeviceManager } from \"./devices/DeviceManager\";\r\nimport type { ICombinedClient } from \"./ICombinedClient\";\r\nimport type { IMetadataClient, IMetadataClientExt } from \"./meta/IMetadataClient\";\r\nimport type { ITeleconferenceClient, ITeleconferenceClientExt } from \"./tele/ITeleconferenceClient\";\r\n\r\nexport enum ClientState {\r\n    InConference = \"in-conference\",\r\n    JoiningConference = \"joining-conference\",\r\n    Connected = \"connected\",\r\n    Connecting = \"connecting\",\r\n    Prepaired = \"prepaired\",\r\n    Prepairing = \"prepairing\",\r\n    Unprepared = \"unprepaired\"\r\n}\r\n\r\nconst audioActivityEvt = new AudioActivityEvent();\r\n\r\nexport class Calla\r\n    extends TypedEventBase<CallaClientEvents>\r\n    implements ICombinedClient, IDisposable {\r\n\r\n    isAudioMuted: boolean = null;\r\n    isVideoMuted: boolean = null;\r\n\r\n    constructor(\r\n        private _fetcher: IFetcher,\r\n        private _tele: ITeleconferenceClientExt,\r\n        private _meta: IMetadataClientExt) {\r\n        super();\r\n\r\n        const fwd = this.dispatchEvent.bind(this);\r\n\r\n        this._tele.addEventListener(\"serverConnected\", fwd);\r\n        this._tele.addEventListener(\"serverDisconnected\", fwd);\r\n        this._tele.addEventListener(\"serverFailed\", fwd);\r\n        this._tele.addEventListener(\"conferenceFailed\", fwd);\r\n        this._tele.addEventListener(\"conferenceRestored\", fwd);\r\n\r\n        this._tele.addEventListener(\"audioMuteStatusChanged\", fwd);\r\n        this._tele.addEventListener(\"videoMuteStatusChanged\", fwd);\r\n\r\n        this._tele.addEventListener(\"conferenceJoined\", async (evt: CallaConferenceJoinedEvent) => {\r\n            const user = this.audio.setLocalUserID(evt.id);\r\n            evt.pose = user.pose;\r\n            this.dispatchEvent(evt);\r\n            await this.devices.start();\r\n        });\r\n\r\n        this._tele.addEventListener(\"conferenceLeft\", (evt: CallaConferenceLeftEvent) => {\r\n            this.audio.setLocalUserID(evt.id);\r\n            this.dispatchEvent(evt);\r\n        });\r\n\r\n        this._tele.addEventListener(\"participantJoined\", async (joinEvt: CallaParticipantJoinedEvent) => {\r\n            joinEvt.source = this.audio.createUser(joinEvt.id);\r\n            this.dispatchEvent(joinEvt);\r\n        });\r\n\r\n        this._tele.addEventListener(\"participantLeft\", (evt: CallaParticipantLeftEvent) => {\r\n            this.dispatchEvent(evt);\r\n            this.audio.removeUser(evt.id);\r\n        });\r\n\r\n        this._tele.addEventListener(\"userNameChanged\", fwd);\r\n        this._tele.addEventListener(\"videoAdded\", fwd);\r\n        this._tele.addEventListener(\"videoRemoved\", fwd);\r\n\r\n        this._tele.addEventListener(\"audioAdded\", (evt: CallaAudioStreamAddedEvent) => {\r\n            const user = this.audio.getUser(evt.id);\r\n            if (user) {\r\n                let stream = user.streams.get(evt.kind);\r\n                if (stream) {\r\n                    user.streams.delete(evt.kind);\r\n                }\r\n\r\n                stream = evt.stream;\r\n                user.streams.set(evt.kind, stream);\r\n\r\n                if (evt.id !== this._tele.localUserID) {\r\n                    this.audio.setUserStream(evt.id, stream);\r\n                }\r\n\r\n                this.dispatchEvent(evt);\r\n            }\r\n        });\r\n\r\n        this._tele.addEventListener(\"audioRemoved\", (evt: CallaAudioStreamRemovedEvent) => {\r\n            const user = this.audio.getUser(evt.id);\r\n            if (user && user.streams.has(evt.kind)) {\r\n                user.streams.delete(evt.kind);\r\n            }\r\n\r\n            if (evt.id !== this._tele.localUserID) {\r\n                this.audio.setUserStream(evt.id, null);\r\n            }\r\n\r\n            this.dispatchEvent(evt);\r\n        });\r\n\r\n        this._meta.addEventListener(\"chat\", fwd);\r\n        this._meta.addEventListener(\"emote\", fwd);\r\n        this._meta.addEventListener(\"setAvatarEmoji\", fwd);\r\n        this._meta.addEventListener(\"setAvatarURL\", fwd);\r\n\r\n        const offsetEvt = (poseEvt: CallaUserPointerEvent | CallaUserPosedEvent): void => {\r\n            const O = this.audio.getUserOffset(poseEvt.id);\r\n            if (O) {\r\n                poseEvt.px += O[0];\r\n                poseEvt.py += O[1];\r\n                poseEvt.pz += O[2];\r\n            }\r\n            this.dispatchEvent(poseEvt);\r\n        };\r\n\r\n        this._meta.addEventListener(\"userPointer\", offsetEvt);\r\n\r\n        this._meta.addEventListener(\"userPosed\", (evt: CallaUserPosedEvent) => {\r\n            this.audio.setUserPose(\r\n                evt.id,\r\n                evt.px, evt.py, evt.pz,\r\n                evt.fx, evt.fy, evt.fz,\r\n                evt.ux, evt.uy, evt.uz);\r\n            offsetEvt(evt);\r\n        });\r\n\r\n        this.audio.addEventListener(\"audioActivity\", (evt: AudioActivityEvent) => {\r\n            audioActivityEvt.id = evt.id;\r\n            audioActivityEvt.isActive = evt.isActive;\r\n            this.dispatchEvent(audioActivityEvt);\r\n        });\r\n\r\n        const dispose = this.dispose.bind(this);\r\n        window.addEventListener(\"beforeunload\", dispose);\r\n        window.addEventListener(\"unload\", dispose);\r\n        window.addEventListener(\"pagehide\", dispose);\r\n\r\n        Object.seal(this);\r\n    }\r\n\r\n    get connectionState(): ConnectionState {\r\n        return this._tele.connectionState;\r\n    }\r\n\r\n    get conferenceState(): ConnectionState {\r\n        return this._tele.conferenceState;\r\n    }\r\n\r\n    get fetcher(): IFetcher {\r\n        return this._fetcher;\r\n    }\r\n\r\n    get tele(): ITeleconferenceClient {\r\n        return this._tele;\r\n    }\r\n\r\n    get meta(): IMetadataClient {\r\n        return this._meta;\r\n    }\r\n\r\n    get audio(): AudioManager {\r\n        return this._tele.audio;\r\n    }\r\n\r\n    get devices(): DeviceManager {\r\n        return this._tele.audio.devices;\r\n    }\r\n\r\n    private disposed = false;\r\n    dispose(): void {\r\n        if (!this.disposed) {\r\n            this.leave();\r\n            this.disconnect();\r\n            this.disposed = true;\r\n        }\r\n    }\r\n\r\n    get offsetRadius(): number {\r\n        return this.audio.offsetRadius;\r\n    }\r\n\r\n    set offsetRadius(v: number) {\r\n        this.audio.offsetRadius = v;\r\n    }\r\n\r\n    setLocalPose(px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this.audio.setUserPose(this.localUserID, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n        this._meta.setLocalPose(px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    tellLocalPose(userid: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this._meta.tellLocalPose(userid, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    setLocalPointer(name: string, px: number, py: number, pz: number, fx: number, fy: number, fz: number, ux: number, uy: number, uz: number): void {\r\n        this._meta.setLocalPointer(name, px, py, pz, fx, fy, fz, ux, uy, uz);\r\n    }\r\n\r\n    setAvatarEmoji(emoji: string): void {\r\n        this._meta.setAvatarEmoji(emoji);\r\n    }\r\n\r\n    tellAvatarEmoji(userid: string, emoji: string): void {\r\n        this._meta.tellAvatarEmoji(userid, emoji);\r\n    }\r\n\r\n    setAvatarURL(url: string): void {\r\n        this._meta.setAvatarURL(url);\r\n    }\r\n\r\n    tellAvatarURL(userid: string, url: string): void {\r\n        this._meta.tellAvatarURL(userid, url);\r\n    }\r\n\r\n    emote(emoji: string): void {\r\n        this._meta.emote(emoji);\r\n    }\r\n\r\n    chat(text: string): void {\r\n        this._meta.chat(text);\r\n    }\r\n\r\n    async toggleAudioMuted(): Promise<boolean> {\r\n        return await this._tele.toggleAudioMuted();\r\n    }\r\n\r\n    async toggleVideoMuted(): Promise<boolean> {\r\n        return await this._tele.toggleVideoMuted();\r\n    }\r\n\r\n    async getAudioMuted(): Promise<boolean> {\r\n        return await this._tele.getAudioMuted();\r\n    }\r\n\r\n    async getVideoMuted(): Promise<boolean> {\r\n        return await this._tele.getVideoMuted();\r\n    }\r\n\r\n    get metadataState(): ConnectionState {\r\n        return this._meta.metadataState;\r\n    }\r\n\r\n    get localUserID() {\r\n        return this._tele.localUserID;\r\n    }\r\n\r\n    get localUserName() {\r\n        return this._tele.localUserName;\r\n    }\r\n\r\n    get roomName() {\r\n        return this._tele.roomName;\r\n    }\r\n\r\n    userExists(id: string): boolean {\r\n        return this._tele.userExists(id);\r\n    }\r\n\r\n    getUserNames(): string[][] {\r\n        return this._tele.getUserNames();\r\n    }\r\n\r\n    async connect(): Promise<void> {\r\n        await this._tele.connect();\r\n        if (this._tele.connectionState === ConnectionState.Connected) {\r\n            await this._meta.connect();\r\n        }\r\n    }\r\n\r\n    async join(roomName: string): Promise<void> {\r\n        const logger = new Logger();\r\n        logger.log(\"Calla.join:tele\", roomName);\r\n        await this._tele.join(roomName);\r\n        if (this._tele.conferenceState === ConnectionState.Connected) {\r\n            logger.log(\"Calla.join:meta\", roomName);\r\n            await this._meta.join(roomName);\r\n        }\r\n        logger.log(\"Calla.joined\");\r\n    }\r\n\r\n    async identify(userName: string): Promise<void> {\r\n        await this._tele.identify(userName);\r\n        await this._meta.identify(this.localUserID);\r\n    }\r\n\r\n    async leave(): Promise<void> {\r\n        await this._meta.leave();\r\n        await this._tele.leave();\r\n    }\r\n\r\n    async disconnect(): Promise<void> {\r\n        await this._meta.disconnect();\r\n        await this._tele.disconnect();\r\n    }\r\n\r\n    async setAudioOutputDevice(device: MediaDeviceInfo) {\r\n        this.audio.devices.setAudioOutputDevice(device);\r\n    }\r\n\r\n    async setAudioMuted(muted: boolean) {\r\n        let isMuted = this.isAudioMuted;\r\n        if (muted !== isMuted) {\r\n            isMuted = await this.toggleAudioMuted();\r\n        }\r\n        return isMuted;\r\n    }\r\n\r\n    async setVideoMuted(muted: boolean) {\r\n        let isMuted = this.isVideoMuted;\r\n        if (muted !== isMuted) {\r\n            isMuted = await this.toggleVideoMuted();\r\n        }\r\n        return isMuted;\r\n    }\r\n\r\n}","export * from \"./devices/DeviceManager\";\r\nexport * from \"./meta/BaseMetadataClient\";\r\nexport * from \"./tele/BaseTeleconferenceClient\";\r\nexport { Calla as Client } from \"./Calla\";\r\nexport {\r\n    CallaTeleconferenceEventType as TeleconferenceEvents,\r\n    CallaMetadataEventType as MetadataEvents\r\n} from \"./CallaEvents\";\r\n\r\nimport { version } from \"./package.json\";\r\nconsole.info(`Calla v${version}.`);\r\n\r\nexport { version };"],"names":[],"mappings":";;;IAAA;;;;;aAKgB,SAAS,CAAI,GAAQ,EAAE,GAAG,KAA8B;QACpE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;gBACpB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;oBACZ,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;QAED,OAAO,IAAI,CAAC;IAChB;;ICfA,SAAS,CAAC,CAAC,CAAM,EAAE,CAAS,EAAE,CAAW;QACrC,OAAO,OAAO,CAAC,KAAK,CAAC;eACd,CAAC,YAAY,CAAC,CAAC;IAC1B,CAAC;aAEe,UAAU,CAAC,GAAQ;QAC/B,OAAO,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC;aAEe,QAAQ,CAAC,GAAQ;QAC7B,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;aAEe,SAAS,CAAC,GAAQ;QAC9B,OAAO,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;aAEe,QAAQ,CAAC,GAAQ;QAC7B,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;aAWe,QAAQ,CAAC,GAAQ;QAC7B,OAAO,SAAS,CAAC,GAAG,CAAC;eACd,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;aAce,WAAW,CAAC,CAAQ,EAAE,GAAY;QAC9C,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,qBAAqB,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;aAEe,iBAAiB,CAAI,GAAyB;QAC1D,OAAO,GAAG,KAAK,IAAI;eACZ,GAAG,KAAK,SAAS,CAAC;IAC7B,CAAC;aAEe,SAAS,CAAI,GAAyB;QAClD,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IACnC;;ICxDA,SAAS,kBAAkB,CAAI,GAAM;QACjC,OAAO,GAAG,CAAC;IACf,CAAC;IAWD;;;;;;;;aAQgB,sBAAsB,CAAO,GAAQ,EAAE,OAAU,EAAE,WAA0B;QACzF,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,OAAO,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE;YACrC,MAAM,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC3B,MAAM,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC;kBAC3C,IAAI;kBACJ,WAAW,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,SAAS,CAAC,YAAY,CAAC;mBACpB,OAAO,GAAG,YAAY,EAAE;gBAC3B,KAAK,GAAG,GAAG,CAAC;aACf;iBACI;gBACD,IAAI,OAAO,KAAK,YAAY,EAAE;oBAC1B,KAAK,GAAG,IAAI,CAAC;iBAChB;gBACD,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;aAClB;YAED,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,KAAK,EAAE;YACR,GAAG,IAAI,GAAG,CAAC;SACd;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;;;;aAQgB,iBAAiB,CAAO,GAAQ,EAAE,IAAO,EAAE,WAA2B;QAClF,WAAW,GAAG,WAAW,IAAI,kBAAkB,CAAC;QAChD,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,sBAAsB,CAAC,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC7D;;IClEA;;;;;;aAOgB,aAAa,CAAI,GAAQ,EAAE,IAAO,EAAE,GAAW;QAC3D,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7B;;aCIgB,iBAAiB,CAAO,GAAQ,EAAE,IAAO,EAAE,WAAuC,EAAE,eAAyB;QACzH,IAAI,EAA+B,CAAC;QAEpC,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;YACzB,EAAE,GAAG,WAAW,CAAC;SACpB;aACI,IAAI,SAAS,CAAC,WAAW,CAAC,EAAE;YAC7B,eAAe,GAAG,WAAW,CAAC;SACjC;QAED,IAAI,iBAAiB,CAAC,eAAe,CAAC,EAAE;YACpC,eAAe,GAAG,IAAI,CAAC;SAC1B;QAED,IAAI,GAAG,GAAG,iBAAiB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9B,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,IAAI,eAAe,EAAE;YAC3B,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;SACjC;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;;;aAOgB,cAAc,CAAO,GAAqB,EAAE,WAA0B;QAClF,MAAM,MAAM,GAAG,IAAI,KAAK,EAAK,CAAC;QAC9B,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;YACnB,iBAAiB,CAAC,MAAM,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;SAC/C;QAED,OAAO,MAAM,CAAC;IAClB;;ICnDA;;;aAGgB,aAAa,CAAI,GAAQ,EAAE,GAAW;QAClD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC;;UCFa,SAAS;QACV,SAAS,GAAG,IAAI,GAAG,EAAsB,CAAC;QAC1C,eAAe,GAAG,IAAI,GAAG,EAA+C,CAAC;QAEjF,gBAAgB,CAAC,IAAY,EAAE,QAA6B,EAAE,OAA2C;YACrG,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACtB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,EAAE;oBACZ,SAAS,GAAG,IAAI,KAAK,EAAY,CAAC;oBAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBACvC;gBAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,EAAE;oBACtC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAEzB,IAAI,OAAO,EAAE;wBACT,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;qBAC/C;iBACJ;aACJ;SACJ;QAED,mBAAmB,CAAC,IAAY,EAAE,QAA6B;YAC3D,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACtB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,SAAS,EAAE;oBACX,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;iBAC5C;aACJ;SACJ;QAEO,cAAc,CAAC,SAAqB,EAAE,QAAkB;YAC5D,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC;YACrD,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,aAAa,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;gBAC9B,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBACpC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACzC;aACJ;SACJ;QAED,aAAa,CAAC,GAAU;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,SAAS,EAAE;gBACX,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;oBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACnD,IAAI,SAAS,CAAC,OAAO,CAAC;2BACf,CAAC,SAAS,CAAC,OAAO,CAAC;2BACnB,OAAO,CAAC,IAAI,EAAE;wBACjB,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;qBAC5C;oBAED,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;iBAC5B;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;SAChC;KACJ;UAEY,UAAc,SAAQ,KAAK;QACpC,YAAY,IAAgB;YACxB,KAAK,CAAC,IAAI,CAAC,CAAC;SACf;KACJ;UAEY,cAAwB,SAAQ,SAAS;QAC1C,eAAe,GAAG,IAAI,GAAG,EAAiC,CAAC;QAEnE,gBAAgB,CAAgE,IAAgB,EAAE,QAAyB,EAAE,OAA2C;YACpK,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;gBAC5C,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACxD,IAAI,cAAc,IAAI,IAAI,EAAE;oBACxB,cAAc,GAAG,CAAC,GAAU,KAAK,QAAQ,CAAC,GAAQ,CAAC,CAAC;oBACpD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;iBACtD;gBAED,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;aACzD;SACJ;QAES,qBAAqB,CAAkB,KAAa,EAAE,SAA0B;YACtF,OAAO,IAAI,CAAC;SACf;QAED,mBAAmB,CAAgE,IAAgB,EAAE,QAAyB;YAC1H,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,cAAc,EAAE;gBAChB,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;aACnD;SACJ;QAED,aAAa,CAAkB,GAAM;YACjC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SACnC;QAES,aAAa,CAAkB,IAAO,KAAK;;;ICjGzD;;;UAGa,IAAI;QASO;QACA;QACC;QAVZ,IAAI,CAAoB;;;;;;;QAOjC,YACoB,GAAW,EACX,KAAU,EACT,cAAuB,EACxC,GAAG,IAAc;YAHD,QAAG,GAAH,GAAG,CAAQ;YACX,UAAK,GAAL,KAAK,CAAK;YACT,mBAAc,GAAd,cAAc,CAAS;YAExC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC;YACjD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACvB;;;;;QAMD,KAAK,CAAC,IAAiB;YACnB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;mBAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;mBACpC,SAAS,CAAC;YAEjB,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,+BAA+B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;aAClF;iBACI,IAAI,SAAS,EAAE;gBAChB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;aACrC;iBACI,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;gBAC3B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACzC;iBACI,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;iBACI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE;gBACtB,IAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;aACxC;iBACI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;gBAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAClC;iBACI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;aACnC;iBACI;gBACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3C;SACJ;KACJ;IAuRD;;;aAGgB,QAAQ,CAAC,KAAc,IAAI,OAAO,IAAI,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE;IA8XzG;;;aAGgB,WAAW,CAAC,KAAc,IAAI,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;UCrtBhG,OAAO;QAGI;QACA;QAHJ,IAAI,CAAS;QAC7B,YACoB,GAAW,EACX,KAAa;YADb,QAAG,GAAH,GAAG,CAAQ;YACX,UAAK,GAAL,KAAK,CAAQ;YAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChC,OAAO,GAAG,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;aACtC,CAAC,CAAC;SACN;;;;;QAMD,KAAK,CAAC,IAAyB;YAC1B,IAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SACxC;KACJ;UAEY,UAAU;QACX,IAAI,CAA2B;QACvC,YAAY,GAAG,IAA8B;YACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;;;;;QAMD,KAAK,CAAC,KAA0B;YAC5B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACrB;SACJ;KACJ;IAED;;;aAGgB,MAAM,CAAC,GAAG,IAA8B;QACpD,OAAO,IAAI,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;IACnC,CAAC;aAuBe,eAAe,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE;aA0ExE,KAAK,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;aAOpD,SAAS,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;aAiB5D,OAAO,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE;aAmBxD,UAAU,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE;aAmB9D,YAAY,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE;aAElE,UAAU,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE;aAa9D,MAAM,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;aAStD,IAAI,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE;aAyClD,OAAO,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE;aASxD,QAAQ,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;aAI1D,SAAS,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE;aAM5D,OAAO,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE;aAkBxD,aAAa,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE;aACpE,QAAQ,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;aAqE1D,GAAG,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;aAoBhD,KAAK,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;aAQpD,MAAM,CAAC,CAAS,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAIjF;;;aAGgB,iBAAiB;QAC7B,OAAO,qIAAqI,CAAC;IACjJ,CAAC;IAED;;;aAGgB,kBAAkB;QAC9B,OAAO,UAAU,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC3C;;ICnYA,SAAS,eAAe,CAAC,GAAQ;QAC7B,OAAO,QAAQ,CAAC,GAAG,CAAC;eACb,SAAS,IAAI,GAAG;eACf,GAAW,CAAC,OAAO,YAAY,IAAI,CAAC;IAChD,CAAC;IAED,SAAS,gBAAgB,CAAC,GAAQ;QAC9B,OAAO,QAAQ,CAAC,GAAG,CAAC;eACb,UAAU,IAAI,GAAG;eAChB,GAAW,CAAC,QAAQ,YAAY,KAAK,CAAC;IAClD,CAAC;aAUe,iBAAiB,CAAC,IAAiB,EAAE,OAAgB,EAAE,qBAA6B,OAAO;QACvG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,kBAAkB,GAAG,MAAM,CAAC;IAC/D,CAAC;IA2CD;;;;;;;;;;aAUgB,GAAG,CAAC,IAAY,EAAE,GAAG,IAAgB;QACjD,IAAI,IAAI,GAAuB,IAAI,CAAC;QAEpC,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;YACrB,IAAI,IAAI,YAAY,IAAI,EAAE;gBACtB,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;oBACnB,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC3C,MAAM;iBACT;qBACI,IAAI,IAAI,CAAC,GAAG,KAAK,UAAU,EAAE;oBAC9B,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1C,MAAM;iBACT;aACJ;SACJ;QAED,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,IAAI,EAAE;gBACX,IAAI,CAAC,YAAY,UAAU,EAAE;oBACzB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACvB;qBACI,IAAI,QAAQ,CAAC,CAAC,CAAC;uBACb,QAAQ,CAAC,CAAC,CAAC;uBACX,SAAS,CAAC,CAAC,CAAC;uBACZ,CAAC,YAAY,IAAI;uBACjB,CAAC,YAAY,IAAI;uBACjB,eAAe,CAAC,CAAC,CAAC,EAAE;oBAEvB,IAAI,eAAe,CAAC,CAAC,CAAC,EAAE;wBACpB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;qBACjB;yBACI,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC,EAAE;wBAC3B,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC;qBACnD;oBAED,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBACvB;qBACI,IAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE;oBAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAC9B;qBACI;oBACD,IAAI,CAAC,YAAY,QAAQ,EAAE;wBACvB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;qBACf;oBAED,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,UAAU,EAAE;wBAC9C,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;qBACjB;iBACJ;aACJ;SACJ;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAWD;;;aAGgB,oBAAoB,CAAC,IAAiB;QAClD,OAAO,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SAC3B;IACL,CAAC;aAmBe,KAAK,CAAC,GAAG,IAAgB,IAAgC,OAAO,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAA+B,CAAC,EAAE;aA0BtH,GAAG,CAAC,GAAG,IAAgB,IAAoB,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,IAAI,CAAmB,CAAC,EAAE;IAqM1G;;;aAGgB,QAAQ,CAAC,GAAQ;QAC7B,OAAO,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACxC;;IChaA;;;UAGa,oBAAoB,GAAG,UAAU,CAAE,gBAAgB,CAAC,SAAiB,CAAC,SAAS,EAAE;IAG9F,SAAS,sBAAsB,CAAC,OAA0B;QACtD,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACrC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;gBAChD,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC7D;YAED,IAAI,CAAC,KAAK,EAAE;gBACR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpB;SACJ;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;UAEY,+BACT,SAAQ,UAA2B;QACA;QAAwC;QAA3E,YAAmC,KAAsB,EAAkB,KAAsB;YAC7F,KAAK,CAAC,eAAe,CAAC,CAAC;YADQ,UAAK,GAAL,KAAK,CAAiB;YAAkB,UAAK,GAAL,KAAK,CAAiB;SAEhG;KACJ;UAEY,oCACT,SAAQ,UAAgC;QACL;QAAnC,YAAmC,MAAuB;YACtD,KAAK,CAAC,oBAAoB,CAAC,CAAC;YADG,WAAM,GAAN,MAAM,CAAiB;SAEzD;KACJ;IAED,MAAM,6BAA6B,GAAG,8BAA8B,CAAC;IACrE,MAAM,4BAA4B,GAAG,6BAA6B,CAAC;IACnE,MAAM,4BAA4B,GAAG,6BAA6B,CAAC;UAEtD,aACT,SAAQ,cAGN;QAgCiB;QA9BX,OAAO,GAA+B,IAAI,CAAC;QAE3C,mBAAmB,GAAG,KAAK,CAAC;QACpC,IAAI,kBAAkB;YAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;SACnC;QAEO,mBAAmB,GAAG,KAAK,CAAC;QACpC,IAAI,kBAAkB;YAClB,OAAO,IAAI,CAAC,mBAAmB,CAAC;SACnC;QAEO,cAAc,GAAgB,IAAI,CAAC;QAC3C,IAAI,aAAa;YACb,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;QAED,IAAI,aAAa,CAAC,CAAc;YAC5B,IAAI,CAAC,KAAK,IAAI,CAAC,aAAa,EAAE;gBAC1B,IAAI,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;uBAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;oBAC9B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE;wBAChD,KAAK,CAAC,IAAI,EAAE,CAAC;qBAChB;iBACJ;gBAED,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aAC3B;SACJ;QAED,YAAmB,mBAAmB,KAAK;YACvC,KAAK,EAAE,CAAC;YADO,qBAAgB,GAAhB,gBAAgB,CAAQ;YAGvC,IAAI,oBAAoB,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAChB,WAAW,EACX,QAAQ,EACR,MAAM,CACF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE1B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3C;SACJ;QAED,MAAM,cAAc,CAAC,WAA4C;YAC7D,IAAI;gBACA,IAAI,oBAAoB,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBACvE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;oBAC5C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBACnD,MAAM,MAAM,GAAG,SAAS,CACpB,OAAO,EACP,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,sBAAsB,EACjD,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,SAAS,EAC/B,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAClC,IAAI,MAAM,EAAE;wBACR,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;qBAC3C;oBACD,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;iBAC7B;aACJ;YACD,OAAO,GAAG,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACtB;SACJ;QAED,MAAM,KAAK;YACP,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACvC,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAC1C;QAED,MAAM,yBAAyB;YAC3B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACnD,IAAI,MAAM,EAAE;gBACR,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;aAC1C;SACJ;QAED,MAAM,yBAAyB;YAC3B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACnD,IAAI,MAAM,EAAE;gBACR,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;aAC1C;SACJ;QAED,IAAI,sBAAsB;YACtB,IAAI,CAAC,oBAAoB,EAAE;gBACvB,OAAO,IAAI,CAAC;aACf;YAED,OAAO,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;SAC9D;QAEO,yBAAyB,CAAC,CAAS;YACvC,IAAI,oBAAoB,EAAE;gBACtB,YAAY,CAAC,OAAO,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;aAC1D;SACJ;QAGD,IAAI,qBAAqB;YACrB,OAAO,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;SAC7D;QAEO,wBAAwB,CAAC,CAAS;YACtC,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC;SACzD;QAED,IAAI,qBAAqB;YACrB,OAAO,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;SAC7D;QAEO,wBAAwB,CAAC,CAAS;YACtC,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC;SACzD;QAED,MAAM,qBAAqB,CAAC,mBAA4B,KAAK;YACzD,IAAI,CAAC,oBAAoB,EAAE;gBACvB,OAAO,EAAE,CAAC;aACb;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;YACjE,OAAO,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC;SAC/C;QAED,MAAM,oBAAoB,CAAC,mBAA4B,KAAK;YACxD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;YACjE,OAAO,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;SAC9C;QAED,MAAM,oBAAoB,CAAC,mBAA4B,KAAK;YACxD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;YACjE,OAAO,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;SAC9C;QAED,MAAM,oBAAoB;YACtB,IAAI,CAAC,oBAAoB,EAAE;gBACvB,OAAO,IAAI,CAAC;aACf;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAClD,IAAI,iBAAiB,CAAC,KAAK,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC;aACf;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,EAC9C,MAAM,GAAG,SAAS,CAAC,OAAO,EACtB,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC;YAEnC,OAAO,MAAM,CAAC;SACjB;QAED,MAAM,mBAAmB;YACrB,IAAI,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;mBAClC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACf;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACtD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC;aACf;YAED,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClD,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,EAC5B,CAAC,IAAI,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAEtC,OAAO,MAAM,CAAC;SACjB;QAED,MAAM,mBAAmB;YACrB,IAAI,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC;mBAClC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACf;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACtD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC;aACf;YAED,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClD,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,EAC5B,CAAC,IAAI,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAEtC,OAAO,MAAM,CAAC;SACjB;QAEO,MAAM,sBAAsB;YAChC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClD,MAAM,MAAM,GAAG,SAAS,CACpB,OAAO,EACP,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,qBAAqB,EAChD,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,SAAS,EAC/B,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClC,OAAO,MAAM,CAAC;SACjB;QAEO,MAAM,sBAAsB;YAChC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClD,MAAM,MAAM,GAAG,SAAS,CACpB,OAAO,EACP,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,qBAAqB,EAChD,CAAC,CAAC,KAAK,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3D,OAAO,MAAM,CAAC;SACjB;QAED,MAAM,oBAAoB,CAAC,MAAuB;YAC9C,IAAI,oBAAoB,EAAE;gBACtB,IAAI,MAAM,CAAC,IAAI,KAAK,aAAa,EAAE;oBAC/B,MAAM,IAAI,KAAK,CAAC,8CAA8C,MAAM,CAAC,IAAI,YAAY,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;iBACxG;gBAED,IAAI,CAAC,yBAAyB,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;gBAClE,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,MAAM,WAAW,GAAG,SAAS,IAAI,SAAS,CAAC,MAAM,CAAC;gBAClD,IAAI,IAAI,CAAC,sBAAsB,KAAK,WAAW,EAAE;oBAC7C,IAAI,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE;wBACxC,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;qBAC7D;oBACD,IAAI,CAAC,aAAa,CAAC,IAAI,oCAAoC,CAAC,MAAM,CAAC,CAAC,CAAC;iBACxE;aACJ;SACJ;QAED,MAAM,mBAAmB,CAAC,QAAyB;YAC/C,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,MAAM,IAAI,KAAK,CAAC,6CAA6C,QAAQ,CAAC,IAAI,YAAY,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;aAC3G;YAED,IAAI,CAAC,wBAAwB,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;YACrE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAClD,MAAM,UAAU,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC;YACjD,IAAI,IAAI,CAAC,qBAAqB,KAAK,UAAU,EAAE;gBAC3C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,IAAI,+BAA+B,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC/E;SACJ;QAED,MAAM,mBAAmB,CAAC,QAAyB;YAC/C,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,EAAE;gBAChC,MAAM,IAAI,KAAK,CAAC,6CAA6C,QAAQ,CAAC,IAAI,YAAY,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;aAC3G;YAED,IAAI,CAAC,wBAAwB,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;YACrE,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAClD,MAAM,UAAU,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC;YACjD,IAAI,IAAI,CAAC,qBAAqB,KAAK,UAAU,EAAE;gBAC3C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,IAAI,+BAA+B,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC/E;SACJ;QAEO,MAAM,mBAAmB,CAAC,mBAA4B,KAAK;YAC/D,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YAEtC,IAAI,gBAAgB,EAAE;gBAClB,OAAO,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;aAC7C;YAED,OAAO;gBACH,WAAW,EAAE,oBAAoB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,GAAG,EAAE;gBACtF,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;gBACxD,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;aAC3D,CAAC;SACL;QAEO,MAAM,UAAU;YACpB,IAAI,OAAO,GAAsB,IAAI,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,OAAO,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;gBAC1D,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;oBAC1B,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC5B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;4BAC1B,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,KAAK,YAAY;mCAChD,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;yBAClC;wBAED,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;4BACnD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,KAAK,YAAY;mCAChD,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;yBAClC;qBACJ;iBACJ;gBAED,IAAI,IAAI,CAAC,kBAAkB;wBACnB,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE;oBACxD,MAAM;iBACT;gBAED,IAAI;oBACA,IAAI,CAAC,IAAI,CAAC,kBAAkB;2BACrB,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;wBAEtD,IAAI,CAAC,aAAa,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;4BAC3D,KAAK,EAAE,IAAI,CAAC,qBAAqB;mCAC1B,EAAE,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE;mCACxC,IAAI;4BACX,KAAK,EAAE,IAAI,CAAC,gBAAgB;oCACpB,IAAI,CAAC,qBAAqB;uCACvB,EAAE,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE;uCACxC,IAAI,CAAC;mCACT,KAAK;yBACf,CAAC,CAAC;qBACN;iBACJ;gBACD,OAAO,GAAG,EAAE;oBACR,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;aACJ;YAED,OAAO,GAAG,cAAc,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;YACtD,OAAO,OAAO,CAAC;SAClB;QAED,MAAM,mBAAmB;YACrB,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxB,OAAO;gBACH,KAAK,EAAE,IAAI,CAAC,kBAAkB;gBAC9B,KAAK,EAAE,IAAI,CAAC,kBAAkB;aACjC,CAAC;SACL;;;UC7VQ,UAAqC,SAAQ,KAAK;QACxC;QAAnB,YAAmB,SAAY;YAC3B,KAAK,CAAC,SAAS,CAAC,CAAC;YADF,cAAS,GAAT,SAAS,CAAG;SAE9B;KACJ;UAuBY,cAAyC,SAAQ,UAAa;QAC3C;QAA5B,YAAY,IAAO,EAAS,EAAU;YAClC,KAAK,CAAC,IAAI,CAAC,CAAC;YADY,OAAE,GAAF,EAAE,CAAQ;SAErC;KACJ;IAgFD,IAAY,UAGX;IAHD,WAAY,UAAU;QAClB,6BAAe,CAAA;QACf,6BAAe,CAAA;IACnB,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;IAED,IAAY,YAIX;IAJD,WAAY,YAAY;QACpB,+BAAe,CAAA;QACf,mCAAmB,CAAA;QACnB,mCAAmB,CAAA;IACvB,CAAC,EAJW,YAAY,KAAZ,YAAY;;ICpJxB,IAAY,eAKX;IALD,WAAY,eAAe;QACvB,gDAA6B,CAAA;QAC7B,4CAAyB,CAAA;QACzB,0CAAuB,CAAA;QACvB,kDAA+B,CAAA;IACnC,CAAC,EALW,eAAe,KAAf,eAAe;;UCOL,kBAClB,SAAQ,cAAmC;QAG3C,MAAM,OAAO,CAAsC,OAAU,EAAE,MAAc;YACzE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO;gBACvB,MAAM,MAAM,GAAG,CAAC,GAA2B;oBACvC,IAAI,GAAG,YAAY,cAAc;2BAC1B,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE;wBACtB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBAC1C,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;iBACJ,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aAC1C,CAAC,CAAC;SACN;QAID,IAAI,WAAW;YACX,OAAO,IAAI,CAAC,aAAa,KAAK,eAAe,CAAC,SAAS,CAAC;SAC3D;QAMD,YAAY,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACnH,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SACtE;QAED,aAAa,CAAC,MAAc,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACpI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SACpF;QAED,eAAe,CAAC,IAAY,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACpI,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC9E;QAED,cAAc,CAAC,KAAa;YACxB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;SAC9C;QAED,eAAe,CAAC,MAAc,EAAE,KAAa;YACzC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;SAC5D;QAED,YAAY,CAAC,GAAW;YACpB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;SAC1C;QAED,aAAa,CAAC,MAAc,EAAE,GAAW;YACrC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC;SACxD;QAED,KAAK,CAAC,KAAa;YACf,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,IAAY;YACb,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SACnC;;;aC1DW,SAAS,CAAC,GAAsB,EAAE,OAAe;QAC7D,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,GAAG,IAAW;YACzC,IAAI,cAAc,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;aAClD;SACJ,CAAC,CAAC;IACP,CAAC;UAEY,qBAAqB,GAAG,aAAa;IAElD,IAAI,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,WAAW;WACtD,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;UAE1B,wBAClB,SAAQ,cAAyC;QAmCV;QAA6B;QAhCpE,aAAa;YACT,cAAc,GAAG,CAAC,cAAc,CAAC;SACpC;QAED,WAAW,GAAW,IAAI,CAAC;QAC3B,aAAa,GAAW,IAAI,CAAC;QAC7B,QAAQ,GAAW,IAAI,CAAC;QAEd,OAAO,CAAW;QAEpB,gBAAgB,GAAG,eAAe,CAAC,YAAY,CAAC;QAChD,gBAAgB,GAAG,eAAe,CAAC,YAAY,CAAC;QAExD,kBAAkB,GAAG,KAAK,CAAC;QAC3B,kBAAkB,GAAG,KAAK,CAAC;QAE3B,IAAI,eAAe;YACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;QAEO,kBAAkB,CAAC,KAAsB;YAC7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SACjC;QAED,IAAI,eAAe;YACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;QAEO,kBAAkB,CAAC,KAAsB;YAC7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SACjC;QAED,YAAY,OAAiB,EAAU,MAAoB,EAAS,mBAAmB,KAAK;YACxF,KAAK,EAAE,CAAC;YAD2B,WAAM,GAAN,MAAM,CAAc;YAAS,qBAAgB,GAAhB,gBAAgB,CAAQ;YAGxF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAEvB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAEhF,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;YACxG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;YACxG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;YAE9G,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;YACzG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5G,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3G,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7G;QAED,IAAI,KAAK;YACL,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;SAC9B;QAES,aAAa,CAAkB,GAAM;YAC3C,IAAI,GAAG,YAAY,cAAc;oBACzB,GAAG,CAAC,EAAE,IAAI,IAAI;uBACX,GAAG,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,WAAW,KAAK,qBAAqB,EAAE;oBAC5C,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC;iBACjB;qBACI;oBACD,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;iBAC7B;aACJ;SACJ;QAED,MAAM,OAAO,CAA4C,OAAU,EAAE,MAAc;YAC/E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO;gBACvB,MAAM,MAAM,GAAG,CAAC,GAAiC;oBAC7C,IAAI,GAAG,YAAY,cAAc;2BAC1B,GAAG,CAAC,EAAE,KAAK,MAAM,EAAE;wBACtB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBAC1C,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;iBACJ,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aAC1C,CAAC,CAAC;SACN;QAED,MAAM,OAAO;YACT,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SACvD;QAED,MAAM,IAAI,CAAC,SAAiB,EAAE,SAAkB;YAC5C,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SACvD;QAED,MAAM,KAAK;YACP,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SAC1D;QAED,MAAM,UAAU;YACZ,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SAC1D;;;IC9HL;IASwB,QAAQ,IAAI,UAAU,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE;IAE9D,gCAAgC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAC5D,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAGhC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IACxC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;WACzD,6BAA6B,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;WACtD,SAAS,CAAC,QAAQ,KAAK,UAAU,IAAI,SAAS,CAAC,cAAc,GAAG,EAAE;IAClD,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,EAAE,EAAE;IAEvC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IACxC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAQpE,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAClC,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAC9C,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IAC9C,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;IACrD,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;WACxD;;aCnCS,cAAc,CAAC,GAAkB;QAC7C,OAAO,EAAE,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IACvE;;ICOA,IAAY,WAIX;IAJD,WAAY,WAAW;QACnB,0BAAW,CAAA;QACX,gCAAiB,CAAA;QACjB,8BAAe,CAAA;IACnB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;IAEM,MAAM,GAAG,GAAG,sBAAsB,CAAC;aAS1B,yBAAyB,CAAC,IAAS;QAC/C,OAAO,SAAS,CAAC,IAAI,CAAC;eACf,KAAK,IAAI,IAAI;eACb,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC;IAC5B;;ICtBA,SAAS,KAAK,CAAC,CAAS,EAAE,CAAS;QAC/B,OAAO,MAAM,CACT,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EACvB,kBAAkB,EAAE,CAAC,CAAC;IAC9B,CAAC;UAEY,YAAY;QACb,IAAI,GAAG,IAAI,GAAG,EAAsB,CAAC;QACrC,IAAI,GAAG,IAAI,GAAG,EAAyB,CAAC;QACxC,SAAS,CAAc;QACvB,IAAI,CAAc;QAClB,WAAW,GAAG,CAAC,CAAC;QAExB;YACI,IAAI,CAAC,SAAS,GAAG,GAAG,CAChB,MAAM,CACF,QAAQ,CAAC,OAAO,CAAC,EACjB,OAAO,CAAC,MAAM,CAAC,EACf,GAAG,CAAC,GAAG,CAAC,EACR,IAAI,CAAC,GAAG,CAAC,EACT,KAAK,CAAC,MAAM,CAAC,EACb,MAAM,CAAC,MAAM,CAAC,EACd,MAAM,CAAC,IAAI,CAAC,EACZ,OAAO,CAAC,KAAK,CAAC,EACd,OAAO,CAAC,KAAK,CAAC,EACd,eAAe,CAAC,OAAO,CAAC,EACxB,KAAK,CAAC,OAAO,CAAC,EACd,QAAQ,CAAC,QAAQ,CAAC,EAClB,aAAa,CAAC,MAAM,CAAC,CAAC,EAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CACX,MAAM,CACF,OAAO,CAAC,MAAM,CAAC,EACf,SAAS,CAAC,MAAM,CAAC,EACjB,SAAS,CAAC,OAAO,CAAC,EAClB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE1C,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,GAAG;gBACpC,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;oBACxC,iBAAiB,CACb,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;iBAChD;aACJ,CAAC,CAAC;SACN;QAEO,MAAM;YACV,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAU,CAAC;YACrC,KAAK,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBACpB,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;wBACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBAC/B;oBACD,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACrB;aACJ;YAED,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACxB;YAED,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACrC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,eAAe,QAAQ,QAAQ,CAAC;YAEtE,KAAK,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;gBAClC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC5B,IAAI,CAAC,GAAG,EAAE;oBACN,GAAG,GAAG;wBACF,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACpB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;4BACf,MAAM,MAAM,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;4BACvC,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACrC,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;4BACzC,OAAO,IAAI,CAAC;yBACf,CAAC;qBACL,CAAC;oBACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;oBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;iBAC5B;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBACpC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAgB,CAAC;oBACvC,oBAAoB,CAAC,IAAI,CAAC,CAAC;oBAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;SACJ;QAED,GAAG,CAAC,EAAU,EAAE,GAAG,MAAa;YAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;QAED,MAAM,CAAC,EAAU;YACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;QAED,KAAK;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;QAED,SAAS,CAAC,IAAY,EAAE,MAAc;YAClC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,GAAG;gBACnC,MAAM,IAAI,GAAG,UAAU,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC9D,IAAI,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACrC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM;wBACnB,KAAK,WAAW,CAAC,GAAG;4BAChB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACjD,MAAM;wBACV,KAAK,WAAW,CAAC,MAAM;4BACnB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAChC,MAAM;wBACV,KAAK,WAAW,CAAC,KAAK;4BAClB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;gCAChC,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;oCACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iCACpB;6BACJ;4BACD,MAAM;wBACV;4BACI,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;iBACJ;aACJ,CAAC,CAAC;YAEH,EAAE,IAAI,CAAC,WAAW,CAAC;SACtB;;;ICvIL,MAAM,MAAM,GAEN,IAAI,YAAY,EAAE,CAAC;UAEZ,MAAM;QAEf,GAAG,CAAC,EAAU,EAAE,GAAG,MAAa;YAC5B,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;SAC7B;QAED,MAAM,CAAC,EAAU;YACb,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACrB;QAED,KAAK;YACD,MAAM,CAAC,KAAK,EAAE,CAAC;SAClB;QAED,SAAS,CAAC,IAAY,EAAE,MAAc;YAClC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAClC;;;ICzBL;;;UAGa,kBAAmB,SAAQ,KAAK;QACzC,EAAE,GAAW,IAAI,CAAC;QAClB,QAAQ,GAAY,KAAK,CAAC;;QAG1B;YACI,KAAK,CAAC,eAAe,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;;;;;;QAOD,GAAG,CAAC,EAAU,EAAE,QAAiB;YAC7B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;;;ICEL,IAAY,WAQX;IARD,WAAY,WAAW;QACnB,6CAA8B,CAAA;QAC9B,uDAAwC,CAAA;QACxC,sCAAuB,CAAA;QACvB,wCAAyB,CAAA;QACzB,sCAAuB,CAAA;QACvB,wCAAyB,CAAA;QACzB,yCAA0B,CAAA;IAC9B,CAAC,EARW,WAAW,KAAX,WAAW,QAQtB;IAED,MAAM,gBAAgB,GAAG,IAAI,kBAAkB,EAAE,CAAC;UAErC,KACT,SAAQ,cAAiC;QAO7B;QACA;QACA;QANZ,YAAY,GAAY,IAAI,CAAC;QAC7B,YAAY,GAAY,IAAI,CAAC;QAE7B,YACY,QAAkB,EAClB,KAA+B,EAC/B,KAAyB;YACjC,KAAK,EAAE,CAAC;YAHA,aAAQ,GAAR,QAAQ,CAAU;YAClB,UAAK,GAAL,KAAK,CAA0B;YAC/B,UAAK,GAAL,KAAK,CAAoB;YAGjC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE1C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;YAEvD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;YAC3D,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;YAE3D,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,OAAO,GAA+B;gBAClF,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC/C,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,GAA6B;gBACxE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,OAAO,OAAoC;gBACxF,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,GAA8B;gBAC1E,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aACjC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAEjD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,GAA+B;gBACtE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACxC,IAAI,IAAI,EAAE;oBACN,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,MAAM,EAAE;wBACR,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACjC;oBAED,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAEnC,IAAI,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;wBACnC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;qBAC5C;oBAED,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;iBAC3B;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,GAAiC;gBAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACxC,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACjC;gBAED,IAAI,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACnC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;iBAC1C;gBAED,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAEjD,MAAM,SAAS,GAAG,CAAC,OAAoD;gBACnE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,EAAE;oBACH,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtB;gBACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aAC/B,CAAC;YAEF,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YAEtD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,GAAwB;gBAC9D,IAAI,CAAC,KAAK,CAAC,WAAW,CAClB,GAAG,CAAC,EAAE,EACN,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EACtB,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EACtB,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC5B,SAAS,CAAC,GAAG,CAAC,CAAC;aAClB,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,GAAuB;gBACjE,gBAAgB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;gBAC7B,gBAAgB,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;gBACzC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;aACxC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YACjD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC3C,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YAE7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;QAED,IAAI,eAAe;YACf,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;SACrC;QAED,IAAI,eAAe;YACf,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;SACrC;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;QAED,IAAI,IAAI;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAED,IAAI,IAAI;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAED,IAAI,KAAK;YACL,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;SAC3B;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SACnC;QAEO,QAAQ,GAAG,KAAK,CAAC;QACzB,OAAO;YACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxB;SACJ;QAED,IAAI,YAAY;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;SAClC;QAED,IAAI,YAAY,CAAC,CAAS;YACtB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;SAC/B;QAED,YAAY,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACnH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC/D;QAED,aAAa,CAAC,MAAc,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACpI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SACxE;QAED,eAAe,CAAC,IAAY,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;YACpI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SACxE;QAED,cAAc,CAAC,KAAa;YACxB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACpC;QAED,eAAe,CAAC,MAAc,EAAE,KAAa;YACzC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC7C;QAED,YAAY,CAAC,GAAW;YACpB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SAChC;QAED,aAAa,CAAC,MAAc,EAAE,GAAW;YACrC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SACzC;QAED,KAAK,CAAC,KAAa;YACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,IAAY;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,MAAM,gBAAgB;YAClB,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;SAC9C;QAED,MAAM,gBAAgB;YAClB,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;SAC9C;QAED,MAAM,aAAa;YACf,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC3C;QAED,MAAM,aAAa;YACf,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC3C;QAED,IAAI,aAAa;YACb,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;SACnC;QAED,IAAI,WAAW;YACX,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;SACjC;QAED,IAAI,aAAa;YACb,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;SACnC;QAED,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SAC9B;QAED,UAAU,CAAC,EAAU;YACjB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACpC;QAED,YAAY;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SACpC;QAED,MAAM,OAAO;YACT,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,KAAK,eAAe,CAAC,SAAS,EAAE;gBAC1D,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;aAC9B;SACJ;QAED,MAAM,IAAI,CAAC,QAAgB;YACvB,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YAC5B,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,KAAK,eAAe,CAAC,SAAS,EAAE;gBAC1D,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;gBACxC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACnC;YACD,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC9B;QAED,MAAM,QAAQ,CAAC,QAAgB;YAC3B,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/C;QAED,MAAM,KAAK;YACP,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC5B;QAED,MAAM,UAAU;YACZ,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;YAC9B,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;SACjC;QAED,MAAM,oBAAoB,CAAC,MAAuB;YAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SACnD;QAED,MAAM,aAAa,CAAC,KAAc;YAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;YAChC,IAAI,KAAK,KAAK,OAAO,EAAE;gBACnB,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3C;YACD,OAAO,OAAO,CAAC;SAClB;QAED,MAAM,aAAa,CAAC,KAAc;YAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;YAChC,IAAI,KAAK,KAAK,OAAO,EAAE;gBACnB,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3C;YACD,OAAO,OAAO,CAAC;SAClB;;;;;IChUL,OAAO,CAAC,IAAI,CAAC,UAAU,OAAO,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;"}