import { mat4, vec3 } from "gl-matrix";
import { Context3D } from "../webgl/Context3D";
export declare class Camera {
    private _proj;
    private _view;
    private _heading;
    private _pitch;
    private _aspect;
    private _fov;
    private _near;
    private _far;
    gamma: number;
    private _rot;
    private _pos;
    constructor(ctx: Context3D, fov?: number, near?: number, far?: number);
    get projection(): mat4;
    get fov(): number;
    set fov(v: number);
    get aspect(): number;
    get near(): number;
    set near(v: number);
    get far(): number;
    set far(v: number);
    private refreshProjection;
    get view(): mat4;
    get heading(): number;
    get pitch(): number;
    private _rotateBy;
    private _rotateTo;
    private _moveBy;
    private _moveTo;
    rotateBy(dHeading: number, dPitch: number): void;
    rotateTo(heading: number, pitch: number): void;
    moveBy(dPos: vec3): void;
    moveTo(pos: vec3): void;
    rotateAndMoveBy(dHeading: number, dPitch: number, dPos: vec3): void;
    rotateAndMoveTo(heading: number, pitch: number, pos: vec3): void;
    private refreshView;
}
